var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.7","fields":["title","body"],"fieldVectors":[["title/interfaces/BaseTx.html",[0,0.366,1,1.86]],["body/interfaces/BaseTx.html",[0,0.624,1,2.105,2,0.065,3,0.065,4,0.065,5,0.055,6,0.632,7,1.076,8,0.523,9,2.21,10,2.767,11,2.485,12,0.122,13,0.241,14,1.844,15,1.921,16,0.226,17,0.113,18,0.015,19,0.324,20,1.129,21,1.076,22,3.244,23,1.076,24,2.897,25,2.51,26,1.076,27,1.699,28,1.699,29,1.076,30,2.391,31,2.21,32,1.076,33,1.129,34,1.076,35,1.129,36,1.076,37,1.129,38,1.076,39,1.129,40,1.076,41,2.732,42,1.783,43,1.129,44,1.783,45,1.129,46,1.783,47,1.129,48,1.783,49,1.129,50,1.783,51,1.129,52,1.129,53,1.783,54,1.129,55,0.901,56,0.901,57,2.603,58,2.105,59,0.178,60,3.283,61,2.904,62,2.21,63,2.904,64,3.003,65,1.129,66,1.129,67,1.129,68,2.21,69,1.129,70,3.22,71,2.51,72,2.21,73,1.622,74,1.129,75,3.142,76,1.783,77,2.105,78,1.622,79,1.129,80,3.244,81,1.699,82,0.385,83,1.783,84,1.129,85,1.129,86,1.129,87,1.129,88,1.129,89,1.623,90,1.129,91,1.129,92,1.699,93,1.699,94,3.152,95,1.076,96,3.152,97,1.129,98,0.296,99,1.076,100,1.076,101,1.076,102,1.4,103,3.041,104,1.129,105,1.46,106,1.404,107,1.129,108,1.129,109,1.129,110,1.129,111,1.783,112,1.129,113,1.129,114,1.129,115,1.24,116,1.699,117,2.182,118,2.732,119,1.921,120,1.699,121,0.691,122,0.58,123,1.783,124,1.699,125,1.484,126,1.55,127,1.783,128,1.037,129,1.783,130,1.783,131,1.129,132,1.622,133,1.783,134,1.129,135,1.129,136,1.129,137,1.129,138,1.129,139,1.129,140,1.129,141,1.129,142,1.783,143,1.129,144,0.94,145,1.129,146,1.129,147,1.129,148,1.55,149,1.076,150,0.94,151,1.129,152,1.076,153,1.129,154,1.129,155,1.129,156,0.766,157,1.129,158,1.259,159,1.129,160,0.94,161,2.21,162,1.129,163,0.797,164,1.129,165,2.134,166,1.129,167,2.904,168,1.129,169,1.129,170,1.129,171,2.866,172,1.129,173,1.129,174,1.129,175,1.129,176,1.129,177,1.783,178,1.129,179,1.129,180,1.783,181,1.699,182,2.603,183,2.525,184,2.904,185,1.783,186,1.699,187,1.129,188,1.129,189,0.766,190,2.51,191,1.129,192,2.282,193,2.182,194,3.134,195,1.129,196,1.699,197,2.51,198,2.282,199,2.641,200,1.129,201,1.129,202,2.641,203,3.041,204,1.129,205,1.076,206,2.51,207,2.21,208,2.21,209,2.21,210,1.129,211,1.076,212,1.129,213,1.129,214,1.129,215,1.129,216,1.129,217,1.129,218,0.01,219,1.365,220,1.783,221,1.129,222,1.129,223,2.603,224,2.282,225,1.129,226,1.129,227,1.129,228,1.129,229,1.129,230,1.129,231,1.129,232,1.129,233,1.129,234,1.783,235,1.783,236,2.21,237,1.129,238,1.129,239,1.783,240,2.21,241,1.027,242,1.129,243,1.129,244,1.129,245,1.027,246,1.129,247,1.129,248,1.129,249,1.129,250,1.129,251,1.129,252,1.129,253,1.129,254,1.783,255,2.21,256,1.129,257,1.129,258,1.129,259,1.129,260,1.129,261,1.076,262,1.027,263,2.51,264,1.699,265,1.129,266,1.027,267,1.783,268,1.129,269,2.51,270,1.129,271,1.783,272,1.129,273,1.129,274,1.783,275,1.129,276,1.783,277,1.129,278,1.129,279,1.129,280,1.129,281,1.129,282,1.129,283,1.129,284,1.129,285,2.732,286,0.926,287,2.732,288,1.387,289,1.783,290,1.129,291,1.783,292,1.129,293,1.129,294,1.783,295,1.129,296,1.129,297,1.129,298,1.129,299,1.129,300,2.51,301,1.129,302,1.129,303,1.129,304,1.129,305,1.129,306,1.129,307,1.129,308,0.864,309,1.129,310,1.129,311,1.783,312,0.523,313,1.783,314,0.197,315,1.129,316,1.783,317,1.783,318,1.783,319,1.783,320,1.783,321,1.783,322,1.783,323,1.783,324,1.783,325,1.129,326,1.129,327,1.027,328,1.129,329,1.129,330,1.129,331,1.783,332,1.129,333,1.129,334,1.129,335,1.027,336,1.129,337,1.783,338,1.783,339,1.129,340,1.129,341,1.129,342,1.129,343,1.129,344,1.129,345,1.129,346,1.129,347,0.006,348,0.004]],["title/interfaces/Credit.html",[0,0.366,349,1.18]],["body/interfaces/Credit.html",[0,0.759,2,0.116,3,0.116,4,0.116,5,0.1,12,0.22,13,0.372,16,0.237,17,0.144,18,0.015,19,0.249,59,0.196,82,0.753,98,0.99,106,0.778,121,0.463,122,1.085,218,0.007,314,0.542,347,0.01,348,0.007,349,2.105,350,1.231,351,2.776,352,2.094,353,2.094,354,2.094,355,1.955,356,1.279,357,1.279,358,0.635,359,1.098,360,0.662,361,0.778,362,1.662,363,1.727,364,1.727,365,1.882,366,1.662,367,1.727,368,1.727,369,1.231,370,1.662,371,1.279,372,1.279,373,2.015,374,1.279,375,1.662,376,0.981,377,1.279,378,1.662,379,1.279,380,1.727,381,2.105,382,1.231,383,1.279,384,1.662,385,1.279,386,1.279,387,1.662,388,1.279,389,1.662,390,1.279,391,1.882,392,1.279,393,1.279,394,1.727,395,1.279,396,1.279,397,1.231,398,1.279,399,1.141,400,1.231,401,1.662,402,1.279,403,1.279,404,1.279,405,1.279,406,1.279,407,1.279,408,1.279,409,1.279,410,0.662,411,1.279,412,1.185,413,1.279,414,1.882,415,1.279,416,1.279,417,1.279,418,1.279,419,1.279,420,1.279,421,1.279,422,0.981,423,1.279,424,1.231,425,0.981,426,1.677,427,1.882,428,1.727,429,1.279,430,1.279,431,1.279,432,0.944,433,1.279,434,0.507,435,1.662,436,1.279,437,1.279,438,1.141,439,1.231,440,1.279,441,1.279,442,1.279,443,1.279,444,1.279,445,1.279,446,1.279,447,1.279,448,1.279,449,1.279,450,1.279,451,1.141,452,1.185,453,1.279,454,1.279,455,1.279,456,1.279,457,1.279,458,1.279,459,1.279,460,0.787,461,1.01,462,1.018,463,0.981,464,0.778,465,1.231,466,1.141,467,1.058,468,0.944]],["title/interfaces/DeliveryContent.html",[0,0.366,469,3.408]],["body/interfaces/DeliveryContent.html",[0,0.232,2,0.071,3,0.071,4,0.071,5,0.061,6,0.693,8,1.58,12,0.133,13,0.259,14,1.938,15,2.408,16,0.217,17,0.134,18,0.015,19,0.212,59,0.094,75,2.624,77,1.179,100,1.825,101,1.179,102,1.247,105,1.449,106,0.473,115,1.303,119,1.076,122,0.623,126,1.076,128,0.72,144,1.951,148,2.294,158,2.574,165,0.909,171,2.019,181,1.179,196,2.514,198,1.126,211,3.098,218,0.004,261,2.233,286,0.649,335,1.126,347,0.007,348,0.004,358,0.386,434,0.486,460,0.354,461,0.455,469,4.091,470,2.489,471,3.852,472,3.852,473,6.711,474,4.712,475,3.174,476,3.647,477,6.303,478,3.611,479,6.856,480,2.998,481,3.82,482,3.852,483,3.852,484,1.944,485,1.944,486,1.783,487,2.489,488,1.03,489,1.916,490,1.951,491,1.546,492,1.374,493,2.16,494,3.344,495,2.489,496,2.16,497,2.489,498,2.489,499,1.076,500,2.489,501,3.852,502,3.852,503,6.068,504,2.489,505,6.327,506,3.852,507,2.489,508,2.489,509,2.489,510,4.712,511,3.852,512,4.712,513,3.852,514,4.712,515,4.712,516,4.712,517,2.489,518,2.489,519,2.489,520,5.675,521,4.712,522,5.305,523,6.068,524,4.346,525,2.489,526,1.825,527,5.305,528,1.944,529,1.944,530,2.489,531,2.489,532,1.944,533,1.944,534,2.559,535,2.489,536,5.738,537,3.564,538,5.305,539,2.928,540,4.98,541,6.068,542,3.852,543,4.712,544,1.114,545,3.852,546,3.009,547,2.489,548,2.489,549,2.489,550,2.489,551,2.489,552,2.489,553,3.346,554,2.489,555,3.852,556,2.759,557,3.852,558,3.492,559,2.489,560,1.944,561,2.489,562,2.489,563,1.944,564,1.654,565,2.489,566,1.944,567,1.944,568,1.238,569,1.944,570,2.16,571,2.489,572,2.489,573,2.489,574,3.852,575,2.489,576,2.489,577,3.852,578,2.489,579,2.489,580,2.489,581,2.489,582,2.489,583,5.305,584,2.489,585,2.489,586,1.783,587,2.489,588,2.489,589,3.852,590,2.489,591,2.489,592,4.712,593,2.489,594,2.489,595,2.489,596,2.489,597,2.489,598,2.489,599,2.489,600,2.489,601,2.489,602,2.489,603,2.489,604,3.852,605,1.546,606,6.068,607,2.489,608,3.852,609,3.344,610,2.489,611,2.489,612,2.489,613,2.16,614,2.489,615,2.489,616,2.489,617,2.489,618,2.489,619,2.489,620,4.712,621,1.654,622,1.783,623,1.944,624,1.944,625,2.489,626,2.489,627,2.489,628,2.489,629,2.489,630,2.489,631,2.489,632,2.489,633,2.489,634,2.489,635,6.856,636,4.712,637,2.489,638,3.524,639,2.489,640,3.009,641,2.489,642,2.489,643,2.489,644,2.489,645,3.852,646,2.489,647,1.944,648,2.16,649,2.16,650,2.489,651,2.489,652,3.681,653,3.852,654,1.944,655,2.489,656,2.489,657,2.759,658,2.489,659,2.489,660,2.489,661,2.489,662,2.16,663,2.489,664,2.489,665,2.489,666,2.16,667,2.489,668,2.489,669,2.489,670,2.489,671,2.489,672,2.489,673,2.489]],["title/interfaces/DeliveryDocument.html",[0,0.366,488,1.625]],["body/interfaces/DeliveryDocument.html",[0,0.707,2,0.13,3,0.13,4,0.13,5,0.111,8,1.051,16,0.215,17,0.122,18,0.015,19,0.267,59,0.19,82,0.78,98,0.945,102,0.937,105,0.833,115,1.379,121,0.515,189,2.004,218,0.008,286,0.768,312,1.369,314,0.606,347,0.011,348,0.008,358,0.707,360,1.132,361,0.867,376,1.092,410,0.737,422,1.86,432,1.051,434,0.544,460,0.996,461,1.278,463,1.092,464,1.476,475,3.893,476,2.954,478,2.954,488,2.459,490,2.459,526,2.161,544,1.911,553,2.687,558,4.107,568,2.954,674,2.386,675,3.863,676,1.539,677,2.268,678,2.063,679,2.063,680,2.815,681,2.268,682,1.319,683,3.278,684,2.517,685,2.517,686,1.785,687,2.517,688,3.108,689,2.517,690,2.517,691,2.386,692,2.664,693,2.664,694,3.86,695,3.86,696,2.857,697,3.278,698,2.664,699,3.47,700,3.863,701,2.664,702,2.268,703,2.664,704,2.664,705,2.664,706,2.664,707,2.664,708,2.664,709,2.664,710,2.664,711,2.664,712,2.664,713,2.664,714,2.664,715,2.664,716,2.664,717,2.664,718,2.063,719,2.517,720,2.857,721,2.664,722,2.664,723,2.517,724,2.664,725,2.664,726,2.664,727,2.664]],["title/interfaces/DeliveryDocumentWithDates.html",[0,0.366,719,2.167]],["body/interfaces/DeliveryDocumentWithDates.html",[0,0.708,2,0.13,3,0.13,4,0.13,5,0.112,16,0.216,17,0.122,18,0.015,19,0.268,59,0.19,82,0.781,98,0.946,102,0.941,105,0.837,115,1.381,121,0.517,189,2.01,218,0.008,286,0.772,312,1.373,314,0.607,347,0.011,348,0.008,358,0.71,360,1.134,361,0.871,376,1.097,410,0.741,422,1.861,432,1.056,434,0.546,460,0.942,461,1.209,463,1.097,464,1.477,475,3.802,476,2.963,478,2.963,488,1.896,490,2.466,526,2.17,544,1.915,553,2.694,558,4.112,568,2.963,674,2.397,675,3.869,676,1.546,677,2.278,678,2.072,679,2.072,680,2.823,681,2.278,682,1.325,683,3.288,684,2.528,685,2.528,686,1.79,687,2.528,688,3.117,689,2.528,690,2.528,691,2.397,692,2.676,693,2.676,694,3.868,695,3.868,696,2.863,697,3.288,698,2.676,699,3.481,700,3.869,701,2.676,702,2.278,703,2.676,704,2.676,705,2.676,706,2.676,707,2.676,708,2.676,709,2.676,710,2.676,711,2.676,712,2.676,713,2.676,714,2.676,715,2.676,716,2.676,717,2.676,718,2.072,719,3.288,720,2.863,721,2.676,722,2.676,723,2.528,724,2.676,725,2.676,726,2.676,727,2.676]],["title/interfaces/DeliveryRaw.html",[0,0.366,675,2.167]],["body/interfaces/DeliveryRaw.html",[0,0.678,2,0.11,3,0.11,4,0.11,5,0.094,8,0.89,12,0.207,13,0.357,16,0.224,17,0.164,18,0.015,19,0.239,59,0.184,82,0.703,98,1.015,102,0.794,105,0.706,115,1.348,121,0.436,189,1.793,218,0.007,286,0.651,312,1.225,314,0.67,347,0.01,348,0.007,351,3.342,358,0.599,360,1.11,361,0.734,376,0.925,410,1.058,422,1.866,432,1.509,434,0.629,460,0.865,461,1.11,463,0.925,464,1.445,475,3.711,476,2.643,478,3.413,488,1.599,490,2.2,526,1.83,544,1.893,553,2.96,558,3.914,568,3.255,674,2.021,675,3.612,676,1.303,677,1.921,678,1.747,679,1.747,680,3.101,681,1.921,682,1.117,683,3.612,684,2.132,685,2.132,686,1.597,687,2.132,688,2.781,689,2.132,690,2.132,691,2.021,692,2.257,693,2.257,694,3.824,695,3.824,696,2.83,697,3.612,698,2.257,699,3.55,700,3.914,701,2.257,702,3.255,703,3.824,704,3.824,705,3.824,706,3.824,707,3.105,708,3.824,709,3.105,710,3.824,711,3.824,712,3.824,713,3.824,714,3.824,715,2.257,716,3.824,717,3.824,718,2.96,719,2.132,720,2.627,721,2.257,722,2.257,723,2.132,724,2.257,725,2.257,726,2.257,727,2.257]],["title/interfaces/DeployParams.html",[0,0.366,116,1.86]],["body/interfaces/DeployParams.html",[0,0.623,1,1.694,2,0.064,3,0.064,4,0.064,5,0.055,6,0.63,7,1.072,9,1.778,10,2.599,11,2.278,12,0.121,13,0.24,14,0.827,15,0.861,16,0.227,17,0.12,18,0.015,19,0.323,20,1.126,21,1.072,22,3.241,23,1.072,24,2.893,25,2.505,26,1.072,27,1.694,28,1.694,29,1.072,30,2.387,31,2.205,32,1.072,33,1.126,34,1.072,35,1.126,36,1.072,37,1.126,38,1.072,39,1.126,40,1.072,41,2.728,42,1.778,43,1.126,44,1.778,45,1.126,46,1.778,47,1.126,48,1.778,49,1.126,50,1.778,51,1.126,52,1.126,53,1.778,54,1.126,55,0.898,56,0.898,57,2.599,58,2.101,59,0.178,60,3.28,61,2.9,62,2.205,63,2.9,64,2.999,65,1.126,66,1.126,67,1.126,68,2.205,69,1.126,70,3.217,71,2.505,72,2.205,73,1.617,74,1.126,75,3.14,76,1.778,77,2.101,78,1.617,79,1.126,80,3.241,81,1.694,82,0.384,83,1.778,84,1.126,85,1.126,86,1.126,87,1.126,88,1.126,89,1.62,90,1.126,91,1.126,92,1.694,93,1.694,94,3.148,95,1.072,96,3.385,97,1.126,98,0.295,99,1.072,100,1.072,101,1.072,102,1.399,103,3.037,104,1.126,105,1.46,106,1.403,107,1.126,108,1.126,109,1.126,110,1.126,111,1.778,112,1.126,113,1.126,114,1.126,115,1.238,116,2.101,117,2.64,118,3.148,119,2.521,120,1.694,121,0.69,122,0.578,123,1.778,124,1.694,125,1.48,126,1.546,127,1.778,128,1.034,129,1.778,130,1.778,131,1.126,132,1.617,133,1.778,134,1.126,135,1.126,136,1.126,137,1.126,138,1.126,139,1.126,140,1.126,141,1.126,142,1.778,143,1.126,144,0.937,145,1.126,146,1.126,147,1.126,148,1.546,149,1.072,150,0.937,151,1.126,152,1.072,153,1.126,154,1.126,155,1.126,156,0.764,157,1.126,158,1.255,159,1.126,160,0.937,161,2.205,162,1.126,163,0.794,164,1.126,165,2.131,166,1.126,167,2.9,168,1.126,169,1.126,170,1.126,171,2.864,172,1.126,173,1.126,174,1.126,175,1.126,176,1.126,177,1.778,178,1.126,179,1.126,180,1.778,181,1.694,182,2.599,183,2.521,184,2.9,185,1.778,186,1.694,187,1.126,188,1.126,189,0.764,190,2.505,191,1.126,192,2.278,193,2.178,194,3.131,195,1.126,196,1.694,197,2.505,198,2.278,199,2.637,200,1.126,201,1.126,202,2.637,203,3.037,204,1.126,205,1.072,206,2.505,207,2.205,208,2.205,209,2.205,210,1.126,211,1.072,212,1.126,213,1.126,214,1.126,215,1.126,216,1.126,217,1.126,218,0.01,219,1.361,220,1.778,221,1.126,222,1.126,223,2.599,224,2.278,225,1.126,226,1.126,227,1.126,228,1.126,229,1.126,230,1.126,231,1.126,232,1.126,233,1.126,234,1.778,235,1.778,236,2.205,237,1.126,238,1.126,239,1.778,240,2.205,241,1.024,242,1.126,243,1.126,244,1.126,245,1.024,246,1.126,247,1.126,248,1.126,249,1.126,250,1.126,251,1.126,252,1.126,253,1.126,254,1.778,255,2.205,256,1.126,257,1.126,258,1.126,259,1.126,260,1.126,261,1.072,262,1.024,263,2.505,264,1.694,265,1.126,266,1.024,267,1.778,268,1.126,269,2.505,270,1.126,271,1.778,272,1.126,273,1.126,274,1.778,275,1.126,276,1.778,277,1.126,278,1.126,279,1.126,280,1.126,281,1.126,282,1.126,283,1.126,284,1.126,285,2.728,286,0.924,287,2.728,288,1.384,289,1.778,290,1.126,291,1.778,292,1.126,293,1.126,294,1.778,295,1.126,296,1.126,297,1.126,298,1.126,299,1.126,300,2.505,301,1.126,302,1.126,303,1.126,304,1.126,305,1.126,306,1.126,307,1.126,308,0.861,309,1.126,310,1.126,311,1.778,312,0.522,313,1.778,314,0.196,315,1.126,316,1.778,317,1.778,318,1.778,319,1.778,320,1.778,321,1.778,322,1.778,323,1.778,324,1.778,325,1.126,326,1.126,327,1.024,328,1.126,329,1.126,330,1.126,331,1.778,332,1.126,333,1.126,334,1.126,335,1.024,336,1.126,337,1.778,338,1.778,339,1.126,340,1.126,341,1.126,342,1.126,343,1.126,344,1.126,345,1.126,346,1.126,347,0.006,348,0.004]],["title/interfaces/DocWithID.html",[0,0.366,728,2.439]],["body/interfaces/DocWithID.html",[0,0.682,2,0.132,3,0.132,4,0.132,5,0.114,6,1.297,12,0.25,13,0.405,16,0.226,17,0.145,18,0.015,19,0.3,59,0.196,102,0.957,115,0.886,158,1.636,163,1.636,218,0.011,219,1.773,286,0.785,312,1.388,314,0.632,347,0.011,348,0.008,426,1.115,434,0.707,462,1.158,467,1.203,468,1.388,480,2.208,481,3.519,488,1.929,489,2.317,490,1.929,491,2.895,492,2.572,499,2.886,537,3.742,539,2.572,544,1.931,605,2.895,682,1.348,686,1.81,696,2.015,720,2.015,728,3.742,729,2.722,730,2.493,731,2.854,732,3.324,733,3.096,734,3.519,735,2.572,736,2.317,737,2.317,738,2.317,739,2.317,740,2.208,741,2.208,742,2.208,743,3.096,744,2.438,745,3.096,746,3.096,747,3.096,748,2.895,749,2.895,750,2.895,751,2.722,752,2.895,753,2.572,754,2.895,755,2.895,756,2.572,757,2.895,758,3.096,759,3.096,760,2.895,761,2.895,762,3.096,763,2.107,764,3.096,765,2.895,766,3.096,767,2.895,768,4.002,769,4.002,770,4.002,771,4.002,772,2.572,773,2.895,774,3.096,775,2.895,776,3.742,777,3.096,778,3.519,779,2.895,780,2.895,781,1.929,782,2.107,783,2.208,784,2.722,785,4.002,786,3.096,787,3.096,788,4.123,789,3.096,790,3.096,791,3.096,792,3.096,793,3.096,794,3.096,795,2.572,796,3.096,797,3.096]],["title/interfaces/EmailRequest.html",[0,0.366,798,3.408]],["body/interfaces/EmailRequest.html",[0,0.52,2,0.158,3,0.158,4,0.158,5,0.136,6,1.552,12,0.299,13,0.453,16,0.229,17,0.149,18,0.015,19,0.303,59,0.165,102,1.145,105,1.018,115,1.28,117,2.913,165,2.036,218,0.01,288,1.74,347,0.012,348,0.01,520,6.795,564,4.476,648,4.837,798,6.53,799,5.573,800,6.795,801,7.241,802,4.837,803,6.737,804,5.573,805,5.573,806,5.573,807,3.702,808,5.573,809,4.837,810,4.837,811,5.573,812,5.573,813,5.262,814,4.353,815,3.462,816,5.573,817,5.573,818,5.573,819,6.737,820,5.573,821,5.573,822,5.573,823,5.573]],["title/interfaces/Invitation.html",[0,0.366,824,2.294]],["body/interfaces/Invitation.html",[0,0.652,2,0.129,3,0.129,4,0.129,5,0.111,8,1.048,12,0.244,13,0.398,16,0.227,17,0.168,18,0.015,19,0.296,59,0.188,82,0.709,89,2.805,105,1.083,125,1.881,128,1.314,150,2.453,218,0.008,286,0.766,288,1.419,308,2.51,312,1.52,347,0.011,348,0.008,351,3.178,358,0.705,359,1.219,360,1.13,361,0.864,410,1.172,434,0.64,460,0.647,464,1.328,499,1.965,544,1.314,676,1.534,682,1.714,686,1.982,718,3.161,730,3.134,731,2.154,736,2.948,737,2.26,738,3.476,739,3.476,740,2.808,741,2.808,742,2.808,763,3.161,781,3.266,782,2.056,783,3.435,824,4.662,825,2.823,826,4.245,827,4.618,828,3.255,829,3.858,830,2.655,831,3.255,832,3.255,833,3.255,834,3.255,835,3.019,836,3.019,837,4.382,838,2.655,839,2.823,840,3.938,841,3.938,842,3.938]],["title/interfaces/InvitationFromOrganizationToUser.html",[0,0.366,740,1.86]],["body/interfaces/InvitationFromOrganizationToUser.html",[0,0.665,2,0.136,3,0.136,4,0.136,5,0.117,8,1.103,12,0.257,13,0.412,16,0.209,17,0.166,18,0.015,19,0.304,59,0.19,82,0.766,89,2.864,105,1.119,125,1.981,128,1.384,150,2.798,218,0.009,286,0.806,288,1.494,308,2.713,312,1.558,347,0.011,348,0.009,358,0.742,359,1.283,360,0.991,361,0.909,410,0.991,434,0.438,460,0.681,464,0.909,499,2.069,544,1.384,676,1.615,682,1.772,686,2.031,718,2.164,730,3.172,731,2.268,736,3.048,737,2.38,738,3.048,739,3.048,740,3.203,741,2.904,742,2.904,763,2.164,781,3.31,782,2.164,783,2.904,824,4.694,825,2.973,826,3.427,827,4.682,828,3.427,829,4.066,830,2.796,831,3.427,832,3.427,833,4.841,834,3.427,835,3.179,836,3.179,837,4.491,838,2.796,839,2.973,840,4.071,841,4.071,842,4.071]],["title/interfaces/InvitationFromUserToOrganization.html",[0,0.366,741,1.86]],["body/interfaces/InvitationFromUserToOrganization.html",[0,0.665,2,0.136,3,0.136,4,0.136,5,0.117,8,1.103,12,0.257,13,0.412,16,0.209,17,0.166,18,0.015,19,0.304,59,0.19,82,0.766,89,2.864,105,1.119,125,1.981,128,1.384,150,2.798,218,0.009,286,0.806,288,1.494,308,2.713,312,1.558,347,0.011,348,0.009,358,0.742,359,1.283,360,0.991,361,0.909,410,0.991,434,0.438,460,0.681,464,0.909,499,2.069,544,1.384,676,1.615,682,1.772,686,2.031,718,2.164,730,3.172,731,2.268,736,3.048,737,2.38,738,3.048,739,3.048,740,2.904,741,3.203,742,2.904,763,2.164,781,3.31,782,2.164,783,2.904,824,4.694,825,2.973,826,3.427,827,4.682,828,3.427,829,4.066,830,2.796,831,3.427,832,3.427,833,3.427,834,4.841,835,3.179,836,3.179,837,4.491,838,2.796,839,2.973,840,4.071,841,4.071,842,4.071]],["title/interfaces/InvitationToWorkOnDocument.html",[0,0.366,742,1.86]],["body/interfaces/InvitationToWorkOnDocument.html",[0,0.665,2,0.136,3,0.136,4,0.136,5,0.117,8,1.1,12,0.256,13,0.411,16,0.218,17,0.166,18,0.015,19,0.304,59,0.19,82,0.765,89,2.69,105,1.118,125,2.533,128,1.381,150,2.533,218,0.009,286,0.805,288,1.491,308,2.71,312,1.556,347,0.011,348,0.009,358,0.74,359,1.28,360,0.989,361,0.907,410,0.989,434,0.437,460,0.871,464,0.907,499,2.064,544,1.381,676,1.611,682,1.77,686,2.029,718,2.159,730,3.171,731,2.262,736,3.043,737,2.374,738,3.043,739,3.043,740,2.899,741,2.899,742,3.2,763,2.159,781,3.325,782,2.159,783,3.489,824,4.693,825,2.966,826,3.419,827,4.424,828,3.419,829,4.063,830,2.789,831,4.382,832,4.836,833,3.419,834,3.419,835,3.172,836,3.172,837,4.486,838,2.789,839,2.966,840,4.065,841,4.065,842,4.065]],["title/interfaces/MGDeadlineRaw.html",[0,0.366,697,2.167]],["body/interfaces/MGDeadlineRaw.html",[0,0.701,2,0.125,3,0.125,4,0.125,5,0.107,8,1.012,12,0.236,13,0.39,16,0.219,17,0.147,18,0.015,19,0.261,59,0.188,82,0.741,98,0.977,102,0.903,105,0.802,115,1.363,121,0.496,189,1.956,218,0.008,286,0.74,312,1.336,314,0.597,347,0.01,348,0.008,351,2.399,358,0.681,360,1.159,361,0.835,376,1.651,410,0.71,422,1.902,432,1.012,434,0.531,460,0.923,461,1.185,463,1.052,464,1.51,475,3.751,476,2.883,478,2.883,488,1.818,490,2.399,526,2.081,544,1.995,553,2.621,558,4.065,568,2.883,674,2.298,675,3.58,676,1.482,677,2.185,678,1.987,679,1.987,680,2.746,681,2.185,682,1.27,683,3.199,684,2.424,685,2.424,686,1.741,687,2.424,688,3.032,689,2.424,690,2.424,691,3.032,692,3.386,693,3.386,694,4.03,695,4.03,696,2.983,697,3.58,698,4.03,699,3.386,700,3.807,701,2.566,702,2.185,703,2.566,704,2.566,705,2.566,706,2.566,707,2.566,708,2.566,709,2.566,710,2.566,711,2.566,712,2.566,713,2.566,714,2.566,715,2.566,716,2.566,717,2.566,718,1.987,719,2.424,720,2.805,721,2.566,722,2.566,723,2.424,724,2.566,725,2.566,726,2.566,727,2.566]],["title/interfaces/MaterialDocument.html",[0,0.366,480,1.86]],["body/interfaces/MaterialDocument.html",[0,0.67,2,0.139,3,0.139,4,0.139,5,0.119,8,1.43,12,0.262,13,0.417,15,1.856,16,0.231,17,0.165,18,0.015,19,0.219,59,0.175,82,0.733,98,0.934,105,0.891,122,1.003,156,2.093,218,0.009,314,0.656,347,0.011,348,0.009,351,3.368,399,2.143,410,1.161,425,1.168,434,0.447,438,1.999,460,0.971,461,1.246,480,2.939,526,2.311,553,3.246,556,3.493,676,1.646,677,2.426,678,2.206,679,2.206,680,3.511,681,2.426,682,1.411,686,1.864,702,3.57,744,3.755,772,3.962,829,2.692,843,3.24,844,5.141,845,5.789,846,5.607,847,5.607,848,4.459,849,4.442,850,4.442,851,2.85,852,3.493,853,4.845,854,4.845,855,4.845,856,4.845]],["title/interfaces/MaterialRaw.html",[0,0.366,844,2.812]],["body/interfaces/MaterialRaw.html",[0,0.705,2,0.148,3,0.148,4,0.148,5,0.127,8,1.742,12,0.279,13,0.435,15,2.797,16,0.233,17,0.16,18,0.015,19,0.234,59,0.18,82,0.695,98,0.841,105,0.951,122,1.045,156,2.181,218,0.009,314,0.56,347,0.012,348,0.009,399,2.047,410,0.842,425,1.547,434,0.673,438,1.45,460,0.92,461,1.181,480,2.468,526,2.468,553,3.324,556,5.264,676,1.758,677,2.59,678,2.356,679,2.356,680,3.33,681,2.59,682,1.506,686,1.942,702,2.59,744,3.382,772,2.875,829,2.875,843,3.46,844,5.264,845,5.049,846,4.069,847,4.069,848,3.236,849,4.63,850,4.63,851,3.043,852,3.73,853,5.049,854,5.049,855,5.049,856,5.049]],["title/interfaces/MaterialTemplateDocument.html",[0,0.366,852,2.812]],["body/interfaces/MaterialTemplateDocument.html",[0,0.689,2,0.15,3,0.15,4,0.15,5,0.129,8,1.502,12,0.283,13,0.438,15,2.008,16,0.225,17,0.156,18,0.015,19,0.237,59,0.18,82,0.76,98,0.961,105,0.964,122,1.054,156,2.199,218,0.009,314,0.564,347,0.012,348,0.009,399,2.18,410,0.853,425,1.263,434,0.483,438,1.469,460,1.006,461,1.291,480,2.5,526,2.5,553,3.339,556,3.779,676,1.78,677,2.624,678,2.386,679,2.386,680,3.594,681,2.624,682,1.526,686,1.958,702,2.624,744,3.409,772,2.912,829,3.596,843,3.505,844,5.288,845,5.925,846,4.121,847,4.121,848,3.278,849,4.667,850,4.667,851,3.807,852,4.667,853,5.09,854,5.09,855,5.09,856,5.09]],["title/interfaces/MetaTx.html",[0,0.366,81,1.86]],["body/interfaces/MetaTx.html",[0,0.621,1,2.085,2,0.064,3,0.064,4,0.064,5,0.055,6,0.623,7,1.061,8,0.516,9,2.189,10,2.585,11,2.468,12,0.12,13,0.238,14,0.818,15,0.852,16,0.227,17,0.125,18,0.015,19,0.323,20,1.113,21,1.061,22,3.229,23,1.061,24,2.881,25,2.49,26,1.061,27,1.68,28,1.68,29,1.061,30,2.372,31,2.189,32,1.061,33,1.113,34,1.061,35,1.113,36,1.061,37,1.113,38,1.061,39,1.113,40,1.061,41,2.713,42,1.763,43,1.113,44,1.763,45,1.113,46,1.763,47,1.113,48,1.763,49,1.113,50,1.763,51,1.113,52,1.113,53,1.763,54,1.113,55,0.888,56,0.888,57,2.585,58,2.085,59,0.177,60,3.271,61,2.886,62,2.189,63,2.886,64,2.988,65,1.113,66,1.113,67,1.113,68,2.189,69,1.113,70,3.209,71,2.49,72,2.189,73,1.991,74,1.763,75,3.161,76,2.189,77,2.372,78,1.991,79,1.763,80,3.308,81,2.085,82,0.473,83,2.713,84,2.49,85,2.49,86,2.49,87,2.49,88,1.113,89,1.608,90,1.113,91,1.113,92,1.68,93,1.68,94,3.136,95,1.061,96,3.136,97,1.113,98,0.291,99,1.061,100,1.061,101,1.061,102,1.394,103,3.024,104,1.113,105,1.458,106,1.4,107,1.113,108,1.113,109,1.113,110,1.113,111,1.763,112,1.113,113,1.113,114,1.113,115,1.234,116,1.68,117,2.165,118,2.713,119,1.903,120,1.68,121,0.687,122,0.573,123,1.763,124,1.68,125,1.467,126,1.533,127,1.763,128,1.025,129,1.763,130,1.763,131,1.113,132,1.603,133,1.763,134,1.113,135,1.113,136,1.113,137,1.113,138,1.113,139,1.113,140,1.113,141,1.113,142,1.763,143,1.113,144,0.927,145,1.113,146,1.113,147,1.113,148,1.533,149,1.061,150,0.927,151,1.113,152,1.061,153,1.113,154,1.113,155,1.113,156,0.755,157,1.113,158,1.244,159,1.113,160,0.927,161,2.189,162,1.113,163,0.786,164,1.113,165,2.12,166,1.113,167,2.886,168,1.113,169,1.113,170,1.113,171,2.859,172,1.113,173,1.113,174,1.113,175,1.113,176,1.113,177,1.763,178,1.113,179,1.113,180,1.763,181,1.68,182,2.585,183,2.509,184,2.886,185,1.763,186,1.68,187,1.113,188,1.113,189,0.755,190,2.49,191,1.113,192,2.264,193,2.165,194,3.122,195,1.113,196,1.68,197,2.49,198,2.264,199,2.625,200,1.113,201,1.113,202,2.625,203,3.024,204,1.113,205,1.061,206,2.49,207,2.189,208,2.189,209,2.189,210,1.113,211,1.061,212,1.113,213,1.113,214,1.113,215,1.113,216,1.113,217,1.113,218,0.01,219,1.349,220,1.763,221,1.113,222,1.113,223,2.585,224,2.264,225,1.113,226,1.113,227,1.113,228,1.113,229,1.113,230,1.113,231,1.113,232,1.113,233,1.113,234,1.763,235,1.763,236,2.189,237,1.113,238,1.113,239,1.763,240,2.189,241,1.012,242,1.113,243,1.113,244,1.113,245,1.012,246,1.113,247,1.113,248,1.113,249,1.113,250,1.113,251,1.113,252,1.113,253,1.113,254,1.763,255,2.189,256,1.113,257,1.113,258,1.113,259,1.113,260,1.113,261,1.061,262,1.012,263,2.49,264,1.68,265,1.113,266,1.012,267,1.763,268,1.113,269,2.49,270,1.113,271,1.763,272,1.113,273,1.113,274,1.763,275,1.113,276,1.763,277,1.113,278,1.113,279,1.113,280,1.113,281,1.113,282,1.113,283,1.113,284,1.113,285,2.713,286,0.919,287,2.713,288,1.374,289,1.763,290,1.113,291,1.763,292,1.113,293,1.113,294,1.763,295,1.113,296,1.113,297,1.113,298,1.113,299,1.113,300,2.49,301,1.113,302,1.113,303,1.113,304,1.113,305,1.113,306,1.113,307,1.113,308,0.852,309,1.113,310,1.113,311,1.763,312,0.516,313,1.763,314,0.194,315,1.113,316,1.763,317,1.763,318,1.763,319,1.763,320,1.763,321,1.763,322,1.763,323,1.763,324,1.763,325,1.113,326,1.113,327,1.012,328,1.113,329,1.113,330,1.113,331,1.763,332,1.113,333,1.113,334,1.113,335,1.012,336,1.113,337,1.763,338,1.763,339,1.113,340,1.113,341,1.113,342,1.113,343,1.113,344,1.113,345,1.113,346,1.113,347,0.006,348,0.004]],["title/interfaces/MovieDocument.html",[0,0.366,462,0.976]],["body/interfaces/MovieDocument.html",[0,0.761,2,0.119,3,0.119,4,0.119,5,0.102,8,0.966,16,0.236,17,0.115,18,0.015,19,0.252,59,0.196,82,0.781,98,0.994,106,0.796,121,0.473,122,1.095,218,0.008,314,0.548,347,0.01,348,0.008,349,2.034,350,1.259,352,1.308,353,1.308,354,1.308,355,1.978,356,1.308,357,1.308,358,0.65,359,1.123,360,0.677,361,0.796,362,1.687,363,1.753,364,1.753,365,1.903,366,1.687,367,1.753,368,1.753,369,1.259,370,1.687,371,1.308,372,1.308,373,2.034,374,1.308,375,1.687,376,1.003,377,1.308,378,1.687,379,1.308,380,1.753,381,2.121,382,1.259,383,1.308,384,1.687,385,1.308,386,1.308,387,1.687,388,1.308,389,1.687,390,1.308,391,1.903,392,1.308,393,1.308,394,1.753,395,1.308,396,1.308,397,1.259,398,1.308,399,1.166,400,1.259,401,1.687,402,1.308,403,1.308,404,1.308,405,1.308,406,1.308,407,1.308,408,1.308,409,1.308,410,0.677,411,1.308,412,1.212,413,1.308,414,1.903,415,1.308,416,1.308,417,1.308,418,1.308,419,1.308,420,1.308,421,1.308,422,1.003,423,1.308,424,1.259,425,1.003,426,1.739,427,2.034,428,1.753,429,1.308,430,1.308,431,1.308,432,0.966,433,1.308,434,0.515,435,1.687,436,1.308,437,1.308,438,1.166,439,1.259,440,1.308,441,1.308,442,1.308,443,1.308,444,1.308,445,1.308,446,1.308,447,1.308,448,1.308,449,1.308,450,1.308,451,1.166,452,1.212,453,1.308,454,1.308,455,1.308,456,1.308,457,1.308,458,1.308,459,1.308,460,0.902,461,1.157,462,1.396,463,1.003,464,0.796,465,1.259,466,1.166,467,1.082,468,0.966]],["title/interfaces/MovieDocumentWithDates.html",[0,0.366,465,1.18]],["body/interfaces/MovieDocumentWithDates.html",[0,0.761,2,0.119,3,0.119,4,0.119,5,0.102,8,0.963,16,0.236,17,0.13,18,0.015,19,0.252,59,0.196,82,0.78,98,0.994,106,0.794,121,0.472,122,1.093,218,0.008,314,0.547,347,0.01,348,0.008,349,2.031,350,1.255,352,1.304,353,1.304,354,1.304,355,1.975,356,1.304,357,1.304,358,0.648,359,1.12,360,0.675,361,0.794,362,1.684,363,1.75,364,1.75,365,1.9,366,1.684,367,1.75,368,1.75,369,1.255,370,1.684,371,1.304,372,1.304,373,2.031,374,1.304,375,1.684,376,1,377,1.304,378,1.684,379,1.304,380,1.75,381,2.119,382,1.255,383,1.304,384,1.684,385,1.304,386,1.304,387,1.684,388,1.304,389,1.684,390,1.304,391,1.9,392,1.304,393,1.304,394,1.75,395,1.304,396,1.304,397,1.255,398,1.304,399,1.163,400,1.255,401,1.684,402,1.304,403,1.304,404,1.304,405,1.304,406,1.304,407,1.304,408,1.304,409,1.304,410,0.675,411,1.304,412,1.208,413,1.304,414,1.9,415,1.304,416,1.304,417,1.304,418,1.304,419,1.304,420,1.304,421,1.304,422,1,423,1.304,424,1.255,425,1,426,1.738,427,2.031,428,1.75,429,1.304,430,1.304,431,1.304,432,0.963,433,1.304,434,0.513,435,1.684,436,1.304,437,1.304,438,1.163,439,1.255,440,1.304,441,1.304,442,1.304,443,1.304,444,1.304,445,1.304,446,1.304,447,1.304,448,1.304,449,1.304,450,1.304,451,1.163,452,1.208,453,1.304,454,1.304,455,1.304,456,1.304,457,1.304,458,1.304,459,1.304,460,0.9,461,1.155,462,1.038,463,1.342,464,1.065,465,1.684,466,1.163,467,1.078,468,0.963]],["title/interfaces/MovieFestivalPrizes.html",[0,0.366,389,1.18]],["body/interfaces/MovieFestivalPrizes.html",[0,0.761,2,0.119,3,0.119,4,0.119,5,0.102,12,0.224,13,0.377,16,0.236,17,0.13,18,0.015,19,0.252,59,0.196,82,0.757,98,0.994,106,0.793,121,0.471,122,1.093,218,0.008,314,0.547,347,0.01,348,0.008,349,2.03,350,1.253,352,1.302,353,1.302,354,1.302,355,1.974,356,1.302,357,1.302,358,0.647,359,1.119,360,0.675,361,0.793,362,1.683,363,1.748,364,1.748,365,1.899,366,1.683,367,1.748,368,1.748,369,1.253,370,1.683,371,1.302,372,1.302,373,2.18,374,1.302,375,1.683,376,0.999,377,1.302,378,1.683,379,1.302,380,1.748,381,2.118,382,1.253,383,1.302,384,1.683,385,1.302,386,1.302,387,1.683,388,1.302,389,1.899,390,2.11,391,1.899,392,1.302,393,1.302,394,1.748,395,1.302,396,1.302,397,1.253,398,1.302,399,1.162,400,1.253,401,1.683,402,1.302,403,1.302,404,1.302,405,1.302,406,1.302,407,1.302,408,1.302,409,1.302,410,0.675,411,1.302,412,1.207,413,1.302,414,1.899,415,1.302,416,1.302,417,1.302,418,1.302,419,1.302,420,1.302,421,1.302,422,0.999,423,1.302,424,1.253,425,0.999,426,1.687,427,1.899,428,1.748,429,1.302,430,1.302,431,1.302,432,0.962,433,1.302,434,0.513,435,1.683,436,1.302,437,1.302,438,1.162,439,1.253,440,1.302,441,1.302,442,1.302,443,1.302,444,1.302,445,1.302,446,1.302,447,1.302,448,1.302,449,1.302,450,1.302,451,1.162,452,1.207,453,1.302,454,1.302,455,1.302,456,1.302,457,1.302,458,1.302,459,1.302,460,0.797,461,1.023,462,1.037,463,0.999,464,0.793,465,1.253,466,1.162,467,1.077,468,0.962]],["title/interfaces/MovieMain.html",[0,0.366,401,1.18]],["body/interfaces/MovieMain.html",[0,0.753,2,0.107,3,0.107,4,0.107,5,0.092,12,0.201,13,0.35,16,0.237,17,0.161,18,0.015,19,0.234,59,0.194,82,0.73,98,1.01,106,0.714,121,0.424,122,1.046,218,0.007,314,0.518,347,0.009,348,0.007,349,2.209,350,1.128,351,3.349,352,1.173,353,1.173,354,1.173,355,1.869,356,1.173,357,1.173,358,0.582,359,1.007,360,0.607,361,0.714,362,1.566,363,1.627,364,1.627,365,1.799,366,1.566,367,1.627,368,1.627,369,1.128,370,1.566,371,1.173,372,1.173,373,1.943,374,1.173,375,1.566,376,0.899,377,1.173,378,1.566,379,1.173,380,1.627,381,2.271,382,1.128,383,1.173,384,1.566,385,1.173,386,1.173,387,1.566,388,1.173,389,1.566,390,1.173,391,1.799,392,1.173,393,1.173,394,1.627,395,1.173,396,1.173,397,1.128,398,1.173,399,1.046,400,1.128,401,1.799,402,2.019,403,2.019,404,2.019,405,2.019,406,2.019,407,2.019,408,2.019,409,2.019,410,1.046,411,2.019,412,1.87,413,2.019,414,1.799,415,1.173,416,1.173,417,1.173,418,1.173,419,1.173,420,1.173,421,1.173,422,0.899,423,1.173,424,1.128,425,0.899,426,1.626,427,1.799,428,1.627,429,1.173,430,1.173,431,1.173,432,0.866,433,1.173,434,0.478,435,1.566,436,1.173,437,1.173,438,1.046,439,1.128,440,1.173,441,1.173,442,1.173,443,1.173,444,1.173,445,1.173,446,1.173,447,1.173,448,1.173,449,1.173,450,1.173,451,1.046,452,1.086,453,1.173,454,1.173,455,1.173,456,1.173,457,1.173,458,1.173,459,1.173,460,0.742,461,0.952,462,0.934,463,0.899,464,0.714,465,1.128,466,1.046,467,0.97,468,0.866]],["title/interfaces/MoviePromotionalDescription.html",[0,0.366,370,1.18]],["body/interfaces/MoviePromotionalDescription.html",[0,0.76,2,0.118,3,0.118,4,0.118,5,0.101,12,0.222,13,0.375,16,0.237,17,0.138,18,0.015,19,0.251,59,0.196,82,0.755,98,0.992,106,0.787,121,0.468,122,1.09,218,0.007,314,0.545,347,0.01,348,0.007,349,2.024,350,1.245,352,1.293,353,1.293,354,1.293,355,1.967,356,1.293,357,1.293,358,0.642,359,1.111,360,0.67,361,0.787,362,1.675,363,1.74,364,1.74,365,1.893,366,1.675,367,1.74,368,1.74,369,1.245,370,1.893,371,2.104,372,2.104,373,2.024,374,1.293,375,1.675,376,0.992,377,1.293,378,1.675,379,1.293,380,1.74,381,2.113,382,1.245,383,1.293,384,1.675,385,1.293,386,1.293,387,1.675,388,1.293,389,1.675,390,1.293,391,1.893,392,1.293,393,1.293,394,1.74,395,1.293,396,1.293,397,1.245,398,1.293,399,1.153,400,1.245,401,1.675,402,1.293,403,1.293,404,1.293,405,1.293,406,1.293,407,1.293,408,1.293,409,1.293,410,0.67,411,1.293,412,1.198,413,1.293,414,1.893,415,1.293,416,1.293,417,1.293,418,1.293,419,1.293,420,1.293,421,1.293,422,0.992,423,1.293,424,1.245,425,0.992,426,1.683,427,1.893,428,1.74,429,1.293,430,1.293,431,1.293,432,0.955,433,1.293,434,0.511,435,1.675,436,1.293,437,1.293,438,1.153,439,1.245,440,1.293,441,1.293,442,1.293,443,1.293,444,1.293,445,1.293,446,1.293,447,1.293,448,1.293,449,1.293,450,1.293,451,1.153,452,1.198,453,1.293,454,1.293,455,1.293,456,1.293,457,1.293,458,1.293,459,1.293,460,0.793,461,1.018,462,1.03,463,0.992,464,0.787,465,1.245,466,1.153,467,1.069,468,0.955]],["title/interfaces/MoviePromotionalElements.html",[0,0.366,378,1.18]],["body/interfaces/MoviePromotionalElements.html",[0,0.76,2,0.118,3,0.118,4,0.118,5,0.101,12,0.222,13,0.375,16,0.237,17,0.138,18,0.015,19,0.251,59,0.196,82,0.755,98,0.992,106,0.787,121,0.468,122,1.09,218,0.007,314,0.545,347,0.01,348,0.007,349,2.024,350,1.245,352,1.293,353,1.293,354,1.293,355,1.967,356,1.293,357,1.293,358,0.642,359,1.111,360,0.67,361,0.787,362,1.675,363,1.74,364,1.74,365,1.893,366,1.675,367,1.74,368,1.74,369,1.245,370,1.675,371,1.293,372,1.293,373,2.024,374,1.293,375,2.024,376,0.992,377,1.293,378,1.893,379,2.104,380,2.195,381,2.113,382,1.245,383,1.293,384,1.675,385,1.293,386,1.293,387,1.675,388,1.293,389,1.675,390,1.293,391,1.893,392,1.293,393,1.293,394,1.74,395,1.293,396,1.293,397,1.245,398,1.293,399,1.153,400,1.245,401,1.675,402,1.293,403,1.293,404,1.293,405,1.293,406,1.293,407,1.293,408,1.293,409,1.293,410,0.67,411,1.293,412,1.198,413,1.293,414,1.893,415,1.293,416,1.293,417,1.293,418,1.293,419,1.293,420,1.293,421,1.293,422,0.992,423,1.293,424,1.245,425,0.992,426,1.683,427,1.893,428,1.74,429,1.293,430,1.293,431,1.293,432,0.955,433,1.293,434,0.511,435,1.675,436,1.293,437,1.293,438,1.153,439,1.245,440,1.293,441,1.293,442,1.293,443,1.293,444,1.293,445,1.293,446,1.293,447,1.293,448,1.293,449,1.293,450,1.293,451,1.153,452,1.198,453,1.293,454,1.293,455,1.293,456,1.293,457,1.293,458,1.293,459,1.293,460,0.793,461,1.018,462,1.03,463,0.992,464,0.787,465,1.245,466,1.153,467,1.069,468,0.955]],["title/interfaces/MovieRaw.html",[0,0.366,427,1.18]],["body/interfaces/MovieRaw.html",[0,0.751,2,0.101,3,0.101,4,0.101,5,0.087,8,0.816,12,0.19,13,0.336,16,0.236,17,0.165,18,0.015,19,0.225,59,0.192,82,0.714,98,1.032,106,0.673,121,0.4,122,1.019,218,0.006,314,0.502,347,0.009,348,0.006,349,1.893,350,1.064,351,3.294,352,1.105,353,1.105,354,1.105,355,1.81,356,1.105,357,1.105,358,0.549,359,0.949,360,0.572,361,0.673,362,1.893,363,1.561,364,1.561,365,1.997,366,1.503,367,1.561,368,1.561,369,1.064,370,1.893,371,1.105,372,1.105,373,1.893,374,1.105,375,1.503,376,0.847,377,1.105,378,1.893,379,1.105,380,2.075,381,1.997,382,1.064,383,1.105,384,1.893,385,1.105,386,1.105,387,1.893,388,1.105,389,1.893,390,1.105,391,1.997,392,1.105,393,1.105,394,1.561,395,1.105,396,1.105,397,1.064,398,1.105,399,0.986,400,1.064,401,1.893,402,1.105,403,1.105,404,1.105,405,1.105,406,1.105,407,1.105,408,1.105,409,1.105,410,0.572,411,1.105,412,1.024,413,1.105,414,1.997,415,1.105,416,1.105,417,1.105,418,1.105,419,1.105,420,1.105,421,1.105,422,0.847,423,1.105,424,1.064,425,1.197,426,1.652,427,1.893,428,1.561,429,1.105,430,1.105,431,1.105,432,1.452,433,1.105,434,0.609,435,1.997,436,1.105,437,1.105,438,1.755,439,1.893,440,1.967,441,1.967,442,1.967,443,1.967,444,1.967,445,1.967,446,1.967,447,1.967,448,1.967,449,1.105,450,1.967,451,0.986,452,1.024,453,1.967,454,1.967,455,1.967,456,1.967,457,1.967,458,1.967,459,1.967,460,0.712,461,0.914,462,0.88,463,0.847,464,0.673,465,1.064,466,0.986,467,0.914,468,0.816]],["title/interfaces/MovieSaleDocumentWithDates.html",[0,0.366,400,1.18]],["body/interfaces/MovieSaleDocumentWithDates.html",[0,0.761,2,0.12,3,0.12,4,0.12,5,0.103,16,0.236,17,0.116,18,0.015,19,0.253,59,0.196,82,0.782,98,0.995,106,0.799,121,0.475,122,1.096,218,0.008,314,0.549,347,0.01,348,0.008,349,2.037,350,1.264,352,1.313,353,1.313,354,1.313,355,1.982,356,1.313,357,1.313,358,0.652,359,1.128,360,0.68,361,0.799,362,1.692,363,1.758,364,1.758,365,1.907,366,1.692,367,1.758,368,1.758,369,1.264,370,1.692,371,1.313,372,1.313,373,2.037,374,1.313,375,1.692,376,1.007,377,1.313,378,1.692,379,1.313,380,1.758,381,2.124,382,1.264,383,1.313,384,1.692,385,1.313,386,1.313,387,1.692,388,1.313,389,1.692,390,1.313,391,2.037,392,1.313,393,1.313,394,1.758,395,1.313,396,1.313,397,1.264,398,1.313,399,1.171,400,1.692,401,1.692,402,1.313,403,1.313,404,1.313,405,1.313,406,1.313,407,1.313,408,1.313,409,1.313,410,0.68,411,1.313,412,1.217,413,1.313,414,1.907,415,1.313,416,1.313,417,1.313,418,1.313,419,1.313,420,1.313,421,1.313,422,1.007,423,1.313,424,1.264,425,1.007,426,1.692,427,1.907,428,1.758,429,1.313,430,1.313,431,1.313,432,0.97,433,1.313,434,0.516,435,1.692,436,1.313,437,1.313,438,1.171,439,1.264,440,1.313,441,1.313,442,1.313,443,1.313,444,1.313,445,1.313,446,1.313,447,1.313,448,1.313,449,1.313,450,1.313,451,1.171,452,1.217,453,1.313,454,1.313,455,1.313,456,1.313,457,1.313,458,1.313,459,1.313,460,0.801,461,1.029,462,1.046,463,1.007,464,0.799,465,1.264,466,1.171,467,1.086,468,0.97]],["title/interfaces/MovieSaleRaw.html",[0,0.366,391,1.18]],["body/interfaces/MovieSaleRaw.html",[0,0.757,2,0.112,3,0.112,4,0.112,5,0.096,12,0.212,13,0.363,16,0.237,17,0.158,18,0.015,19,0.242,59,0.195,82,0.743,98,1.003,106,0.75,121,0.446,122,1.068,218,0.007,314,0.632,347,0.01,348,0.007,349,1.984,350,1.185,352,1.232,353,1.232,354,1.232,355,2.159,356,1.232,357,1.232,358,0.612,359,1.058,360,0.638,361,0.75,362,1.62,363,2.159,364,2.159,365,1.846,366,2.077,367,2.159,368,2.159,369,1.185,370,1.62,371,1.232,372,1.232,373,1.984,374,1.232,375,1.62,376,0.944,377,1.232,378,1.62,379,1.232,380,1.684,381,2.077,382,1.185,383,1.232,384,1.62,385,1.232,386,1.232,387,1.62,388,1.232,389,1.62,390,1.232,391,1.984,392,2.062,393,2.062,394,1.684,395,1.232,396,1.232,397,1.185,398,2.062,399,1.839,400,1.185,401,1.62,402,1.232,403,1.232,404,1.232,405,1.232,406,1.232,407,1.232,408,1.232,409,1.232,410,0.638,411,1.232,412,1.141,413,1.232,414,1.846,415,1.232,416,1.232,417,1.232,418,1.232,419,1.232,420,1.232,421,1.232,422,0.944,423,1.232,424,1.185,425,0.944,426,1.655,427,1.846,428,1.684,429,1.232,430,1.232,431,1.232,432,0.909,433,1.232,434,0.494,435,1.62,436,1.232,437,1.232,438,1.099,439,1.185,440,1.232,441,1.232,442,1.232,443,1.232,444,1.232,445,1.232,446,1.232,447,1.232,448,1.232,449,1.232,450,1.232,451,1.099,452,1.141,453,1.232,454,1.232,455,1.232,456,1.232,457,1.232,458,1.232,459,1.232,460,0.767,461,0.985,462,0.981,463,0.944,464,0.75,465,1.185,466,1.099,467,1.019,468,0.909]],["title/interfaces/MovieSalesAgentDealDocumentWithDates.html",[0,0.366,369,1.18]],["body/interfaces/MovieSalesAgentDealDocumentWithDates.html",[0,0.761,2,0.12,3,0.12,4,0.12,5,0.103,16,0.236,17,0.116,18,0.015,19,0.253,59,0.196,82,0.782,98,0.995,106,0.799,121,0.475,122,1.096,218,0.008,314,0.549,347,0.01,348,0.008,349,2.037,350,1.264,352,1.313,353,1.313,354,1.313,355,1.982,356,1.313,357,1.313,358,0.652,359,1.128,360,0.68,361,0.799,362,1.692,363,1.758,364,1.758,365,2.037,366,1.692,367,1.758,368,1.758,369,1.692,370,1.692,371,1.313,372,1.313,373,2.037,374,1.313,375,1.692,376,1.007,377,1.313,378,1.692,379,1.313,380,1.758,381,2.124,382,1.264,383,1.313,384,1.692,385,1.313,386,1.313,387,1.692,388,1.313,389,1.692,390,1.313,391,1.907,392,1.313,393,1.313,394,1.758,395,1.313,396,1.313,397,1.264,398,1.313,399,1.171,400,1.264,401,1.692,402,1.313,403,1.313,404,1.313,405,1.313,406,1.313,407,1.313,408,1.313,409,1.313,410,0.68,411,1.313,412,1.217,413,1.313,414,1.907,415,1.313,416,1.313,417,1.313,418,1.313,419,1.313,420,1.313,421,1.313,422,1.007,423,1.313,424,1.264,425,1.007,426,1.692,427,1.907,428,1.758,429,1.313,430,1.313,431,1.313,432,0.97,433,1.313,434,0.516,435,1.692,436,1.313,437,1.313,438,1.171,439,1.264,440,1.313,441,1.313,442,1.313,443,1.313,444,1.313,445,1.313,446,1.313,447,1.313,448,1.313,449,1.313,450,1.313,451,1.171,452,1.217,453,1.313,454,1.313,455,1.313,456,1.313,457,1.313,458,1.313,459,1.313,460,0.801,461,1.029,462,1.046,463,1.007,464,0.799,465,1.264,466,1.171,467,1.086,468,0.97]],["title/interfaces/MovieSalesAgentDealRaw.html",[0,0.366,365,1.18]],["body/interfaces/MovieSalesAgentDealRaw.html",[0,0.76,2,0.117,3,0.117,4,0.117,5,0.101,12,0.221,13,0.373,16,0.237,17,0.144,18,0.015,19,0.249,59,0.196,82,0.754,98,0.991,106,0.782,121,0.464,122,1.086,218,0.007,314,0.543,347,0.01,348,0.007,349,2.019,350,1.236,352,1.284,353,1.284,354,1.284,355,2.19,356,1.284,357,1.284,358,0.638,359,1.103,360,0.665,361,0.782,362,1.667,363,1.732,364,1.732,365,2.019,366,2.108,367,2.19,368,2.19,369,1.236,370,1.667,371,1.284,372,1.284,373,2.019,374,1.284,375,1.667,376,0.985,377,1.284,378,1.667,379,1.284,380,1.732,381,2.108,382,1.236,383,1.284,384,1.667,385,1.284,386,1.284,387,1.667,388,1.284,389,1.667,390,1.284,391,1.886,392,1.284,393,1.284,394,1.732,395,1.284,396,1.284,397,1.236,398,1.284,399,1.145,400,1.236,401,1.667,402,1.284,403,1.284,404,1.284,405,1.284,406,1.284,407,1.284,408,1.284,409,1.284,410,0.665,411,1.284,412,1.19,413,1.284,414,1.886,415,1.284,416,1.284,417,1.284,418,1.284,419,1.284,420,1.284,421,1.284,422,0.985,423,1.284,424,1.236,425,0.985,426,1.679,427,1.886,428,1.732,429,1.284,430,1.284,431,1.284,432,0.948,433,1.284,434,0.508,435,1.667,436,1.284,437,1.284,438,1.145,439,1.236,440,1.284,441,1.284,442,1.284,443,1.284,444,1.284,445,1.284,446,1.284,447,1.284,448,1.284,449,1.284,450,1.284,451,1.145,452,1.19,453,1.284,454,1.284,455,1.284,456,1.284,457,1.284,458,1.284,459,1.284,460,0.789,461,1.013,462,1.023,463,0.985,464,0.782,465,1.236,466,1.145,467,1.062,468,0.948]],["title/interfaces/MovieSalesCast.html",[0,0.366,387,1.18]],["body/interfaces/MovieSalesCast.html",[0,0.761,2,0.119,3,0.119,4,0.119,5,0.102,12,0.224,13,0.377,16,0.236,17,0.13,18,0.015,19,0.252,59,0.196,82,0.757,98,0.994,106,0.793,121,0.471,122,1.093,218,0.008,314,0.547,347,0.01,348,0.008,349,2.18,350,1.253,352,1.302,353,1.302,354,1.302,355,1.974,356,1.302,357,1.302,358,0.647,359,1.119,360,0.675,361,0.793,362,1.683,363,1.748,364,1.748,365,1.899,366,1.683,367,1.748,368,1.748,369,1.253,370,1.683,371,1.302,372,1.302,373,2.03,374,1.302,375,1.683,376,0.999,377,1.302,378,1.683,379,1.302,380,1.748,381,2.118,382,1.253,383,1.302,384,1.683,385,1.302,386,1.302,387,1.899,388,2.11,389,1.683,390,1.302,391,1.899,392,1.302,393,1.302,394,1.748,395,1.302,396,1.302,397,1.253,398,1.302,399,1.162,400,1.253,401,1.683,402,1.302,403,1.302,404,1.302,405,1.302,406,1.302,407,1.302,408,1.302,409,1.302,410,0.675,411,1.302,412,1.207,413,1.302,414,1.899,415,1.302,416,1.302,417,1.302,418,1.302,419,1.302,420,1.302,421,1.302,422,0.999,423,1.302,424,1.253,425,0.999,426,1.687,427,1.899,428,1.748,429,1.302,430,1.302,431,1.302,432,0.962,433,1.302,434,0.513,435,1.683,436,1.302,437,1.302,438,1.162,439,1.253,440,1.302,441,1.302,442,1.302,443,1.302,444,1.302,445,1.302,446,1.302,447,1.302,448,1.302,449,1.302,450,1.302,451,1.162,452,1.207,453,1.302,454,1.302,455,1.302,456,1.302,457,1.302,458,1.302,459,1.302,460,0.797,461,1.023,462,1.037,463,0.999,464,0.793,465,1.253,466,1.162,467,1.077,468,0.962]],["title/interfaces/MovieSalesInfoDocumentWithDates.html",[0,0.366,424,1.18]],["body/interfaces/MovieSalesInfoDocumentWithDates.html",[0,0.761,2,0.12,3,0.12,4,0.12,5,0.103,16,0.236,17,0.116,18,0.015,19,0.253,59,0.196,82,0.782,98,0.995,106,0.799,121,0.475,122,1.096,218,0.008,314,0.549,347,0.01,348,0.008,349,2.037,350,1.264,352,1.313,353,1.313,354,1.313,355,1.982,356,1.313,357,1.313,358,0.652,359,1.128,360,0.68,361,0.799,362,1.692,363,1.758,364,1.758,365,1.907,366,1.692,367,1.758,368,1.758,369,1.264,370,1.692,371,1.313,372,1.313,373,2.037,374,1.313,375,1.692,376,1.007,377,1.313,378,1.692,379,1.313,380,1.758,381,2.124,382,1.264,383,1.313,384,1.692,385,1.313,386,1.313,387,1.692,388,1.313,389,1.692,390,1.313,391,1.907,392,1.313,393,1.313,394,1.758,395,1.313,396,1.313,397,1.264,398,1.313,399,1.171,400,1.264,401,1.692,402,1.313,403,1.313,404,1.313,405,1.313,406,1.313,407,1.313,408,1.313,409,1.313,410,0.68,411,1.313,412,1.217,413,1.313,414,2.037,415,1.313,416,1.313,417,1.313,418,1.313,419,1.313,420,1.313,421,1.313,422,1.007,423,1.313,424,1.692,425,1.007,426,1.692,427,1.907,428,1.758,429,1.313,430,1.313,431,1.313,432,0.97,433,1.313,434,0.516,435,1.692,436,1.313,437,1.313,438,1.171,439,1.264,440,1.313,441,1.313,442,1.313,443,1.313,444,1.313,445,1.313,446,1.313,447,1.313,448,1.313,449,1.313,450,1.313,451,1.171,452,1.217,453,1.313,454,1.313,455,1.313,456,1.313,457,1.313,458,1.313,459,1.313,460,0.801,461,1.029,462,1.046,463,1.007,464,0.799,465,1.264,466,1.171,467,1.086,468,0.97]],["title/interfaces/MovieSalesInfoRaw.html",[0,0.366,414,1.18]],["body/interfaces/MovieSalesInfoRaw.html",[0,0.757,2,0.113,3,0.113,4,0.113,5,0.097,12,0.213,13,0.364,16,0.237,17,0.157,18,0.015,19,0.244,59,0.195,82,0.745,98,0.984,106,0.755,121,0.449,122,1.071,218,0.007,314,0.6,347,0.01,348,0.007,349,1.99,350,1.193,352,1.24,353,1.24,354,1.24,355,1.925,356,1.24,357,1.24,358,0.616,359,1.065,360,0.642,361,0.755,362,1.628,363,1.691,364,1.691,365,1.852,366,1.628,367,1.691,368,1.691,369,1.193,370,1.628,371,1.24,372,1.24,373,2.149,374,1.24,375,1.628,376,0.951,377,1.24,378,1.628,379,1.24,380,1.691,381,2.082,382,1.193,383,1.24,384,1.628,385,1.24,386,1.24,387,1.628,388,1.24,389,1.628,390,1.24,391,1.852,392,1.24,393,1.24,394,1.691,395,1.24,396,1.24,397,1.193,398,1.24,399,1.106,400,1.193,401,1.628,402,1.24,403,1.24,404,1.24,405,1.24,406,1.24,407,1.24,408,1.24,409,1.24,410,0.642,411,1.24,412,1.149,413,1.24,414,1.99,415,2.068,416,2.068,417,2.068,418,2.068,419,2.068,420,2.068,421,2.068,422,1.476,423,2.068,424,1.193,425,0.951,426,1.659,427,1.852,428,1.691,429,1.24,430,1.24,431,1.24,432,0.916,433,1.24,434,0.496,435,1.628,436,1.24,437,1.24,438,1.106,439,1.193,440,1.24,441,1.24,442,1.24,443,1.24,444,1.24,445,1.24,446,1.24,447,1.24,448,1.24,449,1.24,450,1.24,451,1.106,452,1.149,453,1.24,454,1.24,455,1.24,456,1.24,457,1.24,458,1.24,459,1.24,460,0.771,461,0.99,462,0.988,463,0.951,464,0.755,465,1.193,466,1.106,467,1.026,468,0.916]],["title/interfaces/MovieStory.html",[0,0.366,384,1.18]],["body/interfaces/MovieStory.html",[0,0.76,2,0.118,3,0.118,4,0.118,5,0.101,12,0.222,13,0.375,16,0.237,17,0.138,18,0.015,19,0.251,59,0.196,82,0.755,98,0.992,106,0.787,121,0.468,122,1.09,218,0.007,314,0.545,347,0.01,348,0.007,349,2.024,350,1.245,352,1.293,353,1.293,354,1.293,355,1.967,356,1.293,357,1.293,358,0.642,359,1.111,360,0.67,361,0.787,362,1.675,363,1.74,364,1.74,365,1.893,366,1.675,367,1.74,368,1.74,369,1.245,370,1.675,371,1.293,372,1.293,373,2.024,374,1.293,375,1.675,376,0.992,377,1.293,378,1.675,379,1.293,380,1.74,381,2.113,382,1.245,383,1.293,384,1.893,385,2.104,386,2.104,387,1.675,388,1.293,389,1.675,390,1.293,391,1.893,392,1.293,393,1.293,394,1.74,395,1.293,396,1.293,397,1.245,398,1.293,399,1.153,400,1.245,401,1.675,402,1.293,403,1.293,404,1.293,405,1.293,406,1.293,407,1.293,408,1.293,409,1.293,410,0.67,411,1.293,412,1.198,413,1.293,414,1.893,415,1.293,416,1.293,417,1.293,418,1.293,419,1.293,420,1.293,421,1.293,422,0.992,423,1.293,424,1.245,425,0.992,426,1.683,427,1.893,428,1.74,429,1.293,430,1.293,431,1.293,432,0.955,433,1.293,434,0.511,435,1.675,436,1.293,437,1.293,438,1.153,439,1.245,440,1.293,441,1.293,442,1.293,443,1.293,444,1.293,445,1.293,446,1.293,447,1.293,448,1.293,449,1.293,450,1.293,451,1.153,452,1.198,453,1.293,454,1.293,455,1.293,456,1.293,457,1.293,458,1.293,459,1.293,460,0.793,461,1.018,462,1.03,463,0.992,464,0.787,465,1.245,466,1.153,467,1.069,468,0.955]],["title/interfaces/MovieVersionInfo.html",[0,0.366,362,1.18]],["body/interfaces/MovieVersionInfo.html",[0,0.76,2,0.118,3,0.118,4,0.118,5,0.101,12,0.222,13,0.375,16,0.237,17,0.138,18,0.015,19,0.251,59,0.196,82,0.755,98,0.992,106,0.787,121,0.468,122,1.09,218,0.007,314,0.545,347,0.01,348,0.007,349,2.024,350,1.245,352,1.293,353,1.293,354,1.293,355,1.967,356,1.293,357,1.293,358,0.642,359,1.111,360,0.67,361,0.787,362,1.893,363,2.195,364,2.195,365,1.893,366,1.675,367,1.74,368,1.74,369,1.245,370,1.675,371,1.293,372,1.293,373,2.024,374,1.293,375,1.675,376,0.992,377,1.293,378,1.675,379,1.293,380,1.74,381,2.113,382,1.245,383,1.293,384,1.675,385,1.293,386,1.293,387,1.675,388,1.293,389,1.675,390,1.293,391,1.893,392,1.293,393,1.293,394,1.74,395,1.293,396,1.293,397,1.245,398,1.293,399,1.153,400,1.245,401,1.675,402,1.293,403,1.293,404,1.293,405,1.293,406,1.293,407,1.293,408,1.293,409,1.293,410,0.67,411,1.293,412,1.198,413,1.293,414,1.893,415,1.293,416,1.293,417,1.293,418,1.293,419,1.293,420,1.293,421,1.293,422,0.992,423,1.293,424,1.245,425,0.992,426,1.683,427,1.893,428,1.74,429,1.293,430,1.293,431,1.293,432,0.955,433,1.293,434,0.511,435,1.675,436,1.293,437,1.293,438,1.153,439,1.245,440,1.293,441,1.293,442,1.293,443,1.293,444,1.293,445,1.293,446,1.293,447,1.293,448,1.293,449,1.293,450,1.293,451,1.153,452,1.198,453,1.293,454,1.293,455,1.293,456,1.293,457,1.293,458,1.293,459,1.293,460,0.793,461,1.018,462,1.03,463,0.992,464,0.787,465,1.245,466,1.153,467,1.069,468,0.955]],["title/interfaces/NotificationDocument.html",[0,0.366,857,3.067]],["body/interfaces/NotificationDocument.html",[0,0.598,2,0.146,3,0.146,4,0.146,5,0.126,8,1.184,12,0.275,13,0.431,16,0.224,17,0.158,18,0.015,19,0.329,59,0.179,82,0.688,102,1.055,105,0.938,115,0.976,156,1.733,192,2.898,218,0.009,286,0.865,314,0.605,347,0.012,348,0.009,425,1.672,426,1.23,434,0.69,464,1.43,468,1.477,678,2.323,679,2.323,682,1.486,691,2.687,730,2.653,731,2.434,732,3.537,734,3.001,763,3.471,781,2.126,783,2.434,838,3.001,857,5.456,858,4.012,859,5.713,860,5.995,861,5.713,862,6.533,863,6.063,864,3.537,865,3.679,866,5.005,867,5.005,868,5.005,869,5.005,870,5.005,871,5.005,872,5.005,873,4.458,874,4.458,875,4.458,876,4.458,877,3.001,878,3.679,879,4.458]],["title/interfaces/NotificationOptions.html",[0,0.366,861,3.067]],["body/interfaces/NotificationOptions.html",[0,0.594,2,0.144,3,0.144,4,0.144,5,0.124,8,1.171,12,0.272,13,0.428,16,0.223,17,0.164,18,0.015,19,0.327,59,0.178,82,0.546,102,1.043,105,0.928,115,0.965,156,2.147,192,3.143,218,0.009,286,0.856,314,0.44,347,0.011,348,0.009,351,2.634,425,1.523,426,1.744,434,0.583,464,1.209,468,1.679,678,2.297,679,2.297,682,1.469,691,3.329,730,3.015,731,2.406,732,4.02,734,2.967,763,3.143,781,3.015,783,3.451,838,2.967,857,4.97,858,3.967,859,5.69,860,5.978,861,5.69,862,5.523,863,4.408,864,3.512,865,3.637,866,4.97,867,4.97,868,4.97,869,4.97,870,4.97,871,4.97,872,4.97,873,6.323,874,4.408,875,4.408,876,4.408,877,2.967,878,3.637,879,4.408]],["title/interfaces/OrgProposal.html",[0,0.366,880,3.067]],["body/interfaces/OrgProposal.html",[0,0.535,2,0.123,3,0.123,4,0.123,5,0.105,6,1.201,11,1.951,12,0.231,13,0.385,14,2.502,16,0.221,17,0.141,18,0.015,19,0.329,55,1.711,56,1.711,59,0.105,75,1.865,89,2.677,105,1.454,115,1.421,121,0.805,128,1.656,165,2.349,171,2.606,199,1.951,202,1.951,218,0.008,286,0.965,308,1.642,347,0.01,348,0.012,412,1.248,434,0.653,534,3.805,638,3.805,640,4.473,807,5.156,814,3.369,815,3.994,864,3.161,877,2.52,880,4.473,881,3.369,882,4.971,883,4.905,884,3.369,885,3.744,886,3.744,887,3.089,888,3.744,889,4.473,890,3.369,891,5.349,892,3.369,893,3.369,894,5.84,895,4.971,896,3.744,897,3.744,898,3.744,899,3.089,900,3.744,901,3.744,902,3.744,903,3.744,904,3.744,905,3.744,906,4.971,907,5.58,908,6.36,909,4.971,910,5.349,911,4.971,912,4.473,913,4.971,914,4.971,915,4.971,916,3.744,917,4.101,918,3.744,919,3.744,920,3.744,921,3.744,922,4.971,923,3.744,924,3.744,925,3.744,926,3.744,927,3.744,928,4.971,929,3.744,930,3.744,931,4.971,932,3.744,933,4.971,934,3.089,935,3.744,936,3.744,937,3.744,938,3.744]],["title/interfaces/OrganizationDocPermissions.html",[0,0.366,767,2.439]],["body/interfaces/OrganizationDocPermissions.html",[0,0.674,2,0.127,3,0.127,4,0.127,5,0.109,6,1.247,12,0.24,13,0.395,16,0.225,17,0.159,18,0.015,19,0.294,59,0.195,102,0.92,115,0.851,158,1.573,163,1.573,218,0.011,219,1.705,286,0.755,312,1.353,314,0.695,347,0.011,348,0.008,426,1.072,434,0.701,462,1.114,467,1.157,468,1.353,480,2.123,481,3.43,488,1.854,489,2.228,490,1.854,491,2.783,492,2.472,499,2.832,537,3.647,539,2.472,544,1.894,605,2.783,682,1.296,686,1.764,696,1.937,720,1.937,728,2.783,729,2.617,730,2.43,731,2.782,732,3.24,733,2.976,734,3.43,735,2.472,736,2.228,737,2.228,738,2.228,739,2.228,740,2.123,741,2.123,742,2.123,743,2.976,744,2.344,745,2.976,746,2.976,747,2.976,748,2.783,749,2.783,750,2.783,751,2.617,752,2.783,753,2.472,754,2.783,755,2.783,756,2.472,757,2.783,758,2.976,759,2.976,760,2.783,761,2.783,762,2.976,763,2.026,764,2.976,765,2.783,766,2.976,767,3.647,768,4.794,769,4.794,770,4.794,771,4.794,772,3.836,773,2.783,774,2.976,775,2.783,776,3.647,777,2.976,778,3.43,779,2.783,780,2.783,781,1.854,782,2.026,783,2.123,784,2.617,785,3.901,786,2.976,787,2.976,788,4.061,789,2.976,790,2.976,791,2.976,792,2.976,793,2.976,794,2.976,795,2.472,796,2.976,797,2.976]],["title/interfaces/OrganizationDocument.html",[0,0.366,489,1.952]],["body/interfaces/OrganizationDocument.html",[0,0.627,2,0.134,3,0.134,4,0.134,5,0.115,8,1.088,12,0.253,13,0.408,14,1.724,16,0.235,17,0.165,18,0.015,59,0.179,70,3.318,98,0.977,102,1.248,105,1.109,115,0.897,121,0.848,189,2.392,193,2.041,218,0.008,288,1.473,312,1.4,347,0.011,348,0.008,410,1.214,434,0.688,460,0.672,461,0.862,466,1.314,489,3.34,544,1.365,676,2.049,682,1.365,686,2.018,730,1.953,735,3.913,781,3.109,939,3.686,940,5.73,941,5.075,942,6.518,943,6.368,944,6.368,945,6.368,946,6.368,947,6.368,948,6.368,949,4.096,950,5.272,951,4.096,952,3.686,953,4.096,954,3.686,955,4.096,956,4.096,957,3.686,958,5.272,959,4.096,960,5.272]],["title/interfaces/OrganizationPermissions.html",[0,0.366,765,2.439]],["body/interfaces/OrganizationPermissions.html",[0,0.682,2,0.132,3,0.132,4,0.132,5,0.114,6,1.297,12,0.25,13,0.405,16,0.226,17,0.145,18,0.015,19,0.3,59,0.196,102,0.957,115,0.886,158,1.636,163,1.636,218,0.011,219,1.773,286,0.785,312,1.388,314,0.632,347,0.011,348,0.008,426,1.115,434,0.669,462,1.158,467,1.203,468,1.388,480,2.208,481,3.519,488,1.929,489,2.317,490,1.929,491,2.895,492,2.572,499,2.886,537,3.742,539,2.572,544,1.931,605,2.895,682,1.348,686,1.81,696,2.015,720,2.015,728,2.895,729,2.722,730,2.493,731,2.854,732,3.324,733,3.096,734,3.519,735,2.572,736,2.317,737,2.317,738,2.317,739,2.317,740,2.208,741,2.208,742,2.208,743,3.096,744,2.438,745,3.096,746,3.096,747,3.096,748,2.895,749,2.895,750,2.895,751,2.722,752,2.895,753,2.572,754,2.895,755,2.895,756,2.572,757,2.895,758,3.096,759,3.096,760,2.895,761,2.895,762,3.096,763,2.107,764,3.096,765,3.742,766,4.688,767,2.895,768,4.002,769,4.002,770,4.002,771,4.002,772,2.572,773,2.895,774,3.096,775,2.895,776,3.742,777,3.096,778,3.519,779,2.895,780,2.895,781,1.929,782,2.107,783,2.208,784,2.722,785,4.002,786,3.096,787,3.096,788,4.123,789,3.096,790,3.096,791,3.096,792,3.096,793,3.096,794,3.096,795,2.572,796,3.096,797,3.096]],["title/interfaces/Prize.html",[0,0.366,373,1.18]],["body/interfaces/Prize.html",[0,0.76,2,0.117,3,0.117,4,0.117,5,0.1,12,0.22,13,0.372,16,0.237,17,0.144,18,0.015,19,0.249,59,0.196,82,0.753,98,1.01,106,0.78,121,0.758,122,1.085,218,0.007,314,0.543,347,0.01,348,0.007,349,2.017,350,1.233,351,2.293,352,1.281,353,1.281,354,1.281,355,1.958,356,1.281,357,1.281,358,0.637,359,1.101,360,0.664,361,0.78,362,1.664,363,1.729,364,1.729,365,1.884,366,1.664,367,1.729,368,1.729,369,1.233,370,1.664,371,1.281,372,1.281,373,2.256,374,2.096,375,1.664,376,0.983,377,1.281,378,1.664,379,1.281,380,1.729,381,2.106,382,1.233,383,1.281,384,1.664,385,1.281,386,1.281,387,1.664,388,1.281,389,1.664,390,1.281,391,1.884,392,1.281,393,1.281,394,1.729,395,1.281,396,1.281,397,1.233,398,1.281,399,1.143,400,1.233,401,1.664,402,1.281,403,1.281,404,1.281,405,1.281,406,1.281,407,1.281,408,1.281,409,1.281,410,0.664,411,1.281,412,1.187,413,1.281,414,1.884,415,1.281,416,1.281,417,1.281,418,1.281,419,1.281,420,1.281,421,1.281,422,0.983,423,1.281,424,1.233,425,0.983,426,1.678,427,1.884,428,1.729,429,1.281,430,1.281,431,1.281,432,0.946,433,1.281,434,0.508,435,1.664,436,1.281,437,1.281,438,1.143,439,1.233,440,1.281,441,1.281,442,1.281,443,1.281,444,1.281,445,1.281,446,1.281,447,1.281,448,1.281,449,1.281,450,1.281,451,1.143,452,1.187,453,1.281,454,1.281,455,1.281,456,1.281,457,1.281,458,1.281,459,1.281,460,0.788,461,1.012,462,1.02,463,0.983,464,0.78,465,1.233,466,1.143,467,1.06,468,0.946]],["title/interfaces/PromotionalElement.html",[0,0.366,375,1.18]],["body/interfaces/PromotionalElement.html",[0,0.76,2,0.118,3,0.118,4,0.118,5,0.101,12,0.222,13,0.375,16,0.237,17,0.138,18,0.015,19,0.251,59,0.196,82,0.755,98,0.992,106,0.787,121,0.468,122,1.09,218,0.007,314,0.545,347,0.01,348,0.007,349,2.024,350,1.245,352,1.293,353,1.293,354,1.293,355,1.967,356,1.293,357,1.293,358,0.642,359,1.111,360,0.67,361,0.787,362,1.675,363,1.74,364,1.74,365,1.893,366,1.675,367,1.74,368,1.74,369,1.245,370,1.675,371,1.293,372,1.293,373,2.024,374,1.293,375,1.893,376,1.613,377,2.104,378,1.675,379,1.293,380,1.74,381,2.113,382,1.245,383,1.293,384,1.675,385,1.293,386,1.293,387,1.675,388,1.293,389,1.675,390,1.293,391,1.893,392,1.293,393,1.293,394,1.74,395,1.293,396,1.293,397,1.245,398,1.293,399,1.153,400,1.245,401,1.675,402,1.293,403,1.293,404,1.293,405,1.293,406,1.293,407,1.293,408,1.293,409,1.293,410,0.67,411,1.293,412,1.198,413,1.293,414,1.893,415,1.293,416,1.293,417,1.293,418,1.293,419,1.293,420,1.293,421,1.293,422,0.992,423,1.293,424,1.245,425,0.992,426,1.683,427,1.893,428,1.74,429,1.293,430,1.293,431,1.293,432,0.955,433,1.293,434,0.511,435,1.675,436,1.293,437,1.293,438,1.153,439,1.245,440,1.293,441,1.293,442,1.293,443,1.293,444,1.293,445,1.293,446,1.293,447,1.293,448,1.293,449,1.293,450,1.293,451,1.153,452,1.198,453,1.293,454,1.293,455,1.293,456,1.293,457,1.293,458,1.293,459,1.293,460,0.793,461,1.018,462,1.03,463,0.992,464,0.787,465,1.245,466,1.153,467,1.069,468,0.955]],["title/interfaces/PublicMovie.html",[0,0.366,468,0.905]],["body/interfaces/PublicMovie.html",[0,0.761,2,0.117,3,0.117,4,0.117,5,0.101,8,0.95,12,0.221,13,0.373,16,0.237,17,0.138,18,0.015,19,0.25,59,0.196,82,0.754,98,0.991,106,0.783,121,0.465,122,1.087,218,0.007,314,0.544,347,0.01,348,0.007,349,2.02,350,1.238,352,1.287,353,1.287,354,1.287,355,1.962,356,1.287,357,1.287,358,0.639,359,1.105,360,0.666,361,0.783,362,1.669,363,1.734,364,1.734,365,1.888,366,1.669,367,1.734,368,1.734,369,1.238,370,1.669,371,1.287,372,1.287,373,2.02,374,1.287,375,1.669,376,0.987,377,1.287,378,1.669,379,1.287,380,1.734,381,2.312,382,1.238,383,1.287,384,1.669,385,1.287,386,1.287,387,1.669,388,1.287,389,1.669,390,1.287,391,1.888,392,1.287,393,1.287,394,1.734,395,1.287,396,1.287,397,1.238,398,1.287,399,1.148,400,1.238,401,1.669,402,1.287,403,1.287,404,1.287,405,1.287,406,1.287,407,1.287,408,1.287,409,1.287,410,0.666,411,1.287,412,1.192,413,1.287,414,1.888,415,1.287,416,1.287,417,1.287,418,1.287,419,1.287,420,1.287,421,1.287,422,0.987,423,1.287,424,1.238,425,0.987,426,1.731,427,1.888,428,1.734,429,1.287,430,1.287,431,1.287,432,0.95,433,1.287,434,0.643,435,1.669,436,1.287,437,1.287,438,1.148,439,1.238,440,1.287,441,1.287,442,1.287,443,1.287,444,1.287,445,1.287,446,1.287,447,1.287,448,1.287,449,1.287,450,1.287,451,1.148,452,1.192,453,1.287,454,1.287,455,1.287,456,1.287,457,1.287,458,1.287,459,1.287,460,0.791,461,1.015,462,1.025,463,0.987,464,0.783,465,1.238,466,1.547,467,1.434,468,1.28]],["title/interfaces/PublicOrganization.html",[0,0.366,730,1.625]],["body/interfaces/PublicOrganization.html",[0,0.684,2,0.147,3,0.147,4,0.147,5,0.126,8,1.19,12,0.277,13,0.432,14,2.349,16,0.232,17,0.132,18,0.015,59,0.184,70,2.907,98,0.837,102,1.321,105,1.174,115,0.981,121,0.868,189,2.169,193,2.232,218,0.009,288,1.612,312,1.482,347,0.012,348,0.009,410,1.132,434,0.704,466,1.79,489,3.197,544,1.493,676,2.169,682,1.493,686,2.103,730,2.661,735,3.548,781,3.181,939,4.032,940,5.021,941,4.867,942,6.077,943,5.58,944,5.58,945,5.58,946,5.58,947,5.58,948,5.58,949,4.481,950,5.58,951,4.481,952,5.021,953,5.58,954,4.032,955,4.481,956,4.481,957,4.032,958,5.58,959,4.481,960,5.58]],["title/interfaces/PublicUser.html",[0,0.366,827,2.439]],["body/interfaces/PublicUser.html",[0,0.647,2,0.166,3,0.166,4,0.166,5,0.143,8,1.345,12,0.313,13,0.466,16,0.235,17,0.16,18,0.015,59,0.143,89,2.133,121,0.863,218,0.011,347,0.012,348,0.011,351,3.275,466,1.625,807,5.076,827,4.303,859,4.559,894,5.968,961,5.837,962,7.64,963,7.64]],["title/classes/Queue.html",[964,2.812,965,3.067]],["body/classes/Queue.html",[0,0.241,3,0.073,4,0.073,5,0.143,6,1.624,12,0.138,13,0.266,14,1.761,15,0.981,16,0.203,17,0.132,18,0.015,19,0.277,55,1.571,56,1.023,59,0.132,73,1.166,78,1.791,102,1.111,105,1.484,106,1.289,115,1.465,121,0.544,122,0.779,126,1.115,128,0.746,144,1.995,148,2.084,152,2.561,156,0.87,158,1.39,160,1.639,163,1.39,165,2.478,171,2.946,183,1.115,194,1.166,198,1.166,218,0.005,224,1.166,241,1.166,245,1.166,266,1.166,286,0.667,288,1.236,314,0.343,327,1.166,347,0.007,348,0.005,351,1.068,358,0.994,360,0.64,425,0.617,451,0.718,452,0.746,460,0.563,478,1.283,484,2.014,485,4.222,486,1.847,499,1.712,524,4.737,528,2.014,529,2.014,532,3.092,539,3.218,544,0.746,546,2.014,560,4.222,563,2.014,564,1.713,566,3.092,567,2.014,568,1.283,569,2.014,586,2.835,621,3.201,622,2.835,623,3.092,624,2.014,638,2.63,647,3.092,654,3.092,657,2.835,676,0.87,753,1.423,756,1.423,778,3.407,782,1.166,784,1.507,788,2.313,795,1.423,813,2.014,815,3.358,830,1.507,848,1.602,864,2.185,877,2.815,878,1.847,899,3.451,917,1.847,934,1.847,964,1.847,965,5.006,966,2.579,967,2.014,968,3.959,969,4.692,970,3.764,971,2.579,972,2.579,973,2.579,974,3.437,975,2.579,976,5.563,977,2.579,978,2.239,979,2.239,980,2.239,981,3.437,982,2.239,983,5.062,984,5.297,985,4.692,986,1.847,987,2.014,988,2.239,989,2.014,990,4.222,991,2.014,992,3.092,993,2.014,994,3.092,995,2.014,996,3.092,997,2.014,998,3.437,999,2.239,1000,2.239,1001,3.764,1002,4.183,1003,2.239,1004,2.239,1005,2.239,1006,3.092,1007,2.239,1008,3.437,1009,2.239,1010,3.437,1011,4.183,1012,2.239,1013,2.239,1014,3.437,1015,2.239,1016,2.239,1017,2.239,1018,2.239,1019,2.239,1020,2.239,1021,2.239,1022,4.222,1023,2.239,1024,2.239,1025,2.239,1026,2.239,1027,5.887,1028,2.239,1029,2.239,1030,2.239,1031,2.239,1032,2.014,1033,2.239,1034,4.692,1035,2.239,1036,2.239,1037,4.958,1038,3.437,1039,2.239,1040,2.239,1041,3.437,1042,2.239,1043,2.239,1044,3.437,1045,2.239,1046,2.239,1047,4.183,1048,2.239,1049,2.239,1050,2.239,1051,2.239,1052,2.239,1053,3.437,1054,3.437,1055,2.835,1056,3.437,1057,3.437,1058,4.692,1059,3.437,1060,2.239,1061,3.437,1062,2.239,1063,4.808,1064,2.014,1065,2.239,1066,2.239,1067,2.239,1068,3.437,1069,3.437,1070,2.239,1071,2.239,1072,2.239,1073,2.239,1074,3.437,1075,3.437,1076,2.239,1077,2.239,1078,2.239,1079,3.092,1080,2.239,1081,2.239,1082,4.183,1083,3.437,1084,3.092,1085,4.692,1086,2.239,1087,3.437,1088,2.239,1089,3.764,1090,2.239,1091,2.239,1092,3.437,1093,2.239,1094,2.239,1095,3.092,1096,3.437,1097,2.239,1098,2.239,1099,2.239,1100,2.239,1101,4.183,1102,2.239,1103,2.239,1104,3.092,1105,2.239,1106,2.239,1107,2.239,1108,2.014,1109,3.437,1110,3.437,1111,2.239,1112,3.092,1113,2.239,1114,2.239,1115,2.239,1116,2.239,1117,2.239,1118,2.239,1119,2.239,1120,3.437,1121,3.437,1122,2.239,1123,2.239,1124,2.239,1125,2.239,1126,2.239,1127,2.239,1128,3.437,1129,2.239,1130,2.239,1131,2.239,1132,5.343,1133,3.764,1134,2.239,1135,4.183,1136,3.437,1137,2.239,1138,2.239,1139,2.239,1140,3.437,1141,2.239,1142,2.239,1143,2.239,1144,2.239,1145,2.239,1146,1.847,1147,2.239,1148,2.239,1149,2.239,1150,2.239,1151,2.239,1152,2.239,1153,2.239,1154,2.239,1155,2.239,1156,2.239,1157,3.437,1158,2.239,1159,2.239,1160,2.239,1161,3.437,1162,2.239,1163,2.239,1164,2.239,1165,2.239,1166,2.239,1167,2.239,1168,1.847,1169,2.239,1170,2.239,1171,2.239,1172,2.239,1173,2.239,1174,2.239,1175,2.239,1176,2.239,1177,2.239,1178,2.239,1179,2.239,1180,2.239,1181,2.239,1182,2.239,1183,2.239,1184,2.239,1185,2.239,1186,2.239,1187,2.239,1188,2.239,1189,2.239,1190,2.239,1191,2.239,1192,2.239,1193,2.239,1194,2.239,1195,2.239,1196,2.239,1197,2.239,1198,2.239,1199,2.239,1200,2.239,1201,2.239,1202,2.239,1203,2.239,1204,2.239,1205,2.239,1206,2.239,1207,2.239,1208,2.014,1209,2.239,1210,2.239,1211,2.239,1212,2.239,1213,2.239,1214,2.239,1215,2.239]],["title/interfaces/RegisterParams.html",[0,0.366,120,1.86]],["body/interfaces/RegisterParams.html",[0,0.624,1,1.705,2,0.065,3,0.065,4,0.065,5,0.056,6,0.635,7,1.081,9,1.789,10,2.609,11,2.288,12,0.122,13,0.242,14,0.833,15,0.868,16,0.226,17,0.104,18,0.015,19,0.324,20,1.134,21,1.081,22,3.249,23,1.081,24,2.902,25,2.516,26,1.081,27,1.705,28,1.705,29,1.081,30,2.397,31,2.216,32,1.081,33,1.134,34,1.081,35,1.134,36,1.081,37,1.134,38,1.081,39,1.134,40,1.081,41,2.738,42,1.789,43,1.134,44,1.789,45,1.134,46,1.789,47,1.134,48,1.789,49,1.134,50,1.789,51,1.134,52,1.134,53,1.789,54,1.134,55,0.905,56,0.905,57,2.609,58,2.111,59,0.178,60,3.287,61,2.91,62,2.216,63,2.91,64,3.008,65,1.134,66,1.134,67,1.134,68,2.216,69,1.134,70,3.223,71,2.516,72,2.216,73,1.627,74,1.134,75,3.145,76,1.789,77,2.111,78,1.627,79,1.134,80,3.249,81,1.705,82,0.387,83,1.789,84,1.134,85,1.134,86,1.134,87,1.134,88,1.134,89,1.628,90,1.134,91,1.134,92,1.705,93,1.705,94,3.392,95,1.081,96,3.157,97,1.134,98,0.297,99,1.081,100,1.081,101,1.081,102,1.402,103,3.046,104,1.134,105,1.461,106,1.405,107,1.134,108,1.134,109,1.134,110,1.134,111,1.789,112,1.134,113,1.134,114,1.134,115,1.241,116,1.705,117,2.188,118,2.738,119,1.927,120,2.111,121,0.755,122,0.582,123,1.789,124,1.705,125,1.489,126,1.556,127,1.789,128,1.041,129,1.789,130,1.789,131,1.134,132,1.627,133,1.789,134,1.134,135,1.134,136,1.134,137,1.134,138,1.134,139,1.134,140,1.134,141,1.134,142,1.789,143,1.134,144,0.944,145,1.134,146,1.134,147,1.134,148,1.556,149,1.081,150,0.944,151,1.134,152,1.081,153,1.134,154,1.134,155,1.134,156,0.77,157,1.134,158,1.263,159,1.134,160,0.944,161,2.216,162,1.134,163,0.801,164,1.134,165,2.138,166,1.134,167,2.91,168,1.134,169,1.134,170,1.134,171,2.868,172,1.134,173,1.134,174,1.134,175,1.134,176,1.134,177,1.789,178,1.134,179,1.134,180,1.789,181,1.705,182,2.609,183,2.53,184,2.91,185,1.789,186,1.705,187,1.134,188,1.134,189,0.77,190,2.516,191,1.134,192,2.288,193,2.188,194,3.137,195,1.134,196,1.705,197,2.516,198,2.288,199,2.646,200,1.134,201,1.134,202,2.646,203,3.046,204,1.134,205,1.081,206,2.516,207,2.216,208,2.216,209,2.216,210,1.134,211,1.081,212,1.134,213,1.134,214,1.134,215,1.134,216,1.134,217,1.134,218,0.01,219,1.369,220,1.789,221,1.134,222,1.134,223,2.609,224,2.288,225,1.134,226,1.134,227,1.134,228,1.134,229,1.134,230,1.134,231,1.134,232,1.134,233,1.134,234,1.789,235,1.789,236,2.216,237,1.134,238,1.134,239,1.789,240,2.216,241,1.032,242,1.134,243,1.134,244,1.134,245,1.032,246,1.134,247,1.134,248,1.134,249,1.134,250,1.134,251,1.134,252,1.134,253,1.134,254,1.789,255,2.216,256,1.134,257,1.134,258,1.134,259,1.134,260,1.134,261,1.081,262,1.032,263,2.516,264,1.705,265,1.134,266,1.032,267,1.789,268,1.134,269,2.516,270,1.134,271,1.789,272,1.134,273,1.134,274,1.789,275,1.134,276,1.789,277,1.134,278,1.134,279,1.134,280,1.134,281,1.134,282,1.134,283,1.134,284,1.134,285,2.738,286,0.928,287,2.738,288,1.391,289,1.789,290,1.134,291,1.789,292,1.134,293,1.134,294,1.789,295,1.134,296,1.134,297,1.134,298,1.134,299,1.134,300,2.516,301,1.134,302,1.134,303,1.134,304,1.134,305,1.134,306,1.134,307,1.134,308,0.868,309,1.134,310,1.134,311,1.789,312,0.526,313,1.789,314,0.197,315,1.134,316,1.789,317,1.789,318,1.789,319,1.789,320,1.789,321,1.789,322,1.789,323,1.789,324,1.789,325,1.134,326,1.134,327,1.032,328,1.134,329,1.134,330,1.134,331,1.789,332,1.134,333,1.134,334,1.134,335,1.032,336,1.134,337,1.789,338,1.789,339,1.134,340,1.134,341,1.134,342,1.134,343,1.134,344,1.134,345,1.134,346,1.134,347,0.006,348,0.004]],["title/interfaces/Relayer.html",[0,0.366,60,1.86]],["body/interfaces/Relayer.html",[0,0.621,1,1.684,2,0.064,3,0.064,4,0.064,5,0.055,6,0.625,7,1.064,9,1.768,10,2.589,11,2.268,12,0.12,13,0.239,14,0.821,15,0.855,16,0.225,17,0.13,18,0.015,19,0.323,20,1.117,21,1.064,22,3.531,23,1.064,24,3.322,25,3.028,26,1.064,27,1.684,28,1.684,29,1.064,30,2.376,31,2.89,32,1.064,33,1.117,34,1.064,35,1.117,36,1.064,37,1.117,38,1.064,39,1.117,40,1.064,41,2.718,42,1.768,43,1.117,44,1.768,45,1.117,46,1.768,47,1.117,48,1.768,49,1.117,50,1.768,51,1.117,52,1.117,53,1.768,54,1.117,55,0.891,56,0.891,57,2.589,58,2.09,59,0.177,60,3.322,61,3.233,62,2.89,63,3.233,64,2.991,65,1.117,66,1.117,67,1.117,68,2.194,69,1.117,70,3.211,71,2.494,72,2.194,73,1.608,74,1.117,75,3.135,76,1.768,77,2.09,78,1.608,79,1.117,80,3.233,81,1.684,82,0.382,83,1.768,84,1.117,85,1.117,86,1.117,87,1.117,88,1.117,89,1.612,90,1.117,91,1.117,92,1.684,93,1.684,94,3.14,95,1.064,96,3.14,97,1.117,98,0.292,99,1.064,100,1.064,101,1.064,102,1.396,103,3.028,104,1.117,105,1.459,106,1.401,107,1.117,108,1.117,109,1.117,110,1.117,111,1.768,112,1.117,113,1.117,114,1.117,115,1.235,116,1.684,117,2.169,118,2.718,119,1.907,120,1.684,121,0.688,122,0.575,123,1.768,124,1.684,125,1.471,126,1.537,127,1.768,128,1.028,129,1.768,130,1.768,131,1.117,132,1.608,133,1.768,134,1.117,135,1.117,136,1.117,137,1.117,138,1.117,139,1.117,140,1.117,141,1.117,142,1.768,143,1.117,144,0.93,145,1.117,146,1.117,147,1.117,148,1.537,149,1.064,150,0.93,151,1.117,152,1.064,153,1.117,154,1.117,155,1.117,156,0.758,157,1.117,158,1.248,159,1.117,160,0.93,161,2.194,162,1.117,163,0.788,164,1.117,165,2.123,166,1.117,167,2.89,168,1.117,169,1.117,170,1.117,171,2.861,172,1.117,173,1.117,174,1.117,175,1.117,176,1.117,177,1.768,178,1.117,179,1.117,180,1.768,181,1.684,182,2.589,183,2.513,184,2.89,185,1.768,186,1.684,187,1.117,188,1.117,189,0.758,190,2.494,191,1.117,192,2.268,193,2.169,194,3.125,195,1.117,196,1.684,197,2.494,198,2.268,199,2.629,200,1.117,201,1.117,202,2.629,203,3.028,204,1.117,205,1.064,206,2.494,207,2.194,208,2.194,209,2.194,210,1.117,211,1.064,212,1.117,213,1.117,214,1.117,215,1.117,216,1.117,217,1.117,218,0.01,219,1.353,220,1.768,221,1.117,222,1.117,223,2.589,224,2.268,225,1.117,226,1.117,227,1.117,228,1.117,229,1.117,230,1.117,231,1.117,232,1.117,233,1.117,234,1.768,235,1.768,236,2.194,237,1.117,238,1.117,239,1.768,240,2.194,241,1.016,242,1.117,243,1.117,244,1.117,245,1.016,246,1.117,247,1.117,248,1.117,249,1.117,250,1.117,251,1.117,252,1.117,253,1.117,254,1.768,255,2.194,256,1.117,257,1.117,258,1.117,259,1.117,260,1.117,261,1.064,262,1.016,263,2.494,264,1.684,265,1.117,266,1.016,267,1.768,268,1.117,269,2.494,270,1.117,271,1.768,272,1.117,273,1.117,274,1.768,275,1.117,276,1.768,277,1.117,278,1.117,279,1.117,280,1.117,281,1.117,282,1.117,283,1.117,284,1.117,285,2.718,286,0.921,287,2.718,288,1.377,289,1.768,290,1.117,291,1.768,292,1.117,293,1.117,294,1.768,295,1.117,296,1.117,297,1.117,298,1.117,299,1.117,300,2.494,301,1.117,302,1.117,303,1.117,304,1.117,305,1.117,306,1.117,307,1.117,308,0.855,309,1.117,310,1.117,311,1.768,312,0.518,313,1.768,314,0.194,315,1.117,316,1.768,317,1.768,318,1.768,319,1.768,320,1.768,321,1.768,322,1.768,323,1.768,324,1.768,325,1.117,326,1.117,327,1.016,328,1.117,329,1.117,330,1.117,331,1.768,332,1.117,333,1.117,334,1.117,335,1.016,336,1.117,337,1.768,338,1.768,339,1.117,340,1.117,341,1.117,342,1.117,343,1.117,344,1.117,345,1.117,346,1.117,347,0.006,348,0.004]],["title/interfaces/RelayerConfig.html",[0,0.366,64,1.86]],["body/interfaces/RelayerConfig.html",[0,0.621,1,1.684,2,0.064,3,0.064,4,0.064,5,0.055,6,0.625,7,1.064,9,1.768,10,2.589,11,2.268,12,0.12,13,0.239,14,0.821,15,0.855,16,0.228,17,0.13,18,0.015,19,0.323,20,1.117,21,1.064,22,3.233,23,1.064,24,2.885,25,2.494,26,1.064,27,1.684,28,1.684,29,1.064,30,2.376,31,2.194,32,1.064,33,1.117,34,1.064,35,1.117,36,1.064,37,1.117,38,1.064,39,1.117,40,1.064,41,2.718,42,1.768,43,1.117,44,1.768,45,1.117,46,1.768,47,1.117,48,1.768,49,1.117,50,1.768,51,1.117,52,1.117,53,1.768,54,1.117,55,0.891,56,0.891,57,2.589,58,2.09,59,0.177,60,3.274,61,3.233,62,2.194,63,2.89,64,3.08,65,2.494,66,2.494,67,2.494,68,2.89,69,2.494,70,3.211,71,2.494,72,2.194,73,1.608,74,1.117,75,3.135,76,1.768,77,2.09,78,1.608,79,1.117,80,3.233,81,1.684,82,0.382,83,1.768,84,1.117,85,1.117,86,1.117,87,1.117,88,1.117,89,1.612,90,1.117,91,1.117,92,1.684,93,1.684,94,3.14,95,1.064,96,3.14,97,1.117,98,0.292,99,1.064,100,1.064,101,1.064,102,1.396,103,3.028,104,1.117,105,1.459,106,1.401,107,1.117,108,1.117,109,1.117,110,1.117,111,1.768,112,1.117,113,1.117,114,1.117,115,1.235,116,1.684,117,2.169,118,2.718,119,1.907,120,1.684,121,0.688,122,0.575,123,1.768,124,1.684,125,1.471,126,1.537,127,1.768,128,1.028,129,1.768,130,1.768,131,1.117,132,1.608,133,1.768,134,1.117,135,1.117,136,1.117,137,1.117,138,1.117,139,1.117,140,1.117,141,1.117,142,1.768,143,1.117,144,0.93,145,1.117,146,1.117,147,1.117,148,1.537,149,1.064,150,0.93,151,1.117,152,1.064,153,1.117,154,1.117,155,1.117,156,0.758,157,1.117,158,1.248,159,1.117,160,0.93,161,2.194,162,1.117,163,0.788,164,1.117,165,2.123,166,1.117,167,2.89,168,1.117,169,1.117,170,1.117,171,2.861,172,1.117,173,1.117,174,1.117,175,1.117,176,1.117,177,1.768,178,1.117,179,1.117,180,1.768,181,1.684,182,2.589,183,2.513,184,2.89,185,1.768,186,1.684,187,1.117,188,1.117,189,0.758,190,2.494,191,1.117,192,2.268,193,2.169,194,3.125,195,1.117,196,1.684,197,2.494,198,2.268,199,2.629,200,1.117,201,1.117,202,2.629,203,3.028,204,1.117,205,1.064,206,2.494,207,2.194,208,2.194,209,2.194,210,1.117,211,1.064,212,1.117,213,1.117,214,1.117,215,1.117,216,1.117,217,1.117,218,0.01,219,1.353,220,1.768,221,1.117,222,1.117,223,2.589,224,2.268,225,1.117,226,1.117,227,1.117,228,1.117,229,1.117,230,1.117,231,1.117,232,1.117,233,1.117,234,1.768,235,1.768,236,2.194,237,1.117,238,1.117,239,1.768,240,2.194,241,1.016,242,1.117,243,1.117,244,1.117,245,1.016,246,1.117,247,1.117,248,1.117,249,1.117,250,1.117,251,1.117,252,1.117,253,1.117,254,1.768,255,2.194,256,1.117,257,1.117,258,1.117,259,1.117,260,1.117,261,1.064,262,1.016,263,2.494,264,1.684,265,1.117,266,1.016,267,1.768,268,1.117,269,2.494,270,1.117,271,1.768,272,1.117,273,1.117,274,1.768,275,1.117,276,1.768,277,1.117,278,1.117,279,1.117,280,1.117,281,1.117,282,1.117,283,1.117,284,1.117,285,2.718,286,0.921,287,2.718,288,1.377,289,1.768,290,1.117,291,1.768,292,1.117,293,1.117,294,1.768,295,1.117,296,1.117,297,1.117,298,1.117,299,1.117,300,2.494,301,1.117,302,1.117,303,1.117,304,1.117,305,1.117,306,1.117,307,1.117,308,0.855,309,1.117,310,1.117,311,1.768,312,0.518,313,1.768,314,0.194,315,1.117,316,1.768,317,1.768,318,1.768,319,1.768,320,1.768,321,1.768,322,1.768,323,1.768,324,1.768,325,1.117,326,1.117,327,1.016,328,1.117,329,1.117,330,1.117,331,1.768,332,1.117,333,1.117,334,1.117,335,1.016,336,1.117,337,1.768,338,1.768,339,1.117,340,1.117,341,1.117,342,1.117,343,1.117,344,1.117,345,1.117,346,1.117,347,0.006,348,0.004]],["title/interfaces/RequestTokensParams.html",[0,0.366,95,1.86]],["body/interfaces/RequestTokensParams.html",[0,0.624,1,1.705,2,0.065,3,0.065,4,0.065,5,0.056,6,0.635,7,1.081,9,1.789,10,2.609,11,2.288,12,0.122,13,0.242,14,0.833,15,0.868,16,0.225,17,0.104,18,0.015,19,0.324,20,1.134,21,1.081,22,3.249,23,1.081,24,2.902,25,2.516,26,1.081,27,1.705,28,1.705,29,1.081,30,2.397,31,2.216,32,1.081,33,1.134,34,1.081,35,1.134,36,1.081,37,1.134,38,1.081,39,1.134,40,1.081,41,2.738,42,1.789,43,1.134,44,1.789,45,1.134,46,1.789,47,1.134,48,1.789,49,1.134,50,1.789,51,1.134,52,1.134,53,1.789,54,1.134,55,0.905,56,0.905,57,2.609,58,2.111,59,0.178,60,3.287,61,2.91,62,2.216,63,2.91,64,3.008,65,1.134,66,1.134,67,1.134,68,2.216,69,1.134,70,3.223,71,2.516,72,2.216,73,1.627,74,1.134,75,3.145,76,1.789,77,2.111,78,1.627,79,1.134,80,3.249,81,1.705,82,0.387,83,1.789,84,1.134,85,1.134,86,1.134,87,1.134,88,1.134,89,1.628,90,1.134,91,1.134,92,1.705,93,1.705,94,3.157,95,1.705,96,3.392,97,2.516,98,0.58,99,1.081,100,1.081,101,1.081,102,1.402,103,3.046,104,1.134,105,1.461,106,1.405,107,1.134,108,1.134,109,1.134,110,1.134,111,1.789,112,1.134,113,1.134,114,1.134,115,1.241,116,1.705,117,2.188,118,2.738,119,1.927,120,1.705,121,0.692,122,0.582,123,1.789,124,1.705,125,1.489,126,1.556,127,1.789,128,1.041,129,1.789,130,1.789,131,1.134,132,1.627,133,1.789,134,1.134,135,1.134,136,1.134,137,1.134,138,1.134,139,1.134,140,1.134,141,1.134,142,1.789,143,1.134,144,0.944,145,1.134,146,1.134,147,1.134,148,1.556,149,1.081,150,0.944,151,1.134,152,1.081,153,1.134,154,1.134,155,1.134,156,0.77,157,1.134,158,1.263,159,1.134,160,0.944,161,2.216,162,1.134,163,0.801,164,1.134,165,2.138,166,1.134,167,2.91,168,1.134,169,1.134,170,1.134,171,2.868,172,1.134,173,1.134,174,1.134,175,1.134,176,1.134,177,1.789,178,1.134,179,1.134,180,1.789,181,1.705,182,2.609,183,2.53,184,2.91,185,1.789,186,1.705,187,1.134,188,1.134,189,0.77,190,2.516,191,1.134,192,2.288,193,2.188,194,3.137,195,1.134,196,1.705,197,2.516,198,2.288,199,2.646,200,1.134,201,1.134,202,2.646,203,3.046,204,1.134,205,1.081,206,2.516,207,2.216,208,2.216,209,2.216,210,1.134,211,1.081,212,1.134,213,1.134,214,1.134,215,1.134,216,1.134,217,1.134,218,0.01,219,1.369,220,1.789,221,1.134,222,1.134,223,2.609,224,2.288,225,1.134,226,1.134,227,1.134,228,1.134,229,1.134,230,1.134,231,1.134,232,1.134,233,1.134,234,1.789,235,1.789,236,2.216,237,1.134,238,1.134,239,1.789,240,2.216,241,1.032,242,1.134,243,1.134,244,1.134,245,1.032,246,1.134,247,1.134,248,1.134,249,1.134,250,1.134,251,1.134,252,1.134,253,1.134,254,1.789,255,2.216,256,1.134,257,1.134,258,1.134,259,1.134,260,1.134,261,1.081,262,1.032,263,2.516,264,1.705,265,1.134,266,1.032,267,1.789,268,1.134,269,2.516,270,1.134,271,1.789,272,1.134,273,1.134,274,1.789,275,1.134,276,1.789,277,1.134,278,1.134,279,1.134,280,1.134,281,1.134,282,1.134,283,1.134,284,1.134,285,2.738,286,0.928,287,2.738,288,1.391,289,1.789,290,1.134,291,1.789,292,1.134,293,1.134,294,1.789,295,1.134,296,1.134,297,1.134,298,1.134,299,1.134,300,2.516,301,1.134,302,1.134,303,1.134,304,1.134,305,1.134,306,1.134,307,1.134,308,0.868,309,1.134,310,1.134,311,1.789,312,0.526,313,1.789,314,0.197,315,1.134,316,1.789,317,1.789,318,1.789,319,1.789,320,1.789,321,1.789,322,1.789,323,1.789,324,1.789,325,1.134,326,1.134,327,1.032,328,1.134,329,1.134,330,1.134,331,1.789,332,1.134,333,1.134,334,1.134,335,1.032,336,1.134,337,1.789,338,1.789,339,1.134,340,1.134,341,1.134,342,1.134,343,1.134,344,1.134,345,1.134,346,1.134,347,0.006,348,0.004]],["title/interfaces/SendParams.html",[0,0.366,93,1.86]],["body/interfaces/SendParams.html",[0,0.624,1,1.705,2,0.065,3,0.065,4,0.065,5,0.056,6,0.635,7,1.081,9,1.789,10,2.609,11,2.288,12,0.122,13,0.242,14,0.833,15,0.868,16,0.225,17,0.104,18,0.015,19,0.324,20,1.134,21,1.081,22,3.249,23,1.081,24,2.902,25,2.516,26,1.081,27,1.705,28,1.705,29,1.081,30,2.397,31,2.216,32,1.081,33,1.134,34,1.081,35,1.134,36,1.081,37,1.134,38,1.081,39,1.134,40,1.081,41,2.738,42,1.789,43,1.134,44,1.789,45,1.134,46,1.789,47,1.134,48,1.789,49,1.134,50,1.789,51,1.134,52,1.134,53,1.789,54,1.134,55,0.905,56,0.905,57,2.609,58,2.111,59,0.178,60,3.287,61,2.91,62,2.216,63,2.91,64,3.008,65,1.134,66,1.134,67,1.134,68,2.216,69,1.134,70,3.223,71,2.516,72,2.216,73,1.627,74,1.134,75,3.219,76,1.789,77,2.111,78,1.627,79,1.134,80,3.249,81,1.705,82,0.387,83,1.789,84,1.134,85,1.134,86,1.134,87,1.134,88,1.134,89,1.628,90,1.134,91,1.134,92,2.397,93,2.111,94,3.392,95,1.081,96,3.157,97,1.134,98,0.297,99,1.081,100,1.081,101,1.081,102,1.402,103,3.046,104,1.134,105,1.461,106,1.405,107,1.134,108,1.134,109,1.134,110,1.134,111,1.789,112,1.134,113,1.134,114,1.134,115,1.241,116,1.705,117,2.188,118,2.738,119,1.927,120,1.705,121,0.692,122,0.582,123,1.789,124,1.705,125,1.489,126,1.556,127,1.789,128,1.041,129,1.789,130,1.789,131,1.134,132,1.627,133,1.789,134,1.134,135,1.134,136,1.134,137,1.134,138,1.134,139,1.134,140,1.134,141,1.134,142,1.789,143,1.134,144,0.944,145,1.134,146,1.134,147,1.134,148,1.556,149,1.081,150,0.944,151,1.134,152,1.081,153,1.134,154,1.134,155,1.134,156,0.77,157,1.134,158,1.263,159,1.134,160,0.944,161,2.216,162,1.134,163,0.801,164,1.134,165,2.138,166,1.134,167,2.91,168,1.134,169,1.134,170,1.134,171,2.868,172,1.134,173,1.134,174,1.134,175,1.134,176,1.134,177,1.789,178,1.134,179,1.134,180,1.789,181,1.705,182,2.609,183,2.53,184,2.91,185,1.789,186,1.705,187,1.134,188,1.134,189,0.77,190,2.516,191,1.134,192,2.288,193,2.188,194,3.137,195,1.134,196,1.705,197,2.516,198,2.288,199,2.646,200,1.134,201,1.134,202,2.646,203,3.046,204,1.134,205,1.081,206,2.516,207,2.216,208,2.216,209,2.216,210,1.134,211,1.081,212,1.134,213,1.134,214,1.134,215,1.134,216,1.134,217,1.134,218,0.01,219,1.369,220,1.789,221,1.134,222,1.134,223,2.609,224,2.288,225,1.134,226,1.134,227,1.134,228,1.134,229,1.134,230,1.134,231,1.134,232,1.134,233,1.134,234,1.789,235,1.789,236,2.216,237,1.134,238,1.134,239,1.789,240,2.216,241,1.032,242,1.134,243,1.134,244,1.134,245,1.032,246,1.134,247,1.134,248,1.134,249,1.134,250,1.134,251,1.134,252,1.134,253,1.134,254,1.789,255,2.216,256,1.134,257,1.134,258,1.134,259,1.134,260,1.134,261,1.081,262,1.032,263,2.516,264,1.705,265,1.134,266,1.032,267,1.789,268,1.134,269,2.516,270,1.134,271,1.789,272,1.134,273,1.134,274,1.789,275,1.134,276,1.789,277,1.134,278,1.134,279,1.134,280,1.134,281,1.134,282,1.134,283,1.134,284,1.134,285,2.738,286,0.928,287,2.738,288,1.391,289,1.789,290,1.134,291,1.789,292,1.134,293,1.134,294,1.789,295,1.134,296,1.134,297,1.134,298,1.134,299,1.134,300,2.516,301,1.134,302,1.134,303,1.134,304,1.134,305,1.134,306,1.134,307,1.134,308,0.868,309,1.134,310,1.134,311,1.789,312,0.526,313,1.789,314,0.197,315,1.134,316,1.789,317,1.789,318,1.789,319,1.789,320,1.789,321,1.789,322,1.789,323,1.789,324,1.789,325,1.134,326,1.134,327,1.032,328,1.134,329,1.134,330,1.134,331,1.789,332,1.134,333,1.134,334,1.134,335,1.032,336,1.134,337,1.789,338,1.789,339,1.134,340,1.134,341,1.134,342,1.134,343,1.134,344,1.134,345,1.134,346,1.134,347,0.006,348,0.004]],["title/interfaces/SignDeliveryParams.html",[0,0.366,99,1.86]],["body/interfaces/SignDeliveryParams.html",[0,0.624,1,1.7,2,0.065,3,0.065,4,0.065,5,0.056,6,0.633,7,1.077,9,1.784,10,2.604,11,2.283,12,0.122,13,0.241,14,0.83,15,0.865,16,0.226,17,0.113,18,0.015,19,0.324,20,1.13,21,1.077,22,3.245,23,1.077,24,2.898,25,2.511,26,1.077,27,1.7,28,1.7,29,1.077,30,2.392,31,2.21,32,1.077,33,1.13,34,1.077,35,1.13,36,1.077,37,1.13,38,1.077,39,1.13,40,1.077,41,2.733,42,1.784,43,1.13,44,1.784,45,1.13,46,1.784,47,1.13,48,1.784,49,1.13,50,1.784,51,1.13,52,1.13,53,1.784,54,1.13,55,0.901,56,0.901,57,2.604,58,2.106,59,0.178,60,3.283,61,2.905,62,2.21,63,2.905,64,3.004,65,1.13,66,1.13,67,1.13,68,2.21,69,1.13,70,3.22,71,2.511,72,2.21,73,1.622,74,1.13,75,3.143,76,1.784,77,2.106,78,1.622,79,1.13,80,3.245,81,1.7,82,0.385,83,1.784,84,1.13,85,1.13,86,1.13,87,1.13,88,1.13,89,1.624,90,1.13,91,1.13,92,1.7,93,1.7,94,3.153,95,1.077,96,3.389,97,1.13,98,0.296,99,1.7,100,2.392,101,2.392,102,1.4,103,3.041,104,1.13,105,1.46,106,1.404,107,1.13,108,1.13,109,1.13,110,1.13,111,1.784,112,1.13,113,1.13,114,1.13,115,1.24,116,1.7,117,2.183,118,2.733,119,1.922,120,1.7,121,0.691,122,0.58,123,1.784,124,1.7,125,1.485,126,1.551,127,1.784,128,1.037,129,1.784,130,1.784,131,1.13,132,1.622,133,1.784,134,1.13,135,1.13,136,1.13,137,1.13,138,1.13,139,1.13,140,1.13,141,1.13,142,1.784,143,1.13,144,0.94,145,1.13,146,1.13,147,1.13,148,1.551,149,1.077,150,0.94,151,1.13,152,1.077,153,1.13,154,1.13,155,1.13,156,0.767,157,1.13,158,1.259,159,1.13,160,0.94,161,2.21,162,1.13,163,0.798,164,1.13,165,2.134,166,1.13,167,2.905,168,1.13,169,1.13,170,1.13,171,2.866,172,1.13,173,1.13,174,1.13,175,1.13,176,1.13,177,1.784,178,1.13,179,1.13,180,1.784,181,1.7,182,2.604,183,2.526,184,2.905,185,1.784,186,1.7,187,1.13,188,1.13,189,0.767,190,2.511,191,1.13,192,2.283,193,2.183,194,3.134,195,1.13,196,1.7,197,2.511,198,2.283,199,2.642,200,1.13,201,1.13,202,2.642,203,3.041,204,1.13,205,1.077,206,2.511,207,2.21,208,2.21,209,2.21,210,1.13,211,1.077,212,1.13,213,1.13,214,1.13,215,1.13,216,1.13,217,1.13,218,0.01,219,1.365,220,1.784,221,1.13,222,1.13,223,2.604,224,2.283,225,1.13,226,1.13,227,1.13,228,1.13,229,1.13,230,1.13,231,1.13,232,1.13,233,1.13,234,1.784,235,1.784,236,2.21,237,1.13,238,1.13,239,1.784,240,2.21,241,1.028,242,1.13,243,1.13,244,1.13,245,1.028,246,1.13,247,1.13,248,1.13,249,1.13,250,1.13,251,1.13,252,1.13,253,1.13,254,1.784,255,2.21,256,1.13,257,1.13,258,1.13,259,1.13,260,1.13,261,1.077,262,1.028,263,2.511,264,1.7,265,1.13,266,1.028,267,1.784,268,1.13,269,2.511,270,1.13,271,1.784,272,1.13,273,1.13,274,1.784,275,1.13,276,1.784,277,1.13,278,1.13,279,1.13,280,1.13,281,1.13,282,1.13,283,1.13,284,1.13,285,2.733,286,0.926,287,2.733,288,1.388,289,1.784,290,1.13,291,1.784,292,1.13,293,1.13,294,1.784,295,1.13,296,1.13,297,1.13,298,1.13,299,1.13,300,2.511,301,1.13,302,1.13,303,1.13,304,1.13,305,1.13,306,1.13,307,1.13,308,0.865,309,1.13,310,1.13,311,1.784,312,0.524,313,1.784,314,0.197,315,1.13,316,1.784,317,1.784,318,1.784,319,1.784,320,1.784,321,1.784,322,1.784,323,1.784,324,1.784,325,1.13,326,1.13,327,1.028,328,1.13,329,1.13,330,1.13,331,1.784,332,1.13,333,1.13,334,1.13,335,1.028,336,1.13,337,1.784,338,1.784,339,1.13,340,1.13,341,1.13,342,1.13,343,1.13,344,1.13,345,1.13,346,1.13,347,0.006,348,0.004]],["title/interfaces/SignedMetaTx.html",[0,0.366,92,1.86]],["body/interfaces/SignedMetaTx.html",[0,0.624,1,1.703,2,0.065,3,0.065,4,0.065,5,0.056,6,0.634,7,1.08,8,0.525,9,1.788,10,2.608,11,2.489,12,0.122,13,0.242,14,0.832,15,0.867,16,0.225,17,0.091,18,0.015,19,0.324,20,1.133,21,1.08,22,3.248,23,1.08,24,2.901,25,2.514,26,1.08,27,1.703,28,1.703,29,1.08,30,2.396,31,2.214,32,1.08,33,1.133,34,1.08,35,1.133,36,1.08,37,1.133,38,1.08,39,1.133,40,1.08,41,2.737,42,1.788,43,1.133,44,1.788,45,1.133,46,1.788,47,1.133,48,1.788,49,1.133,50,1.788,51,1.133,52,1.133,53,1.788,54,1.133,55,0.904,56,0.904,57,2.608,58,2.11,59,0.178,60,3.286,61,2.908,62,2.214,63,2.908,64,3.006,65,1.133,66,1.133,67,1.133,68,2.214,69,1.133,70,3.222,71,2.514,72,2.214,73,2.014,74,1.133,75,3.145,76,1.788,77,2.771,78,1.626,79,1.133,80,3.325,81,2.11,82,0.478,83,1.788,84,1.133,85,1.133,86,1.133,87,1.133,88,1.133,89,1.847,90,1.788,91,1.788,92,2.11,93,1.703,94,3.156,95,1.08,96,3.156,97,1.133,98,0.297,99,1.08,100,1.08,101,1.08,102,1.401,103,3.045,104,1.133,105,1.46,106,1.405,107,1.133,108,1.133,109,1.133,110,1.133,111,1.788,112,1.133,113,1.133,114,1.133,115,1.241,116,1.703,117,2.186,118,2.737,119,1.925,120,1.703,121,0.691,122,0.581,123,1.788,124,1.703,125,1.488,126,1.555,127,1.788,128,1.04,129,1.788,130,1.788,131,1.133,132,1.626,133,1.788,134,1.133,135,1.133,136,1.133,137,1.133,138,1.133,139,1.133,140,1.133,141,1.133,142,1.788,143,1.133,144,0.943,145,1.133,146,1.133,147,1.133,148,1.555,149,1.08,150,0.943,151,1.133,152,1.08,153,1.133,154,1.133,155,1.133,156,0.769,157,1.133,158,1.262,159,1.133,160,0.943,161,2.214,162,1.133,163,0.8,164,1.133,165,2.137,166,1.133,167,2.908,168,1.133,169,1.133,170,1.133,171,2.867,172,1.133,173,1.133,174,1.133,175,1.133,176,1.133,177,1.788,178,1.133,179,1.133,180,1.788,181,1.703,182,2.608,183,2.529,184,2.908,185,1.788,186,1.703,187,1.133,188,1.133,189,0.769,190,2.514,191,1.133,192,2.287,193,2.186,194,3.136,195,1.133,196,1.703,197,2.514,198,2.287,199,2.645,200,1.133,201,1.133,202,2.645,203,3.045,204,1.133,205,1.08,206,2.514,207,2.214,208,2.214,209,2.214,210,1.133,211,1.08,212,1.133,213,1.133,214,1.133,215,1.133,216,1.133,217,1.133,218,0.01,219,1.368,220,1.788,221,1.133,222,1.133,223,2.608,224,2.287,225,1.133,226,1.133,227,1.133,228,1.133,229,1.133,230,1.133,231,1.133,232,1.133,233,1.133,234,1.788,235,1.788,236,2.214,237,1.133,238,1.133,239,1.788,240,2.214,241,1.03,242,1.133,243,1.133,244,1.133,245,1.03,246,1.133,247,1.133,248,1.133,249,1.133,250,1.133,251,1.133,252,1.133,253,1.133,254,1.788,255,2.214,256,1.133,257,1.133,258,1.133,259,1.133,260,1.133,261,1.08,262,1.03,263,2.514,264,1.703,265,1.133,266,1.03,267,1.788,268,1.133,269,2.514,270,1.133,271,1.788,272,1.133,273,1.133,274,1.788,275,1.133,276,1.788,277,1.133,278,1.133,279,1.133,280,1.133,281,1.133,282,1.133,283,1.133,284,1.133,285,2.737,286,0.927,287,2.737,288,1.39,289,1.788,290,1.133,291,1.788,292,1.133,293,1.133,294,1.788,295,1.133,296,1.133,297,1.133,298,1.133,299,1.133,300,2.514,301,1.133,302,1.133,303,1.133,304,1.133,305,1.133,306,1.133,307,1.133,308,0.867,309,1.133,310,1.133,311,1.788,312,0.525,313,1.788,314,0.197,315,1.133,316,1.788,317,1.788,318,1.788,319,1.788,320,1.788,321,1.788,322,1.788,323,1.788,324,1.788,325,1.133,326,1.133,327,1.03,328,1.133,329,1.133,330,1.133,331,1.788,332,1.133,333,1.133,334,1.133,335,1.03,336,1.133,337,1.788,338,1.788,339,1.133,340,1.133,341,1.133,342,1.133,343,1.133,344,1.133,345,1.133,346,1.133,347,0.006,348,0.004]],["title/interfaces/SnapObject.html",[0,0.366,780,2.439]],["body/interfaces/SnapObject.html",[0,0.675,2,0.128,3,0.128,4,0.128,5,0.11,6,1.253,8,1.037,12,0.241,13,0.396,16,0.225,17,0.16,18,0.015,19,0.295,59,0.195,102,0.925,115,0.855,158,1.579,163,1.579,218,0.011,219,1.712,286,0.758,312,1.357,314,0.625,347,0.011,348,0.008,426,1.667,434,0.662,462,1.119,467,1.52,468,1.605,480,2.132,481,3.44,488,1.863,489,2.238,490,1.863,491,2.795,492,2.483,499,2.838,537,3.658,539,2.483,544,2.014,605,2.795,682,1.301,686,1.769,696,1.946,720,1.946,728,2.795,729,2.629,730,2.882,731,2.79,732,3.843,733,2.989,734,3.44,735,2.483,736,2.238,737,2.238,738,2.238,739,2.238,740,2.132,741,2.132,742,2.132,743,2.989,744,2.354,745,2.989,746,2.989,747,2.989,748,2.795,749,2.795,750,2.795,751,2.629,752,2.795,753,2.483,754,2.795,755,2.795,756,2.483,757,2.795,758,2.989,759,2.989,760,2.795,761,2.795,762,2.989,763,2.035,764,2.989,765,2.795,766,2.989,767,2.795,768,3.912,769,3.912,770,3.912,771,3.912,772,2.483,773,2.795,774,2.989,775,2.795,776,3.658,777,3.912,778,3.835,779,3.658,780,3.658,781,2.882,782,2.969,783,3.299,784,2.629,785,3.912,786,2.989,787,2.989,788,4.068,789,2.989,790,2.989,791,2.989,792,2.989,793,2.989,794,2.989,795,2.483,796,2.989,797,2.989]],["title/interfaces/StakeholderDocument.html",[0,0.366,492,2.167]],["body/interfaces/StakeholderDocument.html",[0,0.536,2,0.163,3,0.163,4,0.163,5,0.14,8,1.322,12,0.308,13,0.461,16,0.23,17,0.156,18,0.015,59,0.168,102,1.409,115,1.09,156,1.936,193,2.481,218,0.01,314,0.635,347,0.012,348,0.01,351,2.838,358,0.89,434,0.711,461,1.048,492,4.047,613,5.952,718,3.436,877,3.352,954,4.482,957,4.482,1216,5.738,1217,5.738,1218,7.765,1219,7.765,1220,5.738]],["title/interfaces/StepDocument.html",[0,0.366,720,1.698]],["body/interfaces/StepDocument.html",[0,0.707,2,0.13,3,0.13,4,0.13,5,0.111,8,1.051,16,0.215,17,0.122,18,0.015,19,0.267,59,0.19,82,0.78,98,0.945,102,0.937,105,0.833,115,1.379,121,0.515,189,2.004,218,0.008,286,0.768,312,1.369,314,0.606,347,0.011,348,0.008,358,0.707,360,1.132,361,0.867,376,1.092,410,0.737,422,1.86,432,1.051,434,0.544,460,0.996,461,1.278,463,1.092,464,1.476,475,3.797,476,2.954,478,2.954,488,1.888,490,2.459,526,2.161,544,1.911,553,2.687,558,4.182,568,2.954,674,2.386,675,3.646,676,1.539,677,2.268,678,2.063,679,2.063,680,2.815,681,2.268,682,1.319,683,3.278,684,2.517,685,2.517,686,1.785,687,2.517,688,3.108,689,2.517,690,2.517,691,2.386,692,2.664,693,2.664,694,3.86,695,3.86,696,2.857,697,3.278,698,2.664,699,3.47,700,4.005,701,2.664,702,2.268,703,2.664,704,2.664,705,2.664,706,2.664,707,2.664,708,2.664,709,2.664,710,2.664,711,2.664,712,2.664,713,2.664,714,2.664,715,2.664,716,2.664,717,2.664,718,2.063,719,2.517,720,3.026,721,2.664,722,2.664,723,2.517,724,2.664,725,2.664,726,2.664,727,2.664]],["title/interfaces/StepDocumentWithDate.html",[0,0.366,490,1.625]],["body/interfaces/StepDocumentWithDate.html",[0,0.707,2,0.129,3,0.129,4,0.129,5,0.111,8,1.048,16,0.215,17,0.122,18,0.015,19,0.266,59,0.19,82,0.779,98,0.944,102,0.934,105,0.83,115,1.378,121,0.513,189,2,218,0.008,286,0.766,312,1.366,314,0.605,347,0.011,348,0.008,358,0.705,360,1.13,361,0.864,376,1.088,410,0.735,422,1.858,432,1.048,434,0.543,460,0.995,461,1.277,463,1.419,464,1.488,475,3.793,476,2.948,478,2.948,488,1.881,490,2.73,526,2.154,544,1.908,553,2.681,558,4.179,568,2.948,674,2.378,675,3.64,676,1.534,677,2.26,678,2.056,679,2.056,680,2.808,681,2.26,682,1.314,683,3.271,684,2.508,685,2.508,686,1.781,687,2.508,688,3.101,689,2.508,690,2.508,691,2.378,692,2.655,693,2.655,694,3.853,695,3.853,696,2.852,697,3.271,698,2.655,699,3.463,700,4.001,701,2.655,702,2.26,703,2.655,704,2.655,705,2.655,706,2.655,707,2.655,708,2.655,709,2.655,710,2.655,711,2.655,712,2.655,713,2.655,714,2.655,715,2.655,716,2.655,717,2.655,718,2.056,719,2.508,720,2.852,721,3.463,722,2.655,723,2.508,724,2.655,725,2.655,726,2.655,727,2.655]],["title/interfaces/StepRaw.html",[0,0.366,700,2.167]],["body/interfaces/StepRaw.html",[0,0.7,2,0.124,3,0.124,4,0.124,5,0.107,8,1.008,12,0.235,13,0.389,16,0.223,17,0.147,18,0.015,19,0.26,59,0.188,82,0.74,98,0.932,102,0.899,105,0.799,115,1.361,121,0.778,189,2.324,218,0.008,286,0.737,312,1.332,314,0.596,347,0.01,348,0.008,351,2.392,358,0.678,360,1.158,361,0.831,376,1.047,410,0.707,422,1.9,432,1.008,434,0.656,460,0.921,461,1.182,463,1.047,464,1.509,475,3.848,476,2.874,478,2.874,488,1.811,490,2.392,526,2.072,544,1.992,553,2.614,558,4.14,568,2.874,674,2.288,675,3.573,676,1.476,677,2.175,678,1.978,679,1.978,680,2.739,681,2.175,682,1.265,683,3.19,684,2.414,685,2.414,686,1.736,687,2.414,688,3.024,689,2.414,690,2.414,691,2.288,692,2.555,693,2.555,694,4.023,695,4.023,696,2.978,697,3.19,698,2.555,699,3.782,700,3.952,701,2.555,702,2.175,703,2.555,704,2.555,705,2.555,706,2.555,707,2.555,708,2.555,709,2.555,710,2.555,711,2.555,712,2.555,713,2.555,714,2.555,715,2.555,716,2.555,717,2.555,718,1.978,719,2.414,720,2.799,721,2.555,722,2.555,723,2.414,724,2.555,725,2.555,726,2.555,727,2.555]],["title/interfaces/StoredDocument.html",[0,0.366,1001,3.067]],["body/interfaces/StoredDocument.html",[0,0.247,2,0.075,3,0.075,4,0.075,5,0.144,6,0.735,12,0.142,13,0.271,14,1.787,16,0.198,17,0.133,18,0.015,19,0.279,55,1.599,56,1.048,59,0.134,73,1.194,78,1.823,102,1.124,105,1.487,106,1.298,115,1.47,121,0.455,122,0.791,126,1.142,128,0.764,144,2.024,148,2.115,156,0.891,158,1.415,160,1.669,163,1.415,165,2.495,171,2.955,183,1.142,194,1.194,218,0.005,224,1.194,241,1.194,245,1.194,266,1.194,286,0.679,288,1.259,314,0.229,327,1.194,347,0.007,348,0.005,358,1.002,360,0.652,425,0.632,451,0.735,452,0.764,460,0.574,478,1.313,484,2.063,485,2.063,486,1.891,499,1.743,524,4.891,528,2.063,529,2.063,532,3.149,539,2.225,544,0.764,546,2.063,560,4.275,563,2.063,564,1.755,566,3.149,567,2.063,568,1.313,569,2.063,586,2.887,621,3.249,622,2.887,623,3.149,624,2.063,638,2.678,647,3.149,654,3.149,657,2.887,753,1.458,756,1.458,778,3.444,782,1.194,784,1.543,788,2.355,795,1.458,813,2.063,815,3.4,830,1.543,848,1.641,864,2.225,877,2.857,878,1.891,899,3.502,917,1.891,934,1.891,964,1.891,965,4.853,967,2.063,969,2.292,970,2.063,974,2.292,976,5.393,978,2.292,979,2.292,980,2.292,981,3.5,982,2.292,983,5.116,984,5.334,985,4.75,986,1.891,987,2.063,988,2.292,989,2.063,990,4.275,991,2.063,992,3.149,993,2.063,994,3.149,995,2.063,996,3.149,997,2.063,998,3.5,999,2.292,1000,2.292,1001,4.275,1002,5.393,1003,2.292,1004,2.292,1005,2.292,1006,3.149,1007,2.292,1008,3.5,1009,2.292,1010,3.5,1011,4.245,1012,2.292,1013,2.292,1014,3.5,1015,2.292,1016,2.292,1017,2.292,1018,2.292,1019,2.292,1020,2.292,1021,2.292,1022,4.275,1023,2.292,1024,2.292,1025,2.292,1026,2.292,1027,5.927,1028,2.292,1029,2.292,1030,2.292,1031,2.292,1032,2.063,1033,2.292,1034,4.75,1035,2.292,1036,2.292,1037,4.99,1038,3.5,1039,2.292,1040,2.292,1041,3.5,1042,2.292,1043,2.292,1044,3.5,1045,2.292,1046,2.292,1047,4.245,1048,2.292,1049,2.292,1050,2.292,1051,2.292,1052,2.292,1053,3.5,1054,3.5,1055,2.887,1056,3.5,1057,3.5,1058,4.75,1059,3.5,1060,2.292,1061,3.5,1062,2.292,1063,4.853,1064,2.063,1065,2.292,1066,2.292,1067,2.292,1068,3.5,1069,3.5,1070,2.292,1071,2.292,1072,2.292,1073,2.292,1074,3.5,1075,3.5,1076,2.292,1077,2.292,1078,2.292,1079,3.149,1080,2.292,1081,2.292,1082,4.245,1083,3.5,1084,3.149,1085,4.75,1086,2.292,1087,3.5,1088,2.292,1089,3.82,1090,2.292,1091,2.292,1092,3.5,1093,2.292,1094,2.292,1095,3.149,1096,3.5,1097,2.292,1098,2.292,1099,2.292,1100,2.292,1101,4.245,1102,2.292,1103,2.292,1104,3.149,1105,2.292,1106,2.292,1107,2.292,1108,2.063,1109,3.5,1110,3.5,1111,2.292,1112,3.149,1113,2.292,1114,2.292,1115,2.292,1116,2.292,1117,2.292,1118,2.292,1119,2.292,1120,3.5,1121,3.5,1122,2.292,1123,2.292,1124,2.292,1125,2.292,1126,2.292,1127,2.292,1128,3.5,1129,2.292,1130,2.292,1131,2.292,1132,5.393,1133,3.82,1134,2.292,1135,4.245,1136,3.5,1137,2.292,1138,2.292,1139,2.292,1140,3.5,1141,2.292,1142,2.292,1143,2.292,1144,2.292,1145,2.292,1146,1.891,1147,2.292,1148,2.292,1149,2.292,1150,2.292,1151,2.292,1152,2.292,1153,2.292,1154,2.292,1155,2.292,1156,2.292,1157,3.5,1158,2.292,1159,2.292,1160,2.292,1161,3.5,1162,2.292,1163,2.292,1164,2.292,1165,2.292,1166,2.292,1167,2.292,1168,1.891,1169,2.292,1170,2.292,1171,2.292,1172,2.292,1173,2.292,1174,2.292,1175,2.292,1176,2.292,1177,2.292,1178,2.292,1179,2.292,1180,2.292,1181,2.292,1182,2.292,1183,2.292,1184,2.292,1185,2.292,1186,2.292,1187,2.292,1188,2.292,1189,2.292,1190,2.292,1191,2.292,1192,2.292,1193,2.292,1194,2.292,1195,2.292,1196,2.292,1197,2.292,1198,2.292,1199,2.292,1200,2.292,1201,2.292,1202,2.292,1203,2.292,1204,2.292,1205,2.292,1206,2.292,1207,2.292,1208,2.063,1209,2.292,1210,2.292,1211,2.292,1212,2.292,1213,2.292,1214,2.292,1215,2.292]],["title/interfaces/Template.html",[0,0.366,851,2.294]],["body/interfaces/Template.html",[0,0.41,2,0.125,3,0.125,4,0.125,5,0.107,6,1.223,12,0.236,13,0.39,16,0.219,17,0.142,18,0.015,19,0.322,55,1.743,56,1.743,59,0.159,102,1.513,105,1.451,115,1.233,119,3.101,122,0.71,128,1.27,144,2.399,165,2.52,171,2.986,218,0.008,335,3.243,347,0.01,348,0.008,360,1.115,434,0.632,451,1.614,476,2.883,477,5.031,480,2.746,489,3.226,493,3.813,494,3.813,496,3.813,553,3.12,609,5.031,657,3.146,666,5.031,815,2.729,851,4.549,887,5.135,941,4.764,986,3.146,1022,5.067,1037,3.146,1055,3.146,1063,4.527,1089,4.527,1095,3.431,1104,3.431,1133,4.527,1221,4.393,1222,6.898,1223,6.898,1224,4.393,1225,5.796,1226,6.898,1227,4.393,1228,3.813,1229,4.393,1230,4.393,1231,3.813,1232,4.393,1233,4.393,1234,4.393,1235,4.393,1236,4.393,1237,4.393,1238,6.898,1239,4.393,1240,4.393,1241,4.393,1242,4.393,1243,4.393,1244,5.796,1245,4.393,1246,4.393,1247,4.393,1248,4.393,1249,4.393,1250,5.796,1251,4.393,1252,4.393,1253,4.393,1254,4.393,1255,4.393,1256,4.393,1257,5.796,1258,5.796,1259,5.796,1260,4.393,1261,5.796,1262,5.796,1263,4.393,1264,5.796,1265,5.796,1266,4.393,1267,4.393,1268,4.393,1269,4.393,1270,5.796,1271,4.393,1272,4.393,1273,4.393]],["title/interfaces/TemplateDocument.html",[0,0.366,1274,3.408]],["body/interfaces/TemplateDocument.html",[0,0.542,2,0.165,3,0.165,4,0.165,5,0.142,8,1.34,12,0.312,13,0.465,16,0.23,17,0.16,18,0.015,19,0.261,59,0.142,119,3.299,121,0.862,218,0.01,286,0.979,347,0.012,348,0.01,358,0.901,360,1.234,361,1.104,432,1.758,434,0.699,460,0.983,461,1.262,851,4.036,887,4.162,941,5.068,1274,5.997,1275,5.045]],["title/interfaces/Title.html",[0,0.366,381,1.18]],["body/interfaces/Title.html",[0,0.76,2,0.117,3,0.117,4,0.117,5,0.101,12,0.222,13,0.374,16,0.237,17,0.138,18,0.015,19,0.25,59,0.196,82,0.755,98,0.992,106,0.786,121,0.467,122,1.089,218,0.007,314,0.545,347,0.01,348,0.007,349,2.023,350,1.242,351,2.304,352,1.291,353,1.291,354,1.291,355,1.965,356,1.291,357,1.291,358,0.641,359,1.108,360,0.668,361,0.786,362,1.672,363,1.738,364,1.738,365,1.891,366,1.672,367,1.738,368,1.738,369,1.242,370,1.672,371,1.291,372,1.291,373,2.023,374,1.291,375,1.672,376,0.99,377,1.291,378,1.672,379,1.291,380,1.738,381,2.175,382,2.023,383,2.102,384,1.672,385,1.291,386,1.291,387,1.672,388,1.291,389,1.672,390,1.291,391,1.891,392,1.291,393,1.291,394,1.738,395,1.291,396,1.291,397,1.242,398,1.291,399,1.151,400,1.242,401,1.672,402,1.291,403,1.291,404,1.291,405,1.291,406,1.291,407,1.291,408,1.291,409,1.291,410,0.668,411,1.291,412,1.196,413,1.291,414,1.891,415,1.291,416,1.291,417,1.291,418,1.291,419,1.291,420,1.291,421,1.291,422,0.99,423,1.291,424,1.242,425,0.99,426,1.682,427,1.891,428,1.738,429,1.291,430,1.291,431,1.291,432,0.953,433,1.291,434,0.51,435,1.672,436,1.291,437,1.291,438,1.151,439,1.242,440,1.291,441,1.291,442,1.291,443,1.291,444,1.291,445,1.291,446,1.291,447,1.291,448,1.291,449,1.291,450,1.291,451,1.151,452,1.196,453,1.291,454,1.291,455,1.291,456,1.291,457,1.291,458,1.291,459,1.291,460,0.792,461,1.017,462,1.028,463,0.99,464,0.786,465,1.242,466,1.151,467,1.067,468,0.953]],["title/interfaces/UserDocPermissions.html",[0,0.366,773,2.439]],["body/interfaces/UserDocPermissions.html",[0,0.674,2,0.127,3,0.127,4,0.127,5,0.109,6,1.247,12,0.24,13,0.395,16,0.232,17,0.159,18,0.015,19,0.294,59,0.195,102,0.92,115,0.851,158,1.573,163,1.573,218,0.011,219,1.705,286,0.755,312,1.353,314,0.625,347,0.011,348,0.008,426,1.072,434,0.701,462,1.114,467,1.157,468,1.353,480,2.123,481,3.43,488,1.854,489,2.228,490,1.854,491,2.783,492,2.472,499,2.832,537,3.647,539,2.472,544,1.894,605,2.783,682,1.296,686,1.764,696,1.937,720,1.937,728,2.783,729,2.617,730,2.43,731,2.782,732,3.24,733,2.976,734,3.43,735,2.472,736,2.228,737,2.228,738,2.228,739,2.228,740,2.123,741,2.123,742,2.123,743,2.976,744,2.344,745,2.976,746,2.976,747,2.976,748,2.783,749,2.783,750,2.783,751,2.617,752,2.783,753,2.472,754,2.783,755,2.783,756,2.472,757,2.783,758,2.976,759,2.976,760,2.783,761,2.783,762,2.976,763,2.026,764,2.976,765,2.783,766,2.976,767,2.783,768,4.794,769,4.794,770,4.794,771,4.794,772,2.472,773,3.647,774,4.618,775,2.783,776,3.647,777,2.976,778,3.43,779,2.783,780,2.783,781,1.854,782,2.026,783,2.123,784,2.617,785,3.901,786,2.976,787,2.976,788,4.061,789,2.976,790,2.976,791,2.976,792,2.976,793,2.976,794,2.976,795,2.472,796,2.976,797,2.976]],["title/interfaces/UserProposal.html",[0,0.366,893,3.067]],["body/interfaces/UserProposal.html",[0,0.535,2,0.123,3,0.123,4,0.123,5,0.105,6,1.201,11,1.951,12,0.231,13,0.385,14,2.502,16,0.221,17,0.141,18,0.015,19,0.329,55,1.711,56,1.711,59,0.105,75,1.865,89,2.677,105,1.454,115,1.421,121,0.647,128,1.656,165,2.349,171,2.606,199,1.951,202,1.951,218,0.008,286,0.965,308,1.642,347,0.01,348,0.012,412,1.248,434,0.525,534,3.805,638,3.805,640,4.473,807,5.264,814,3.369,815,3.994,864,3.161,877,2.52,880,3.369,881,3.369,882,4.971,883,4.905,884,3.369,885,3.744,886,3.744,887,3.089,888,3.744,889,4.473,890,3.369,891,5.349,892,3.369,893,4.473,894,6.062,895,4.971,896,3.744,897,3.744,898,3.744,899,3.089,900,3.744,901,3.744,902,3.744,903,3.744,904,3.744,905,3.744,906,4.971,907,5.58,908,6.36,909,4.971,910,5.349,911,4.971,912,4.473,913,4.971,914,4.971,915,4.971,916,3.744,917,4.101,918,3.744,919,3.744,920,3.744,921,3.744,922,4.971,923,3.744,924,3.744,925,3.744,926,3.744,927,3.744,928,4.971,929,3.744,930,3.744,931,4.971,932,3.744,933,4.971,934,3.089,935,3.744,936,3.744,937,3.744,938,3.744]],["title/dependencies.html",[262,2.138,1276,3.27]],["body/dependencies.html",[10,2.244,18,0.015,21,2.244,23,2.244,26,2.244,29,2.884,30,2.244,32,2.244,34,2.244,36,2.244,38,2.244,40,2.244,117,2.048,128,1.37,218,0.009,262,2.142,286,1.133,347,0.011,348,0.009,486,3.392,534,3.146,540,4.111,621,3.146,649,4.111,652,3.699,760,2.942,802,4.111,864,2.614,883,3.392,912,3.699,986,4.359,987,3.699,1064,3.699,1208,3.699,1277,4.735,1278,7.887,1279,4.735,1280,6.726,1281,4.735,1282,4.735,1283,4.735,1284,4.735,1285,4.735,1286,4.735,1287,4.735,1288,4.735,1289,4.735,1290,4.735,1291,6.087,1292,6.087,1293,4.735,1294,4.735,1295,4.735,1296,4.735,1297,4.735,1298,4.735,1299,4.735,1300,4.735,1301,8.057,1302,6.087,1303,4.735,1304,4.735,1305,4.735,1306,6.087,1307,4.735,1308,7.099,1309,4.735,1310,6.087,1311,4.735,1312,4.735,1313,4.735,1314,4.735,1315,4.735,1316,4.735,1317,4.735,1318,4.735,1319,4.735,1320,4.735,1321,4.735,1322,4.735,1323,4.735,1324,4.735,1325,6.726,1326,4.735,1327,4.735,1328,4.735,1329,4.735,1330,4.735,1331,4.735,1332,4.735,1333,4.735,1334,4.735,1335,4.111,1336,4.735,1337,4.735,1338,4.735,1339,4.735,1340,4.735,1341,4.735,1342,4.735,1343,4.735,1344,4.735,1345,4.735,1346,4.735,1347,4.735,1348,4.735,1349,4.735,1350,4.735,1351,4.735,1352,4.735,1353,4.735,1354,4.735,1355,4.735,1356,4.735,1357,4.735,1358,4.735,1359,4.735,1360,4.735,1361,4.735,1362,4.111,1363,4.735,1364,4.735,1365,4.735,1366,4.735,1367,4.735,1368,4.735,1369,4.735,1370,4.735,1371,4.735,1372,4.735,1373,4.735,1374,4.735,1375,4.735,1376,4.735,1377,4.735]],["title/miscellaneous/enumerations.html",[1378,2.342,1379,4.102]],["body/miscellaneous/enumerations.html",[6,1.432,12,0.276,15,3.161,17,0.132,18,0.015,218,0.009,288,2.002,312,1.83,347,0.012,348,0.009,410,1.037,475,3.355,476,3.189,674,2.691,676,2.164,683,3.539,684,2.838,685,2.838,686,2.426,687,2.838,688,3.355,689,2.838,690,2.838,729,3.005,732,3.539,735,3.539,738,3.189,739,3.189,744,3.355,775,3.984,776,3.984,781,2.655,824,3.747,825,3.195,835,3.417,836,3.417,837,4.643,838,3.747,839,3.195,840,4.261,841,4.261,842,4.261,843,3.417,849,4.593,850,4.593,858,4.017,860,4.017,865,3.683,866,5.009,867,5.009,868,5.009,869,5.009,870,5.009,871,5.009,872,5.009,939,4.017,941,3.417,1378,3.683,1379,4.464,1380,4.464,1381,4.464,1382,5.567,1383,4.464,1384,5.143,1385,5.143]],["title/index.html",[12,0.175,1146,2.342,1386,2.839]],["body/index.html",[5,0.143,18,0.015,59,0.176,117,1.922,124,2.768,128,1.286,132,2.011,156,2.202,160,2.418,163,2.051,182,2.106,183,1.922,186,3.092,218,0.008,223,2.106,286,1.099,288,1.388,347,0.011,348,0.008,358,0.689,360,0.719,382,1.336,435,1.336,439,1.336,460,0.633,524,3.184,533,4.563,534,2.953,544,1.286,570,3.859,621,2.953,622,3.184,676,1.5,723,2.454,751,2.597,761,4.053,763,2.011,779,3.629,795,2.454,807,2.953,809,3.859,810,3.859,848,2.762,851,2.597,864,2.454,865,3.184,883,3.184,884,3.472,910,4.563,940,3.472,970,4.563,984,4.563,1006,3.472,1032,3.472,1037,3.184,1055,3.184,1079,3.472,1084,3.472,1108,3.472,1112,3.472,1168,3.184,1228,3.859,1335,5.071,1362,6.248,1387,4.445,1388,4.445,1389,4.445,1390,4.445,1391,4.445,1392,4.445,1393,4.445,1394,4.445,1395,4.445,1396,4.445,1397,4.445,1398,4.445,1399,6.93,1400,4.445,1401,4.445,1402,4.445,1403,4.445,1404,6.93,1405,4.445,1406,5.842,1407,4.445,1408,4.445,1409,4.445,1410,4.445,1411,5.842,1412,6.93,1413,6.525,1414,5.842,1415,4.445,1416,4.445,1417,4.445,1418,6.525,1419,4.445,1420,5.842,1421,5.842,1422,4.445,1423,6.525,1424,6.525,1425,4.445,1426,4.445,1427,4.445,1428,4.445,1429,4.445,1430,4.445,1431,4.445,1432,7.531,1433,4.445,1434,5.842,1435,6.93,1436,4.445,1437,5.842,1438,4.445,1439,4.445,1440,4.445,1441,4.445,1442,4.445,1443,4.445,1444,4.445,1445,4.445,1446,4.445,1447,4.445,1448,5.842,1449,5.842,1450,5.842,1451,4.445,1452,4.445,1453,4.445,1454,4.445,1455,4.445,1456,4.445,1457,4.445,1458,3.859,1459,4.445,1460,4.445,1461,4.445,1462,4.445,1463,4.445,1464,4.445,1465,5.842,1466,4.445,1467,4.445,1468,6.525,1469,4.445,1470,4.445,1471,4.445,1472,4.445,1473,4.445,1474,4.445,1475,4.445,1476,5.842,1477,5.842,1478,4.445,1479,4.445,1480,4.445,1481,5.842,1482,4.445,1483,4.445,1484,4.445,1485,5.842,1486,4.445,1487,7.389,1488,4.445,1489,4.445,1490,4.445,1491,4.445,1492,6.525,1493,4.445,1494,4.445,1495,4.445,1496,4.445,1497,4.445,1498,4.445,1499,3.859,1500,4.445,1501,4.445,1502,4.445,1503,4.445,1504,4.445,1505,4.445,1506,4.445,1507,4.445,1508,6.525,1509,4.445,1510,5.842,1511,4.445,1512,4.445,1513,4.445,1514,4.445,1515,4.445]],["title/license.html",[1146,2.342,1386,2.839,1516,2.839]],["body/license.html",[18,0.012,24,2.681,132,3.075,160,2.814,205,2.681,218,0.01,264,2.681,347,0.012,348,0.01,366,1.7,397,1.7,533,4.42,564,3.759,652,4.42,662,4.911,688,3.557,800,4.911,839,3.515,952,5.694,1168,4.052,1231,4.911,1458,4.911,1499,4.911,1516,4.911,1517,5.658,1518,7.289,1519,5.658,1520,6.799,1521,5.658,1522,5.658,1523,5.658,1524,5.658,1525,5.658,1526,5.658,1527,8.064,1528,5.658,1529,5.658,1530,5.658,1531,6.799,1532,5.658,1533,5.658,1534,5.658,1535,5.658,1536,5.658,1537,5.658,1538,6.799,1539,5.658,1540,5.658,1541,5.658,1542,5.658,1543,5.658,1544,6.799,1545,5.658,1546,5.658,1547,5.658,1548,5.658,1549,5.658,1550,5.658,1551,5.658,1552,5.658,1553,5.658,1554,5.658,1555,5.658,1556,5.658,1557,5.658,1558,5.658,1559,5.658,1560,5.658,1561,5.658,1562,5.658,1563,5.658,1564,5.658,1565,5.658,1566,5.658,1567,5.658,1568,5.658,1569,5.658]],["title/modules.html",[1570,4.665]],["body/modules.html",[18,0.013,218,0.012,347,0.013,348,0.012,1570,5.623]],["title/overview.html",[1571,4.665]],["body/overview.html",[2,0.183,18,0.013,149,3.05,218,0.012,347,0.013,348,0.012,586,4.61,964,4.61,1571,5.588]],["title/miscellaneous/typealiases.html",[1378,2.342,1572,4.726]],["body/miscellaneous/typealiases.html",[6,2.13,7,2.573,12,0.291,17,0.136,18,0.014,27,2.573,28,2.573,57,3.143,58,3.143,128,1.571,218,0.01,219,2.067,286,1.118,347,0.012,348,0.01,350,1.632,358,1.029,360,1.286,361,1.417,481,3.875,499,2.868,544,2.071,674,2.842,680,3.534,696,2.349,729,3.173,736,3.561,737,3.299,740,2.573,741,2.573,742,2.573,748,3.374,749,3.374,750,3.374,751,3.173,752,3.374,753,2.998,754,3.374,755,3.374,756,2.998,757,3.374,782,2.457,824,3.173,825,3.374,829,2.998,830,3.173,843,3.608,881,4.242,889,5.181,890,4.242,891,5.181,892,4.242,967,4.242,989,4.242,990,5.181,991,4.242,992,5.181,993,4.242,994,5.181,995,4.242,996,5.825,997,5.181,1275,4.714,1378,3.89,1380,4.714,1381,5.757,1382,6.216,1383,4.714,1573,5.431,1574,6.633,1575,7.648,1576,5.431,1577,5.431,1578,5.431,1579,6.633,1580,5.431]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/Credit.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/DeployParams.html":{},"interfaces/DocWithID.html":{},"interfaces/EmailRequest.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/MetaTx.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/OrgProposal.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationDocument.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/PublicOrganization.html":{},"interfaces/PublicUser.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/SnapObject.html":{},"interfaces/StakeholderDocument.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/StoredDocument.html":{},"interfaces/Template.html":{},"interfaces/TemplateDocument.html":{},"interfaces/Title.html":{},"interfaces/UserDocPermissions.html":{},"interfaces/UserProposal.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":144,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/StoredDocument.html":{},"interfaces/Template.html":{}}}],["0.0.11",{"_index":1317,"title":{},"body":{"dependencies.html":{}}}],["0.0.33",{"_index":1373,"title":{},"body":{"dependencies.html":{}}}],["0.1.57",{"_index":1364,"title":{},"body":{"dependencies.html":{}}}],["0.14.3",{"_index":1375,"title":{},"body":{"dependencies.html":{}}}],["0.24.1",{"_index":1319,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":1353,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":1323,"title":{},"body":{"dependencies.html":{}}}],["0.9.1",{"_index":1377,"title":{},"body":{"dependencies.html":{}}}],["0x",{"_index":222,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["0x${erc1077_bytecode",{"_index":227,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["0x${keccak256(payload).slice",{"_index":179,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["0x00000000000000000000000000000000000000",{"_index":268,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["0xff${factoryaddress}${salt}${bytecodehash",{"_index":178,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["1",{"_index":586,"title":{},"body":{"interfaces/DeliveryContent.html":{},"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"overview.html":{}}}],["1.0.2",{"_index":1344,"title":{},"body":{"dependencies.html":{}}}],["1.1.11",{"_index":1297,"title":{},"body":{"dependencies.html":{}}}],["1.4.2",{"_index":1349,"title":{},"body":{"dependencies.html":{}}}],["1.5.0",{"_index":1337,"title":{},"body":{"dependencies.html":{}}}],["1.7.2",{"_index":1358,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":640,"title":{},"body":{"interfaces/DeliveryContent.html":{},"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["100",{"_index":618,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["1000",{"_index":1000,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["1014",{"_index":154,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["12",{"_index":929,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["14",{"_index":639,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["18",{"_index":637,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["2",{"_index":157,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["2.0.8",{"_index":1351,"title":{},"body":{"dependencies.html":{}}}],["2.1.1",{"_index":1365,"title":{},"body":{"dependencies.html":{}}}],["2.4.2",{"_index":1320,"title":{},"body":{"dependencies.html":{}}}],["2.6.4",{"_index":1341,"title":{},"body":{"dependencies.html":{}}}],["2.88.0",{"_index":1366,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":589,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["2019",{"_index":1519,"title":{},"body":{"license.html":{}}}],["230215",{"_index":1506,"title":{},"body":{"index.html":{}}}],["3",{"_index":256,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["3.0.2",{"_index":1348,"title":{},"body":{"dependencies.html":{}}}],["3.33.0",{"_index":1339,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":999,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["3333",{"_index":1515,"title":{},"body":{"index.html":{}}}],["3600",{"_index":1480,"title":{},"body":{"index.html":{}}}],["4",{"_index":584,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["4.0.0",{"_index":1361,"title":{},"body":{"dependencies.html":{}}}],["4.10.4",{"_index":1299,"title":{},"body":{"dependencies.html":{}}}],["4.16.4",{"_index":1345,"title":{},"body":{"dependencies.html":{}}}],["4.17.11",{"_index":1354,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":1333,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":180,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["5",{"_index":635,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["5.0.0",{"_index":1301,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":1285,"title":{},"body":{"dependencies.html":{}}}],["5.8.2",{"_index":1346,"title":{},"body":{"dependencies.html":{}}}],["500mo",{"_index":1049,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["50gb",{"_index":1050,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["581",{"_index":394,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["6.4.0",{"_index":1331,"title":{},"body":{"dependencies.html":{}}}],["6.5.2",{"_index":1368,"title":{},"body":{"dependencies.html":{}}}],["6.9.0",{"_index":1363,"title":{},"body":{"dependencies.html":{}}}],["63",{"_index":149,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"overview.html":{}}}],["643",{"_index":428,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["7.4.0",{"_index":1371,"title":{},"body":{"dependencies.html":{}}}],["702feef93c99.json:/app/creds.json",{"_index":1513,"title":{},"body":{"index.html":{}}}],["8.0.0",{"_index":1280,"title":{},"body":{"dependencies.html":{}}}],["8.1.0",{"_index":1325,"title":{},"body":{"dependencies.html":{}}}],["8.1.3",{"_index":1278,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":1347,"title":{},"body":{"dependencies.html":{}}}],["8.4.1",{"_index":1329,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":588,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["9",{"_index":145,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["_nanoseconds",{"_index":1010,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["_second",{"_index":1114,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["_type",{"_index":432,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/TemplateDocument.html":{},"interfaces/Title.html":{}}}],["abi",{"_index":41,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["above",{"_index":1543,"title":{},"body":{"license.html":{}}}],["accept",{"_index":707,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{}}}],["acceptationperiod",{"_index":708,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{}}}],["accepted",{"_index":312,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/DeployParams.html":{},"interfaces/DocWithID.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MetaTx.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationDocument.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/PublicOrganization.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/SnapObject.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/UserDocPermissions.html":{},"miscellaneous/enumerations.html":{}}}],["account",{"_index":1424,"title":{},"body":{"index.html":{}}}],["action",{"_index":1564,"title":{},"body":{"license.html":{}}}],["adapt",{"_index":1401,"title":{},"body":{"index.html":{}}}],["add",{"_index":429,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["adding",{"_index":1082,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["address",{"_index":70,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/OrganizationDocument.html":{},"interfaces/PublicOrganization.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["address.substr(2",{"_index":173,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["addresse",{"_index":1490,"title":{},"body":{"index.html":{}}}],["admin",{"_index":864,"title":{},"body":{"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/OrgProposal.html":{},"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"interfaces/UserProposal.html":{},"dependencies.html":{},"index.html":{}}}],["admin.auth.userrecord",{"_index":890,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{},"miscellaneous/typealiases.html":{}}}],["admin.firestore().collection('notifications').doc().id",{"_index":876,"title":{},"body":{"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{}}}],["admin.firestore.collectionreference",{"_index":991,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"miscellaneous/typealiases.html":{}}}],["admin.firestore.documentreference",{"_index":997,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"miscellaneous/typealiases.html":{}}}],["admin.firestore.fieldvalue.servertimestamp",{"_index":878,"title":{},"body":{"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["admin.firestore.firestore",{"_index":989,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"miscellaneous/typealiases.html":{}}}],["admin.firestore.querydocumentsnapshot",{"_index":995,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"miscellaneous/typealiases.html":{}}}],["admin.firestore.querysnapshot",{"_index":993,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"miscellaneous/typealiases.html":{}}}],["admin.firestore.timestamp(x._seconds",{"_index":1126,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["admin.firestore.timestamp.now",{"_index":1145,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["admin.storage().bucket(getbackupbucketname",{"_index":1012,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["admin@blockframes.io",{"_index":820,"title":{},"body":{"interfaces/EmailRequest.html":{}}}],["adminaddress",{"_index":337,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["admins",{"_index":774,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{}}}],["ago",{"_index":1151,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["akita",{"_index":1334,"title":{},"body":{"dependencies.html":{}}}],["algoliasearch",{"_index":1338,"title":{},"body":{"dependencies.html":{}}}],["aliases",{"_index":1573,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alignment",{"_index":527,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["along",{"_index":626,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["already",{"_index":223,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"index.html":{}}}],["amount",{"_index":97,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["and/or",{"_index":205,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"license.html":{}}}],["angular/animations",{"_index":1277,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1279,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1281,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":1282,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":1283,"title":{},"body":{"dependencies.html":{}}}],["angular/fire",{"_index":1284,"title":{},"body":{"dependencies.html":{}}}],["angular/flex",{"_index":1286,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":1289,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1290,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":1291,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":1294,"title":{},"body":{"dependencies.html":{}}}],["angular/service",{"_index":1295,"title":{},"body":{"dependencies.html":{}}}],["another",{"_index":831,"title":{},"body":{"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{}}}],["api",{"_index":813,"title":{},"body":{"interfaces/EmailRequest.html":{},"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["app",{"_index":763,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{},"index.html":{}}}],["app.delivery",{"_index":879,"title":{},"body":{"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{}}}],["appaccessstatus",{"_index":775,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{},"miscellaneous/enumerations.html":{}}}],["appears",{"_index":1217,"title":{},"body":{"interfaces/StakeholderDocument.html":{}}}],["application",{"_index":761,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{},"index.html":{}}}],["apps/.../backup.ts",{"_index":1575,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../firebase.ts",{"_index":1576,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../relayer.ts",{"_index":1579,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../types.ts",{"_index":1380,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../users.ts",{"_index":1574,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/backend",{"_index":6,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeployParams.html":{},"interfaces/DocWithID.html":{},"interfaces/EmailRequest.html":{},"interfaces/MetaTx.html":{},"interfaces/OrgProposal.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/SnapObject.html":{},"interfaces/StoredDocument.html":{},"interfaces/Template.html":{},"interfaces/UserDocPermissions.html":{},"interfaces/UserProposal.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["archived",{"_index":836,"title":{},"body":{"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"miscellaneous/enumerations.html":{}}}],["args",{"_index":1164,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["arising",{"_index":1567,"title":{},"body":{"license.html":{}}}],["around",{"_index":647,"title":{},"body":{"interfaces/DeliveryContent.html":{},"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["array",{"_index":1014,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["ascii",{"_index":147,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["asidmap",{"_index":487,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["asidmap(convertstepdocumenttostepdocumentwithdate(delivery.steps",{"_index":670,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["asidmap(items",{"_index":794,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{}}}],["asidmap(orgs",{"_index":671,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["assets/logo/organisation_avatar_250.svg",{"_index":951,"title":{},"body":{"interfaces/OrganizationDocument.html":{},"interfaces/PublicOrganization.html":{}}}],["assets/mail",{"_index":886,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["associated",{"_index":1528,"title":{},"body":{"license.html":{}}}],["assumes",{"_index":554,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["async",{"_index":165,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeployParams.html":{},"interfaces/EmailRequest.html":{},"interfaces/MetaTx.html":{},"interfaces/OrgProposal.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/StoredDocument.html":{},"interfaces/Template.html":{},"interfaces/UserProposal.html":{}}}],["attributes",{"_index":436,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["auth",{"_index":884,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{},"index.html":{}}}],["auth.createuser",{"_index":935,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["auth.getuserbyemail(email",{"_index":932,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["authentication",{"_index":1420,"title":{},"body":{"index.html":{}}}],["authors",{"_index":1557,"title":{},"body":{"license.html":{}}}],["availability",{"_index":689,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"miscellaneous/enumerations.html":{}}}],["available",{"_index":849,"title":{},"body":{"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"miscellaneous/enumerations.html":{}}}],["avatar",{"_index":962,"title":{},"body":{"interfaces/PublicUser.html":{}}}],["await",{"_index":171,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/OrgProposal.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/StoredDocument.html":{},"interfaces/Template.html":{},"interfaces/UserProposal.html":{}}}],["aware",{"_index":1405,"title":{},"body":{"index.html":{}}}],["b",{"_index":263,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["back",{"_index":1115,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["backend",{"_index":696,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/DocWithID.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/UserDocPermissions.html":{},"miscellaneous/typealiases.html":{}}}],["backendprofit",{"_index":446,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["backpressure",{"_index":1200,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["backup",{"_index":1037,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"interfaces/Template.html":{},"index.html":{}}}],["backup'd",{"_index":1024,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["backupedcollections",{"_index":1026,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["backupedcollections(db",{"_index":1056,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["backups",{"_index":1464,"title":{},"body":{"index.html":{}}}],["base64",{"_index":1343,"title":{},"body":{"dependencies.html":{}}}],["baseensdomain",{"_index":61,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["basename",{"_index":168,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["basetx",{"_index":1,"title":{"interfaces/BaseTx.html":{}},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["bash",{"_index":1472,"title":{},"body":{"index.html":{}}}],["batch",{"_index":1238,"title":{},"body":{"interfaces/Template.html":{}}}],["batch.commit",{"_index":1261,"title":{},"body":{"interfaces/Template.html":{}}}],["batch.delete(doc.ref",{"_index":1270,"title":{},"body":{"interfaces/Template.html":{}}}],["batch.set(materialref",{"_index":1242,"title":{},"body":{"interfaces/Template.html":{}}}],["batch.set(templateref",{"_index":1249,"title":{},"body":{"interfaces/Template.html":{}}}],["before",{"_index":78,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/StoredDocument.html":{}}}],["being",{"_index":79,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["beta.128",{"_index":1312,"title":{},"body":{"dependencies.html":{}}}],["beta.129",{"_index":1306,"title":{},"body":{"dependencies.html":{}}}],["beta.130",{"_index":1310,"title":{},"body":{"dependencies.html":{}}}],["beta.131",{"_index":1308,"title":{},"body":{"dependencies.html":{}}}],["beta.132",{"_index":1303,"title":{},"body":{"dependencies.html":{}}}],["beta.133",{"_index":1305,"title":{},"body":{"dependencies.html":{}}}],["beta.138",{"_index":1302,"title":{},"body":{"dependencies.html":{}}}],["beta.142",{"_index":1313,"title":{},"body":{"dependencies.html":{}}}],["beta.26",{"_index":1288,"title":{},"body":{"dependencies.html":{}}}],["blob",{"_index":1018,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["blob.createwritestream",{"_index":1020,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["block",{"_index":1143,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["blockchain",{"_index":1460,"title":{},"body":{"index.html":{}}}],["blockframes",{"_index":533,"title":{},"body":{"interfaces/DeliveryContent.html":{},"index.html":{},"license.html":{}}}],["blockframes/auth/types",{"_index":828,"title":{},"body":{"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{}}}],["blockframes/invitation/types",{"_index":743,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{}}}],["blockframes/material/delivery/types",{"_index":747,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{}}}],["blockframes/material/material/types",{"_index":745,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{}}}],["blockframes/movie/movie/static",{"_index":678,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{}}}],["blockframes/movie/types",{"_index":734,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{}}}],["blockframes/notification/types",{"_index":733,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{}}}],["blockframes/organization/stakeholder/types",{"_index":746,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{}}}],["blockframes/organization/types",{"_index":731,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{}}}],["blockframes/utils/date",{"_index":356,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["blockies",{"_index":1342,"title":{},"body":{"dependencies.html":{}}}],["blocks",{"_index":1067,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["body",{"_index":590,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["bold",{"_index":505,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["bold('material",{"_index":575,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["bold(material.value",{"_index":579,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["bold(stakeholder.name",{"_index":616,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["bolditalics",{"_index":508,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["boldoblique",{"_index":509,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["boolean",{"_index":314,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/Credit.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/DeployParams.html":{},"interfaces/DocWithID.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/MetaTx.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/SnapObject.html":{},"interfaces/StakeholderDocument.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/StoredDocument.html":{},"interfaces/Title.html":{},"interfaces/UserDocPermissions.html":{}}}],["both",{"_index":830,"title":{},"body":{"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"miscellaneous/typealiases.html":{}}}],["break",{"_index":1043,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["breakeven",{"_index":445,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["broadcastercoproducers",{"_index":423,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["browser",{"_index":1292,"title":{},"body":{"dependencies.html":{}}}],["bucket",{"_index":984,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"index.html":{}}}],["bucket.create",{"_index":1016,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["bucket.exists",{"_index":1013,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["bucket.file(`${name}.jsonl",{"_index":1019,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["bucket.getfiles())[0",{"_index":1169,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["build",{"_index":779,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{},"index.html":{}}}],["build:all",{"_index":1444,"title":{},"body":{"index.html":{}}}],["builddeliverypdf",{"_index":620,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["business",{"_index":762,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{}}}],["bytecode",{"_index":44,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["bytecodehash",{"_index":175,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["bytes",{"_index":72,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["c",{"_index":264,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"license.html":{}}}],["callablecontext",{"_index":891,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{},"miscellaneous/typealiases.html":{}}}],["callback",{"_index":1201,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["called",{"_index":1463,"title":{},"body":{"index.html":{}}}],["cancreate",{"_index":768,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{}}}],["candelete",{"_index":771,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{}}}],["canexecute",{"_index":313,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["canread",{"_index":769,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{}}}],["canupdate",{"_index":770,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{}}}],["carousel",{"_index":1322,"title":{},"body":{"dependencies.html":{}}}],["case",{"_index":241,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/StoredDocument.html":{}}}],["catalog",{"_index":940,"title":{},"body":{"interfaces/OrganizationDocument.html":{},"interfaces/PublicOrganization.html":{},"index.html":{}}}],["catch",{"_index":202,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/OrgProposal.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/UserProposal.html":{}}}],["categories",{"_index":598,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["categories.foreach(category",{"_index":600,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["category",{"_index":556,"title":{},"body":{"interfaces/DeliveryContent.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{}}}],["category1",{"_index":593,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["category2",{"_index":594,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["ccf4f1949393.jsonbuild",{"_index":1507,"title":{},"body":{"index.html":{}}}],["center",{"_index":523,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["center(bold('step",{"_index":576,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["certain",{"_index":546,"title":{},"body":{"interfaces/DeliveryContent.html":{},"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["certifications",{"_index":419,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["char",{"_index":140,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["char.charcodeat(0",{"_index":139,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["charge",{"_index":1524,"title":{},"body":{"license.html":{}}}],["chars",{"_index":146,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["check",{"_index":183,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/StoredDocument.html":{},"index.html":{}}}],["claim",{"_index":1560,"title":{},"body":{"license.html":{}}}],["class",{"_index":964,"title":{"classes/Queue.html":{}},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"overview.html":{}}}],["classes",{"_index":966,"title":{},"body":{"classes/Queue.html":{}}}],["clear",{"_index":1096,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["clearing",{"_index":1167,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["closing",{"_index":1091,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["cloud",{"_index":1446,"title":{},"body":{"index.html":{}}}],["cloud/firestore",{"_index":1227,"title":{},"body":{"interfaces/Template.html":{}}}],["cloud/pubsub",{"_index":1318,"title":{},"body":{"dependencies.html":{}}}],["cloud/storage",{"_index":987,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"dependencies.html":{}}}],["code",{"_index":148,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/StoredDocument.html":{}}}],["codeataddress",{"_index":220,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["codebase",{"_index":749,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{},"miscellaneous/typealiases.html":{}}}],["codes",{"_index":607,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["collection",{"_index":1022,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"interfaces/Template.html":{}}}],["collectionreference",{"_index":990,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"miscellaneous/typealiases.html":{}}}],["collections",{"_index":1027,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["collections.foreach(x",{"_index":1057,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["color",{"_index":416,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["columns",{"_index":541,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["complete",{"_index":266,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/StoredDocument.html":{}}}],["completed",{"_index":1204,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["compodoc/compodoc",{"_index":1296,"title":{},"body":{"dependencies.html":{}}}],["compute",{"_index":207,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["conditions",{"_index":1542,"title":{},"body":{"license.html":{}}}],["config",{"_index":167,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["config.baseensdomain",{"_index":110,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["configured",{"_index":808,"title":{},"body":{"interfaces/EmailRequest.html":{}}}],["connection",{"_index":1568,"title":{},"body":{"license.html":{}}}],["console",{"_index":1421,"title":{},"body":{"index.html":{}}}],["console.debug(\"sending",{"_index":821,"title":{},"body":{"interfaces/EmailRequest.html":{}}}],["console.error(error",{"_index":234,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["console.info('clearing",{"_index":1180,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["console.info('done",{"_index":1090,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["console.info('finally",{"_index":1094,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["console.info('nothing",{"_index":1173,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["console.info('restoring",{"_index":1182,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["console.info('updating",{"_index":1178,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["console.info(`done",{"_index":1212,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["console.log(`(a",{"_index":283,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["console.log(`(b",{"_index":297,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["console.log(`(c",{"_index":305,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["console.log(`(d",{"_index":232,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["console.log(`tx",{"_index":331,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["console.log(tx",{"_index":325,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["console.warn('no",{"_index":816,"title":{},"body":{"interfaces/EmailRequest.html":{}}}],["const",{"_index":105,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/DeployParams.html":{},"interfaces/EmailRequest.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/MetaTx.html":{},"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/OrgProposal.html":{},"interfaces/OrganizationDocument.html":{},"interfaces/PublicOrganization.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/StoredDocument.html":{},"interfaces/Template.html":{},"interfaces/UserProposal.html":{}}}],["constants",{"_index":500,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["content",{"_index":524,"title":{},"body":{"interfaces/DeliveryContent.html":{},"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"index.html":{}}}],["context",{"_index":907,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["continue",{"_index":1073,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["continuous",{"_index":1407,"title":{},"body":{"index.html":{}}}],["contract",{"_index":24,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"license.html":{}}}],["contract(config.factorycontract",{"_index":109,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["contract(config.registryaddress",{"_index":113,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["contract(config.resolveraddress",{"_index":114,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["contract(ethaddress",{"_index":310,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["contract.address",{"_index":346,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["contract.deployed",{"_index":345,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["contract.deploytransaction.hash",{"_index":344,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["contractfactory",{"_index":25,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["contractfactory(org_contract_abi",{"_index":341,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["contractname",{"_index":1489,"title":{},"body":{"index.html":{}}}],["contracts/ensregistry.json",{"_index":49,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["contracts/erc1077.json",{"_index":47,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["contracts/factory2.json",{"_index":43,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["contracts/organization.json",{"_index":54,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["contracts/publicresolver.json",{"_index":51,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["convert",{"_index":722,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{}}}],["convertstepdocumenttostepdocumentwithdate",{"_index":491,"title":{},"body":{"interfaces/DeliveryContent.html":{},"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{}}}],["convertstepdocumenttostepdocumentwithdate(steps",{"_index":724,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{}}}],["copies",{"_index":1538,"title":{},"body":{"license.html":{}}}],["copy",{"_index":132,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"index.html":{},"license.html":{}}}],["copyright",{"_index":1518,"title":{},"body":{"license.html":{}}}],["copytemplates",{"_index":1257,"title":{},"body":{"interfaces/Template.html":{}}}],["core",{"_index":760,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{},"dependencies.html":{}}}],["corresponding",{"_index":786,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{}}}],["cors",{"_index":1465,"title":{},"body":{"index.html":{}}}],["cors.json",{"_index":1477,"title":{},"body":{"index.html":{}}}],["cors.jsoneth",{"_index":1486,"title":{},"body":{"index.html":{}}}],["cp",{"_index":1415,"title":{},"body":{"index.html":{}}}],["create",{"_index":156,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/MetaTx.html":{},"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/StakeholderDocument.html":{},"interfaces/StoredDocument.html":{},"index.html":{}}}],["create2_factory_abi",{"_index":42,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["createa",{"_index":874,"title":{},"body":{"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{}}}],["created",{"_index":941,"title":{},"body":{"interfaces/OrganizationDocument.html":{},"interfaces/PublicOrganization.html":{},"interfaces/Template.html":{},"interfaces/TemplateDocument.html":{},"miscellaneous/enumerations.html":{}}}],["createdocument",{"_index":868,"title":{},"body":{"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"miscellaneous/enumerations.html":{}}}],["createnotification(notification",{"_index":875,"title":{},"body":{"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{}}}],["createorganization(params",{"_index":956,"title":{},"body":{"interfaces/OrganizationDocument.html":{},"interfaces/PublicOrganization.html":{}}}],["creates",{"_index":955,"title":{},"body":{"interfaces/OrganizationDocument.html":{},"interfaces/PublicOrganization.html":{}}}],["createstakeholder(params",{"_index":1220,"title":{},"body":{"interfaces/StakeholderDocument.html":{}}}],["creation",{"_index":1397,"title":{},"body":{"index.html":{}}}],["credit",{"_index":349,"title":{"interfaces/Credit.html":{}},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["creditrole",{"_index":352,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["credits",{"_index":388,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["curl",{"_index":1470,"title":{},"body":{"index.html":{}}}],["currencies",{"_index":853,"title":{},"body":{"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{}}}],["currency",{"_index":845,"title":{},"body":{"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{}}}],["currencycode",{"_index":680,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"miscellaneous/typealiases.html":{}}}],["current",{"_index":1083,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["currentpath",{"_index":1068,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["custom",{"_index":777,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{}}}],["cypress",{"_index":1439,"title":{},"body":{"index.html":{}}}],["d",{"_index":422,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/Title.html":{}}}],["damages",{"_index":1561,"title":{},"body":{"license.html":{}}}],["data",{"_index":14,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/OrgProposal.html":{},"interfaces/OrganizationDocument.html":{},"interfaces/PublicOrganization.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/StoredDocument.html":{},"interfaces/UserProposal.html":{}}}],["data/internals",{"_index":496,"title":{},"body":{"interfaces/DeliveryContent.html":{},"interfaces/Template.html":{}}}],["data/types",{"_index":493,"title":{},"body":{"interfaces/DeliveryContent.html":{},"interfaces/Template.html":{}}}],["database",{"_index":1181,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["date",{"_index":464,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/Title.html":{}}}],["date().toisostring",{"_index":1035,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["date.now",{"_index":960,"title":{},"body":{"interfaces/OrganizationDocument.html":{},"interfaces/PublicOrganization.html":{}}}],["datepicker",{"_index":1370,"title":{},"body":{"dependencies.html":{}}}],["daterangeraw",{"_index":355,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["dates",{"_index":463,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/Title.html":{}}}],["datorama/akita",{"_index":1298,"title":{},"body":{"dependencies.html":{}}}],["db",{"_index":55,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/OrgProposal.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/StoredDocument.html":{},"interfaces/Template.html":{},"interfaces/UserProposal.html":{}}}],["db.batch",{"_index":1258,"title":{},"body":{"interfaces/Template.html":{}}}],["db.collection('_restore').doc('_doc').get",{"_index":1138,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["db.collection('_restore').doc('_doc').set",{"_index":1134,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["db.collection('users').doc(user.uid",{"_index":897,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["db.collection(`orgs/${org.id}/materials`).get",{"_index":1271,"title":{},"body":{"interfaces/Template.html":{}}}],["db.collection(`orgs/${org.id}/templates`).get",{"_index":1268,"title":{},"body":{"interfaces/Template.html":{}}}],["db.collection(currentpath).get",{"_index":1071,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["db.collection(currentpath).listdocuments",{"_index":1102,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["db.doc(`/orgs/${orgid}`).get().then(org",{"_index":212,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["db.doc(`templates/${template.id",{"_index":1248,"title":{},"body":{"interfaces/Template.html":{}}}],["db.doc(`templates/${template.id}/materials/${material.id",{"_index":1241,"title":{},"body":{"interfaces/Template.html":{}}}],["db.runtransaction(async",{"_index":900,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["de",{"_index":1452,"title":{},"body":{"index.html":{}}}],["deadline",{"_index":693,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{}}}],["deal",{"_index":397,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{},"license.html":{}}}],["dealings",{"_index":1569,"title":{},"body":{"license.html":{}}}],["debug",{"_index":530,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["declined",{"_index":837,"title":{},"body":{"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"miscellaneous/enumerations.html":{}}}],["decodeuricomponent(data.prefix",{"_index":909,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["default",{"_index":676,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/OrganizationDocument.html":{},"interfaces/PublicOrganization.html":{},"classes/Queue.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["defaultstyle",{"_index":633,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["define",{"_index":748,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{},"miscellaneous/typealiases.html":{}}}],["defined",{"_index":152,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["definition",{"_index":571,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["delete",{"_index":1104,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"interfaces/Template.html":{}}}],["deleted",{"_index":1103,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["deletedocument",{"_index":869,"title":{},"body":{"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"miscellaneous/enumerations.html":{}}}],["deletetemplates",{"_index":1262,"title":{},"body":{"interfaces/Template.html":{}}}],["delivered",{"_index":850,"title":{},"body":{"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"miscellaneous/enumerations.html":{}}}],["deliveries",{"_index":701,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{}}}],["deliveries/${deliveryid}/stakeholders",{"_index":665,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["delivery",{"_index":475,"title":{},"body":{"interfaces/DeliveryContent.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"miscellaneous/enumerations.html":{}}}],["deliverycontent",{"_index":469,"title":{"interfaces/DeliveryContent.html":{}},"body":{"interfaces/DeliveryContent.html":{}}}],["deliverydocument",{"_index":488,"title":{"interfaces/DeliveryDocument.html":{}},"body":{"interfaces/DeliveryContent.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/DocWithID.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/UserDocPermissions.html":{}}}],["deliverydocumentwithdates",{"_index":719,"title":{"interfaces/DeliveryDocumentWithDates.html":{}},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{}}}],["deliveryid",{"_index":100,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["deliveryids",{"_index":438,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["deliveryraw",{"_index":675,"title":{"interfaces/DeliveryRaw.html":{}},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{}}}],["deliverystatus",{"_index":683,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"miscellaneous/enumerations.html":{}}}],["dependencies",{"_index":262,"title":{"dependencies.html":{}},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"dependencies.html":{}}}],["depending",{"_index":838,"title":{},"body":{"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"miscellaneous/enumerations.html":{}}}],["deploy",{"_index":190,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["deploydata",{"_index":1445,"title":{},"body":{"index.html":{}}}],["deployorganization",{"_index":343,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["deployparams",{"_index":116,"title":{"interfaces/DeployParams.html":{}},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["deploytx",{"_index":225,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["deploytx.hash",{"_index":233,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["deploytx.wait",{"_index":231,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["descent",{"_index":1121,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["description",{"_index":8,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/MetaTx.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieRaw.html":{},"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/OrganizationDocument.html":{},"interfaces/PublicMovie.html":{},"interfaces/PublicOrganization.html":{},"interfaces/PublicUser.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/SnapObject.html":{},"interfaces/StakeholderDocument.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/TemplateDocument.html":{}}}],["description(material.description",{"_index":580,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["description(org.officeaddress",{"_index":551,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["details",{"_index":754,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{},"miscellaneous/typealiases.html":{}}}],["dev",{"_index":1414,"title":{},"body":{"index.html":{}}}],["development",{"_index":809,"title":{},"body":{"interfaces/EmailRequest.html":{},"index.html":{}}}],["different",{"_index":1402,"title":{},"body":{"index.html":{}}}],["directornote",{"_index":440,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["directors",{"_index":404,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["directory",{"_index":1393,"title":{},"body":{"index.html":{}}}],["disabled",{"_index":937,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["display",{"_index":285,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["distribute",{"_index":1535,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":396,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["doc",{"_index":899,"title":{},"body":{"interfaces/OrgProposal.html":{},"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"interfaces/UserProposal.html":{}}}],["doc.data",{"_index":1078,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["doc.data().email",{"_index":921,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["doc.delete",{"_index":1107,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["doc.id",{"_index":920,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["doc.listcollections",{"_index":1106,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["doc.ref.listcollections",{"_index":1086,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["doc.ref.path",{"_index":1077,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["docdefinition",{"_index":629,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["docid",{"_index":783,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{}}}],["docker",{"_index":1508,"title":{},"body":{"index.html":{}}}],["docpath",{"_index":1002,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["docrestoremeta",{"_index":1137,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["docrestoremeta.data",{"_index":1140,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["docrestoremeta.data()!.restoredat",{"_index":1141,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["docrestoremeta.exists",{"_index":1139,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["docs",{"_index":1101,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["docs.map(async",{"_index":1105,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["document",{"_index":460,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/OrganizationDocument.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"classes/Queue.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/StoredDocument.html":{},"interfaces/TemplateDocument.html":{},"interfaces/Title.html":{},"index.html":{}}}],["documentation",{"_index":1529,"title":{},"body":{"license.html":{}}}],["documentreference",{"_index":996,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"miscellaneous/typealiases.html":{}}}],["documents",{"_index":1449,"title":{},"body":{"index.html":{}}}],["docwithid",{"_index":728,"title":{"interfaces/DocWithID.html":{}},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{}}}],["doing",{"_index":1039,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["download",{"_index":1503,"title":{},"body":{"index.html":{}}}],["draw.io",{"_index":431,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["dubbings",{"_index":363,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["duedate",{"_index":706,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{}}}],["dynamic",{"_index":1293,"title":{},"body":{"dependencies.html":{}}}],["e2e:dev",{"_index":1438,"title":{},"body":{"index.html":{}}}],["each",{"_index":163,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/DocWithID.html":{},"interfaces/MetaTx.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/SnapObject.html":{},"interfaces/StoredDocument.html":{},"interfaces/UserDocPermissions.html":{},"index.html":{}}}],["early",{"_index":1161,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["edit",{"_index":1418,"title":{},"body":{"index.html":{}}}],["effect",{"_index":562,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["eip",{"_index":153,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["email",{"_index":807,"title":{},"body":{"interfaces/EmailRequest.html":{},"interfaces/OrgProposal.html":{},"interfaces/PublicUser.html":{},"interfaces/UserProposal.html":{},"index.html":{}}}],["emailrequest",{"_index":798,"title":{"interfaces/EmailRequest.html":{}},"body":{"interfaces/EmailRequest.html":{}}}],["emailtoensdomain(email",{"_index":131,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["emailtoensdomain(orgname.replace",{"_index":215,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["emailverified",{"_index":936,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["empty",{"_index":1006,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"index.html":{}}}],["emptyissues",{"_index":1395,"title":{},"body":{"index.html":{}}}],["enable",{"_index":1422,"title":{},"body":{"index.html":{}}}],["encapsulate",{"_index":74,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["encode",{"_index":1110,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["ending",{"_index":247,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["enforce",{"_index":545,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["ens",{"_index":184,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["ens_registry_abi",{"_index":48,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["ens_resolver_abi",{"_index":50,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["ensdomain",{"_index":159,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["ensdomain.split('.')[0",{"_index":169,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["enum",{"_index":682,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/DocWithID.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationDocument.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/PublicOrganization.html":{},"interfaces/SnapObject.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/UserDocPermissions.html":{}}}],["enumerations",{"_index":1379,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":1412,"title":{},"body":{"index.html":{}}}],["env/env.template.ts",{"_index":1416,"title":{},"body":{"index.html":{}}}],["env/env.ts",{"_index":1417,"title":{},"body":{"index.html":{}}}],["environment",{"_index":1404,"title":{},"body":{"index.html":{}}}],["environments",{"_index":1399,"title":{},"body":{"index.html":{}}}],["environments/environment",{"_index":804,"title":{},"body":{"interfaces/EmailRequest.html":{}}}],["erased",{"_index":835,"title":{},"body":{"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"miscellaneous/enumerations.html":{}}}],["erc1077",{"_index":300,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["erc1077.functions.canexecute",{"_index":315,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["erc1077.functions.executesigned",{"_index":330,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["erc1077_abi",{"_index":46,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["erc1077_bytecode",{"_index":45,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["erc1077address",{"_index":118,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["error",{"_index":203,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["error('\"adminaddress",{"_index":338,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["error('\"ethaddress",{"_index":240,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["error('\"key",{"_index":204,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["error('\"name",{"_index":238,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["error('\"username",{"_index":195,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["error('popping",{"_index":1005,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["error(`${fullname",{"_index":273,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["error(error",{"_index":235,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["etc",{"_index":1437,"title":{},"body":{"index.html":{}}}],["eth",{"_index":186,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"index.html":{}}}],["ethaddress",{"_index":94,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["ethereum",{"_index":10,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"dependencies.html":{}}}],["ethers",{"_index":164,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["ethersproject/abi",{"_index":1300,"title":{},"body":{"dependencies.html":{}}}],["ethersproject/abstract",{"_index":29,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"dependencies.html":{}}}],["ethersproject/address",{"_index":38,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"dependencies.html":{}}}],["ethersproject/bignumber",{"_index":1307,"title":{},"body":{"dependencies.html":{}}}],["ethersproject/bytes",{"_index":1309,"title":{},"body":{"dependencies.html":{}}}],["ethersproject/contracts",{"_index":26,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"dependencies.html":{}}}],["ethersproject/hash",{"_index":32,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"dependencies.html":{}}}],["ethersproject/hdnode",{"_index":1311,"title":{},"body":{"dependencies.html":{}}}],["ethersproject/keccak256",{"_index":34,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"dependencies.html":{}}}],["ethersproject/providers",{"_index":21,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"dependencies.html":{}}}],["ethersproject/signing",{"_index":1314,"title":{},"body":{"dependencies.html":{}}}],["ethersproject/strings",{"_index":36,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"dependencies.html":{}}}],["ethersproject/wallet",{"_index":23,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"dependencies.html":{}}}],["europeanqualification",{"_index":417,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["event",{"_index":1458,"title":{},"body":{"index.html":{},"license.html":{}}}],["events",{"_index":1487,"title":{},"body":{"index.html":{}}}],["example",{"_index":1112,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"index.html":{}}}],["exclusive",{"_index":398,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["executesigned",{"_index":332,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["execution",{"_index":1403,"title":{},"body":{"index.html":{}}}],["exists",{"_index":934,"title":{},"body":{"interfaces/OrgProposal.html":{},"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"interfaces/UserProposal.html":{}}}],["exists[0",{"_index":1015,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["exit",{"_index":1165,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["exits",{"_index":1162,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["expected",{"_index":472,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["expects",{"_index":655,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["export",{"_index":59,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/Credit.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/DeployParams.html":{},"interfaces/DocWithID.html":{},"interfaces/EmailRequest.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/MetaTx.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/OrgProposal.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationDocument.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/PublicOrganization.html":{},"interfaces/PublicUser.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/SnapObject.html":{},"interfaces/StakeholderDocument.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/StoredDocument.html":{},"interfaces/Template.html":{},"interfaces/TemplateDocument.html":{},"interfaces/Title.html":{},"interfaces/UserDocPermissions.html":{},"interfaces/UserProposal.html":{},"index.html":{}}}],["express",{"_index":652,"title":{},"body":{"interfaces/DeliveryContent.html":{},"dependencies.html":{},"license.html":{}}}],["extends",{"_index":82,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/Credit.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/DeployParams.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/MetaTx.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/Title.html":{}}}],["f",{"_index":1157,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["f(...args",{"_index":1166,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["factor",{"_index":661,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["factory",{"_index":954,"title":{},"body":{"interfaces/OrganizationDocument.html":{},"interfaces/PublicOrganization.html":{},"interfaces/StakeholderDocument.html":{}}}],["factoryaddress",{"_index":170,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["factorycontract",{"_index":69,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["false",{"_index":877,"title":{},"body":{"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/OrgProposal.html":{},"classes/Queue.html":{},"interfaces/StakeholderDocument.html":{},"interfaces/StoredDocument.html":{},"interfaces/UserProposal.html":{}}}],["fast",{"_index":1198,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["feed",{"_index":658,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["festivalprizes",{"_index":458,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["fields",{"_index":430,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["fieldvalue",{"_index":1223,"title":{},"body":{"interfaces/Template.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/Credit.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/DeployParams.html":{},"interfaces/DocWithID.html":{},"interfaces/EmailRequest.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/MetaTx.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/OrgProposal.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationDocument.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/PublicOrganization.html":{},"interfaces/PublicUser.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/SnapObject.html":{},"interfaces/StakeholderDocument.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/StoredDocument.html":{},"interfaces/Template.html":{},"interfaces/TemplateDocument.html":{},"interfaces/Title.html":{},"interfaces/UserDocPermissions.html":{},"interfaces/UserProposal.html":{},"index.html":{}}}],["files",{"_index":1168,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"index.html":{},"license.html":{}}}],["filter(x",{"_index":1029,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["finalsignature",{"_index":867,"title":{},"body":{"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"miscellaneous/enumerations.html":{}}}],["find",{"_index":1456,"title":{},"body":{"index.html":{}}}],["findorgbyname",{"_index":922,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["finduserbymail",{"_index":906,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["fire",{"_index":1336,"title":{},"body":{"dependencies.html":{}}}],["firebase",{"_index":286,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/DeployParams.html":{},"interfaces/DocWithID.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MetaTx.html":{},"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/OrgProposal.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/SnapObject.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/StoredDocument.html":{},"interfaces/TemplateDocument.html":{},"interfaces/UserDocPermissions.html":{},"interfaces/UserProposal.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["firebase.jsonsetup",{"_index":1427,"title":{},"body":{"index.html":{}}}],["firebase/app",{"_index":359,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["firebasefirestore.fieldvalue",{"_index":863,"title":{},"body":{"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{}}}],["firestore",{"_index":358,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"classes/Queue.html":{},"interfaces/StakeholderDocument.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/StoredDocument.html":{},"interfaces/TemplateDocument.html":{},"interfaces/Title.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["firestore.listcollections",{"_index":1028,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["firestore.timestamp",{"_index":361,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/TemplateDocument.html":{},"interfaces/Title.html":{},"miscellaneous/typealiases.html":{}}}],["first",{"_index":181,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["firstname",{"_index":353,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["fit",{"_index":617,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["fitness",{"_index":1554,"title":{},"body":{"license.html":{}}}],["fix",{"_index":1156,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["flag",{"_index":1179,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["folder",{"_index":1411,"title":{},"body":{"index.html":{}}}],["following",{"_index":1231,"title":{},"body":{"interfaces/Template.html":{},"license.html":{}}}],["font",{"_index":634,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["fonts",{"_index":502,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["fontsize",{"_index":636,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["foreach",{"_index":573,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["form",{"_index":242,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["free",{"_index":1523,"title":{},"body":{"license.html":{}}}],["freeze",{"_index":1031,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["fromorganizationtouser",{"_index":841,"title":{},"body":{"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"miscellaneous/enumerations.html":{}}}],["fromusertoorganization",{"_index":840,"title":{},"body":{"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"miscellaneous/enumerations.html":{}}}],["frontend",{"_index":695,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{}}}],["fullname",{"_index":251,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["fullpage",{"_index":1316,"title":{},"body":{"dependencies.html":{}}}],["fullpage/angular",{"_index":1315,"title":{},"body":{"dependencies.html":{}}}],["function",{"_index":102,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/DeployParams.html":{},"interfaces/DocWithID.html":{},"interfaces/EmailRequest.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MetaTx.html":{},"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationDocument.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/PublicOrganization.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/SnapObject.html":{},"interfaces/StakeholderDocument.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/StoredDocument.html":{},"interfaces/Template.html":{},"interfaces/UserDocPermissions.html":{}}}],["functions",{"_index":128,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeployParams.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/MetaTx.html":{},"interfaces/OrgProposal.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/StoredDocument.html":{},"interfaces/Template.html":{},"interfaces/UserProposal.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["functions.https.callablecontext",{"_index":892,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{},"miscellaneous/typealiases.html":{}}}],["functions/src/backup.ts",{"_index":967,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"miscellaneous/typealiases.html":{}}}],["functions/src/backup.ts:22",{"_index":971,"title":{},"body":{"classes/Queue.html":{}}}],["functions/src/backup.ts:24",{"_index":975,"title":{},"body":{"classes/Queue.html":{}}}],["functions/src/backup.ts:28",{"_index":973,"title":{},"body":{"classes/Queue.html":{}}}],["functions/src/backup.ts:38",{"_index":972,"title":{},"body":{"classes/Queue.html":{}}}],["functions/src/data/types.ts",{"_index":729,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["functions/src/internals/email.ts",{"_index":799,"title":{},"body":{"interfaces/EmailRequest.html":{}}}],["functions/src/internals/firebase.ts",{"_index":1580,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["functions/src/internals/pdf.ts",{"_index":470,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["functions/src/migrations.ts",{"_index":1221,"title":{},"body":{"interfaces/Template.html":{}}}],["functions/src/relayer.ts",{"_index":7,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"miscellaneous/typealiases.html":{}}}],["functions/src/users.ts",{"_index":881,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{},"miscellaneous/typealiases.html":{}}}],["fundedbudget",{"_index":444,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["furnished",{"_index":1541,"title":{},"body":{"license.html":{}}}],["g.test(char",{"_index":138,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["gaslimit",{"_index":86,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["gasprice",{"_index":84,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["gastoken",{"_index":85,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["gcloud",{"_index":1468,"title":{},"body":{"index.html":{}}}],["generalized",{"_index":1100,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["generate",{"_index":534,"title":{},"body":{"interfaces/DeliveryContent.html":{},"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{},"dependencies.html":{},"index.html":{}}}],["generatepassword",{"_index":928,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["generation",{"_index":474,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["generic",{"_index":425,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"interfaces/Title.html":{}}}],["genres",{"_index":407,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["getaddress",{"_index":37,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["getaddress(adminaddress",{"_index":339,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["getaddress(erc1077address",{"_index":201,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["getaddress(ethaddress",{"_index":239,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["getaddress(key",{"_index":200,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["getbackupbucket",{"_index":1011,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["getbackupbucketname",{"_index":988,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["getbackupoutput",{"_index":1017,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["getbackupoutput(bucket",{"_index":1036,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["getcollection",{"_index":494,"title":{},"body":{"interfaces/DeliveryContent.html":{},"interfaces/Template.html":{}}}],["getcollection(`deliveries/${deliveryid}/materials",{"_index":669,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["getcollection(`orgs",{"_index":1259,"title":{},"body":{"interfaces/Template.html":{}}}],["getcollection(`orgs/${org.id}/materials",{"_index":1252,"title":{},"body":{"interfaces/Template.html":{}}}],["getcollection(`orgs/${org.id}/templates",{"_index":1251,"title":{},"body":{"interfaces/Template.html":{}}}],["getcount",{"_index":1224,"title":{},"body":{"interfaces/Template.html":{}}}],["getcount(`orgs/${org.id}/materials",{"_index":1267,"title":{},"body":{"interfaces/Template.html":{}}}],["getcount(`orgs/${org.id}/templates",{"_index":1266,"title":{},"body":{"interfaces/Template.html":{}}}],["getdocument",{"_index":495,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["getdocument(`deliveries/${deliveryid",{"_index":664,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["getdocument(`orgs/${id",{"_index":668,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["getorcreateuserbymail",{"_index":931,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["getting",{"_index":1386,"title":{"index.html":{},"license.html":{}},"body":{}}],["gfile",{"_index":985,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["given",{"_index":699,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{}}}],["go",{"_index":1074,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["goalbudget",{"_index":442,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["going",{"_index":1196,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["google",{"_index":986,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"interfaces/Template.html":{},"dependencies.html":{}}}],["google_application_credentials=./blockframes",{"_index":1505,"title":{},"body":{"index.html":{}}}],["google_application_credentials=some/path/service",{"_index":1426,"title":{},"body":{"index.html":{}}}],["granted",{"_index":1522,"title":{},"body":{"license.html":{}}}],["groupby",{"_index":483,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["grouped",{"_index":591,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["grows",{"_index":1045,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["gs://blockframes",{"_index":1483,"title":{},"body":{"index.html":{}}}],["gsutil",{"_index":1481,"title":{},"body":{"index.html":{}}}],["guarantee",{"_index":692,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{}}}],["gyp",{"_index":1360,"title":{},"body":{"dependencies.html":{}}}],["hammerjs",{"_index":1350,"title":{},"body":{"dependencies.html":{}}}],["handle",{"_index":644,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["handles",{"_index":648,"title":{},"body":{"interfaces/DeliveryContent.html":{},"interfaces/EmailRequest.html":{}}}],["happens",{"_index":259,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["hash",{"_index":182,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"index.html":{}}}],["hash/{documenthash",{"_index":1454,"title":{},"body":{"index.html":{}}}],["header",{"_index":511,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["header('materials",{"_index":603,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["header('signatures",{"_index":619,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["header('stakeholders",{"_index":552,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["headerrows",{"_index":585,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["heavily",{"_index":1097,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["helpers",{"_index":518,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["helvetica",{"_index":503,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["here",{"_index":260,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["hereby",{"_index":1521,"title":{},"body":{"license.html":{}}}],["hmr",{"_index":1436,"title":{},"body":{"index.html":{}}}],["holders",{"_index":1558,"title":{},"body":{"license.html":{}}}],["hosting",{"_index":1461,"title":{},"body":{"index.html":{}}}],["https://cloud.google.com/storage/docs/gsutil_installcreate",{"_index":1475,"title":{},"body":{"index.html":{}}}],["https://firebase.google.com/docs/storage/web/download",{"_index":1482,"title":{},"body":{"index.html":{}}}],["https://github.com/nrwl/nx/issues/1104",{"_index":1398,"title":{},"body":{"index.html":{}}}],["https://sdk.cloud.google.com",{"_index":1471,"title":{},"body":{"index.html":{}}}],["id",{"_index":434,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/DocWithID.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/OrgProposal.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationDocument.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/PublicOrganization.html":{},"interfaces/SnapObject.html":{},"interfaces/StakeholderDocument.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/Template.html":{},"interfaces/TemplateDocument.html":{},"interfaces/Title.html":{},"interfaces/UserDocPermissions.html":{},"interfaces/UserProposal.html":{}}}],["id_x",{"_index":790,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{}}}],["id_y",{"_index":792,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{}}}],["idmap",{"_index":481,"title":{},"body":{"interfaces/DeliveryContent.html":{},"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{},"miscellaneous/typealiases.html":{}}}],["ids",{"_index":605,"title":{},"body":{"interfaces/DeliveryContent.html":{},"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{}}}],["ignore",{"_index":529,"title":{},"body":{"interfaces/DeliveryContent.html":{},"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["images",{"_index":379,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["implement",{"_index":1099,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["implied",{"_index":1550,"title":{},"body":{"license.html":{}}}],["import",{"_index":19,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/Credit.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/DeployParams.html":{},"interfaces/DocWithID.html":{},"interfaces/EmailRequest.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/MetaTx.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/OrgProposal.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/SnapObject.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/StoredDocument.html":{},"interfaces/Template.html":{},"interfaces/TemplateDocument.html":{},"interfaces/Title.html":{},"interfaces/UserDocPermissions.html":{},"interfaces/UserProposal.html":{}}}],["included",{"_index":1545,"title":{},"body":{"license.html":{}}}],["including",{"_index":1531,"title":{},"body":{"license.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"interfaces/BaseTx.html":{},"interfaces/Credit.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/DeployParams.html":{},"interfaces/DocWithID.html":{},"interfaces/EmailRequest.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/MetaTx.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/OrgProposal.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationDocument.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/PublicOrganization.html":{},"interfaces/PublicUser.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/SnapObject.html":{},"interfaces/StakeholderDocument.html":{},"interfaces/StepRaw.html":{},"interfaces/StoredDocument.html":{},"interfaces/Template.html":{},"interfaces/TemplateDocument.html":{},"interfaces/Title.html":{},"interfaces/UserDocPermissions.html":{},"interfaces/UserProposal.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["index.ts",{"_index":752,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/Credit.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/DeployParams.html":{},"interfaces/DocWithID.html":{},"interfaces/EmailRequest.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/MetaTx.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/OrgProposal.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationDocument.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/PublicOrganization.html":{},"interfaces/PublicUser.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/SnapObject.html":{},"interfaces/StakeholderDocument.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/StoredDocument.html":{},"interfaces/Template.html":{},"interfaces/TemplateDocument.html":{},"interfaces/Title.html":{},"interfaces/UserDocPermissions.html":{},"interfaces/UserProposal.html":{}}}],["informations",{"_index":859,"title":{},"body":{"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/PublicUser.html":{}}}],["infuraprovider",{"_index":20,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["infuraprovider(config.network",{"_index":107,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["init",{"_index":1473,"title":{},"body":{"index.html":{}}}],["initrelayer(config",{"_index":103,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["input",{"_index":1187,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["inside",{"_index":572,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["inspired",{"_index":1098,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["install",{"_index":1467,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1023,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["instead",{"_index":1038,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["integration",{"_index":1408,"title":{},"body":{"index.html":{}}}],["interact",{"_index":694,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{}}}],["interdependent",{"_index":257,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["interface",{"_index":0,"title":{"interfaces/BaseTx.html":{},"interfaces/Credit.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/DeployParams.html":{},"interfaces/DocWithID.html":{},"interfaces/EmailRequest.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/MetaTx.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/OrgProposal.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationDocument.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/PublicOrganization.html":{},"interfaces/PublicUser.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/SnapObject.html":{},"interfaces/StakeholderDocument.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/StoredDocument.html":{},"interfaces/Template.html":{},"interfaces/TemplateDocument.html":{},"interfaces/Title.html":{},"interfaces/UserDocPermissions.html":{},"interfaces/UserProposal.html":{}},"body":{"interfaces/BaseTx.html":{},"interfaces/Credit.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/DeployParams.html":{},"interfaces/DocWithID.html":{},"interfaces/EmailRequest.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/MetaTx.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/OrgProposal.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationDocument.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/PublicOrganization.html":{},"interfaces/PublicUser.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/SnapObject.html":{},"interfaces/StakeholderDocument.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/StoredDocument.html":{},"interfaces/Template.html":{},"interfaces/TemplateDocument.html":{},"interfaces/Title.html":{},"interfaces/UserDocPermissions.html":{},"interfaces/UserProposal.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/Credit.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/DeployParams.html":{},"interfaces/DocWithID.html":{},"interfaces/EmailRequest.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/MetaTx.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/OrgProposal.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationDocument.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/PublicOrganization.html":{},"interfaces/PublicUser.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/SnapObject.html":{},"interfaces/StakeholderDocument.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/StoredDocument.html":{},"interfaces/Template.html":{},"interfaces/TemplateDocument.html":{},"interfaces/Title.html":{},"interfaces/UserDocPermissions.html":{},"interfaces/UserProposal.html":{},"overview.html":{}}}],["internal",{"_index":471,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["internalref",{"_index":402,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["internals/email",{"_index":888,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["internals/firebase",{"_index":56,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/OrgProposal.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/StoredDocument.html":{},"interfaces/Template.html":{},"interfaces/UserProposal.html":{}}}],["international",{"_index":383,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["internationalpremiere",{"_index":420,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["invitation",{"_index":824,"title":{"interfaces/Invitation.html":{}},"body":{"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["invitationdocument",{"_index":736,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{},"miscellaneous/typealiases.html":{}}}],["invitationfromorganizationtouser",{"_index":740,"title":{"interfaces/InvitationFromOrganizationToUser.html":{}},"body":{"interfaces/DocWithID.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{},"miscellaneous/typealiases.html":{}}}],["invitationfromusertoorganization",{"_index":741,"title":{"interfaces/InvitationFromUserToOrganization.html":{}},"body":{"interfaces/DocWithID.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{},"miscellaneous/typealiases.html":{}}}],["invitationorundefined",{"_index":737,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{},"miscellaneous/typealiases.html":{}}}],["invitationstatus",{"_index":738,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{},"miscellaneous/enumerations.html":{}}}],["invitationtoworkondocument",{"_index":742,"title":{"interfaces/InvitationToWorkOnDocument.html":{}},"body":{"interfaces/DocWithID.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{},"miscellaneous/typealiases.html":{}}}],["invitationtype",{"_index":739,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{},"miscellaneous/enumerations.html":{}}}],["invitationtype.fromorganizationtouser",{"_index":833,"title":{},"body":{"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{}}}],["invitationtype.fromusertoorganization",{"_index":834,"title":{},"body":{"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{}}}],["invitationtype.toworkondocument",{"_index":832,"title":{},"body":{"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{}}}],["inviteorganization",{"_index":870,"title":{},"body":{"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"miscellaneous/enumerations.html":{}}}],["ip",{"_index":1448,"title":{},"body":{"index.html":{}}}],["ip/{ipid}/version/{versionid",{"_index":1450,"title":{},"body":{"index.html":{}}}],["ipid",{"_index":439,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{},"index.html":{}}}],["isaccepted",{"_index":1218,"title":{},"body":{"interfaces/StakeholderDocument.html":{}}}],["isan",{"_index":403,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["isarray",{"_index":978,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["isarray(x",{"_index":1119,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["isempty",{"_index":485,"title":{},"body":{"interfaces/DeliveryContent.html":{},"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["isempty(txid",{"_index":611,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["isensnameregistered(ensname",{"_index":187,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["isequal",{"_index":979,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["isequal(sortby(keys",{"_index":1125,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["isordered",{"_index":846,"title":{},"body":{"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{}}}],["ispaid",{"_index":702,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{}}}],["isplainobject",{"_index":980,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["isplainobject(x",{"_index":1123,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["isread",{"_index":862,"title":{},"body":{"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{}}}],["isrestoring",{"_index":1136,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["issigned",{"_index":717,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{}}}],["issue#714",{"_index":123,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["issue#818",{"_index":856,"title":{},"body":{"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{}}}],["italics",{"_index":506,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["item",{"_index":788,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"classes/Queue.html":{},"interfaces/SnapObject.html":{},"interfaces/StoredDocument.html":{},"interfaces/UserDocPermissions.html":{}}}],["item.id",{"_index":797,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{}}}],["item_x",{"_index":791,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{}}}],["item_y",{"_index":793,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{}}}],["items",{"_index":785,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{}}}],["items.reduce((result",{"_index":796,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{}}}],["join",{"_index":150,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["js",{"_index":1340,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":1108,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"index.html":{}}}],["json.parse(line",{"_index":1209,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["k",{"_index":525,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["keccak256",{"_index":33,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["keccak256(`0x${erc1077_bytecode}`).substr(2",{"_index":176,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["keccak256(toutf8bytes(basename)).substr(2",{"_index":174,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["keccak256(toutf8bytes(labelname",{"_index":253,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["keccak256(toutf8bytes(username",{"_index":210,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["keep",{"_index":569,"title":{},"body":{"interfaces/DeliveryContent.html":{},"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["key",{"_index":117,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/EmailRequest.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"dependencies.html":{},"index.html":{}}}],["key.tolocalelowercase",{"_index":228,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["keyassets",{"_index":371,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["keys",{"_index":622,"title":{},"body":{"interfaces/DeliveryContent.html":{},"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"index.html":{}}}],["keys.foreach(k",{"_index":1129,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["keys_timestamp",{"_index":1008,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["keywords",{"_index":372,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["kind",{"_index":1549,"title":{},"body":{"license.html":{}}}],["know",{"_index":1144,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["label",{"_index":376,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/Title.html":{}}}],["labelname",{"_index":249,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["labelname}.${config.baseensdomain",{"_index":252,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["languages",{"_index":409,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["larger",{"_index":1046,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["lastfile",{"_index":1176,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["lastfile.createreadstream",{"_index":1184,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["lastfile.name",{"_index":1183,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["lastname",{"_index":354,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["laurent",{"_index":124,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"index.html":{}}}],["layer",{"_index":663,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["layout",{"_index":1287,"title":{},"body":{"dependencies.html":{}}}],["leave",{"_index":910,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{},"index.html":{}}}],["leaving",{"_index":1174,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["length",{"_index":412,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/OrgProposal.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{},"interfaces/UserProposal.html":{}}}],["less",{"_index":1148,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["lets",{"_index":1455,"title":{},"body":{"index.html":{}}}],["level",{"_index":759,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{}}}],["liability",{"_index":1562,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1559,"title":{},"body":{"license.html":{}}}],["library",{"_index":1229,"title":{},"body":{"interfaces/Template.html":{}}}],["libs/.../delivery.firestore.ts",{"_index":1381,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["libs/.../invitation.firestore.ts",{"_index":1382,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["libs/.../material.firestore.ts",{"_index":1383,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["libs/.../movie.firestore.ts",{"_index":1578,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../notification.firestore.ts",{"_index":1384,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../organization.firestore.ts",{"_index":1385,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../template.firestore.ts",{"_index":1577,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/auth/src/lib/+state/auth.firestore.ts",{"_index":961,"title":{},"body":{"interfaces/PublicUser.html":{}}}],["libs/material/src/lib/delivery/+state/delivery.firestore.ts",{"_index":674,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["libs/material/src/lib/material/+state/material.firestore.ts",{"_index":843,"title":{},"body":{"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["libs/material/src/lib/template/+state/template.firestore.ts",{"_index":1275,"title":{},"body":{"interfaces/TemplateDocument.html":{},"miscellaneous/typealiases.html":{}}}],["libs/movie/src/lib/movie/+state/movie.firestore.ts",{"_index":350,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{},"miscellaneous/typealiases.html":{}}}],["libs/notification/src/lib/invitation/+state/invitation.firestore.ts",{"_index":825,"title":{},"body":{"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["libs/notification/src/lib/notification/+state/notification.firestore.ts",{"_index":858,"title":{},"body":{"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"miscellaneous/enumerations.html":{}}}],["libs/organization/src/lib/+state/organization.firestore.ts",{"_index":939,"title":{},"body":{"interfaces/OrganizationDocument.html":{},"interfaces/PublicOrganization.html":{},"miscellaneous/enumerations.html":{}}}],["libs/organization/src/lib/stakeholder/+state/stakeholder.firestore.ts",{"_index":1216,"title":{},"body":{"interfaces/StakeholderDocument.html":{}}}],["libs\\utils\\src\\lib\\helpers.ts",{"_index":133,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["license",{"_index":1516,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":1532,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1551,"title":{},"body":{"license.html":{}}}],["line",{"_index":1208,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"dependencies.html":{}}}],["linereader",{"_index":1185,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["linereader.close",{"_index":1193,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["linereader.on('close",{"_index":1190,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["linereader.on('line",{"_index":1207,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["lines",{"_index":1214,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["link",{"_index":271,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["linked",{"_index":185,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["linktx",{"_index":301,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["linktx.hash",{"_index":307,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["linktx.wait",{"_index":304,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["lint",{"_index":1441,"title":{},"body":{"index.html":{}}}],["linux",{"_index":1469,"title":{},"body":{"index.html":{}}}],["list",{"_index":537,"title":{},"body":{"interfaces/DeliveryContent.html":{},"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{}}}],["listen",{"_index":1491,"title":{},"body":{"index.html":{}}}],["literal",{"_index":482,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["load",{"_index":1197,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["loaded",{"_index":1215,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["loads",{"_index":650,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["local",{"_index":1406,"title":{},"body":{"index.html":{}}}],["locally",{"_index":1425,"title":{},"body":{"index.html":{}}}],["lodash",{"_index":486,"title":{},"body":{"interfaces/DeliveryContent.html":{},"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"dependencies.html":{}}}],["logging",{"_index":287,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["logline",{"_index":386,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["logo",{"_index":942,"title":{},"body":{"interfaces/OrganizationDocument.html":{},"interfaces/PublicOrganization.html":{}}}],["logs",{"_index":811,"title":{},"body":{"interfaces/EmailRequest.html":{}}}],["low",{"_index":758,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{}}}],["mail",{"_index":822,"title":{},"body":{"interfaces/EmailRequest.html":{}}}],["main",{"_index":435,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{},"index.html":{}}}],["make",{"_index":623,"title":{},"body":{"interfaces/DeliveryContent.html":{},"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["manage",{"_index":1501,"title":{},"body":{"index.html":{}}}],["mandatory",{"_index":197,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["many",{"_index":917,"title":{},"body":{"interfaces/OrgProposal.html":{},"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"interfaces/UserProposal.html":{}}}],["map(char",{"_index":136,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["mapping",{"_index":787,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{}}}],["maps",{"_index":789,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{}}}],["margin",{"_index":583,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["marketplace",{"_index":1392,"title":{},"body":{"index.html":{}}}],["mat",{"_index":1356,"title":{},"body":{"dependencies.html":{}}}],["match",{"_index":1111,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["matching",{"_index":347,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/Credit.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/DeployParams.html":{},"interfaces/DocWithID.html":{},"interfaces/EmailRequest.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/MetaTx.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/OrgProposal.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationDocument.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/PublicOrganization.html":{},"interfaces/PublicUser.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/SnapObject.html":{},"interfaces/StakeholderDocument.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/StoredDocument.html":{},"interfaces/Template.html":{},"interfaces/TemplateDocument.html":{},"interfaces/Title.html":{},"interfaces/UserDocPermissions.html":{},"interfaces/UserProposal.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["matchingorg.data().name",{"_index":927,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["matchingorg.id",{"_index":926,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["matchingorgs.docs.map(matchingorg",{"_index":925,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["matchingorgs.size",{"_index":924,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["material",{"_index":553,"title":{},"body":{"interfaces/DeliveryContent.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/Template.html":{}}}],["material.category",{"_index":597,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["material.stepid",{"_index":581,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["materialdocument",{"_index":480,"title":{"interfaces/MaterialDocument.html":{}},"body":{"interfaces/DeliveryContent.html":{},"interfaces/DocWithID.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/Template.html":{},"interfaces/UserDocPermissions.html":{}}}],["materialraw",{"_index":844,"title":{"interfaces/MaterialRaw.html":{}},"body":{"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{}}}],["materialref",{"_index":1240,"title":{},"body":{"interfaces/Template.html":{}}}],["materials",{"_index":476,"title":{},"body":{"interfaces/DeliveryContent.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/Template.html":{},"miscellaneous/enumerations.html":{}}}],["materials.foreach(doc",{"_index":1272,"title":{},"body":{"interfaces/Template.html":{}}}],["materials.foreach(material",{"_index":1255,"title":{},"body":{"interfaces/Template.html":{}}}],["materials.map(material",{"_index":578,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["materialsid",{"_index":1222,"title":{},"body":{"interfaces/Template.html":{}}}],["materialspercategory",{"_index":596,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["materialstatus",{"_index":744,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{},"miscellaneous/enumerations.html":{}}}],["materialtemplatedocument",{"_index":852,"title":{"interfaces/MaterialTemplateDocument.html":{}},"body":{"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{}}}],["maxageseconds",{"_index":1479,"title":{},"body":{"index.html":{}}}],["medias",{"_index":368,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["memory",{"_index":1047,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["merchantability",{"_index":1553,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1534,"title":{},"body":{"license.html":{}}}],["messages",{"_index":1500,"title":{},"body":{"index.html":{}}}],["meta",{"_index":73,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/StoredDocument.html":{}}}],["metatx",{"_index":81,"title":{"interfaces/MetaTx.html":{}},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["method",{"_index":1478,"title":{},"body":{"index.html":{}}}],["methods",{"_index":968,"title":{},"body":{"classes/Queue.html":{}}}],["mgamount",{"_index":711,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{}}}],["mgcurrency",{"_index":712,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{}}}],["mgcurrentdeadline",{"_index":716,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{}}}],["mgdeadlineraw",{"_index":697,"title":{"interfaces/MGDeadlineRaw.html":{}},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{}}}],["mgdeadlines",{"_index":713,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{}}}],["migratematerialtonewcollection",{"_index":1237,"title":{},"body":{"interfaces/Template.html":{}}}],["migratematerialtonewcollection(batch",{"_index":1256,"title":{},"body":{"interfaces/Template.html":{}}}],["migrateorgstemplate(batch",{"_index":1250,"title":{},"body":{"interfaces/Template.html":{}}}],["migratetemplatetonewcollection",{"_index":1243,"title":{},"body":{"interfaces/Template.html":{}}}],["migratetemplatetonewcollection(batch",{"_index":1254,"title":{},"body":{"interfaces/Template.html":{}}}],["minimum",{"_index":691,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{}}}],["miscellaneous",{"_index":1378,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mit",{"_index":1517,"title":{},"body":{"license.html":{}}}],["mnemonic",{"_index":65,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["mnemonic=\"\"running",{"_index":1430,"title":{},"body":{"index.html":{}}}],["mode",{"_index":810,"title":{},"body":{"interfaces/EmailRequest.html":{},"index.html":{}}}],["model",{"_index":461,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/OrganizationDocument.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/StakeholderDocument.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/TemplateDocument.html":{},"interfaces/Title.html":{}}}],["model/staticmodels",{"_index":679,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{}}}],["models",{"_index":855,"title":{},"body":{"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{}}}],["modify",{"_index":1533,"title":{},"body":{"license.html":{}}}],["modules",{"_index":1570,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":753,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"classes/Queue.html":{},"interfaces/SnapObject.html":{},"interfaces/StoredDocument.html":{},"interfaces/UserDocPermissions.html":{},"miscellaneous/typealiases.html":{}}}],["move",{"_index":451,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"interfaces/Template.html":{},"interfaces/Title.html":{}}}],["moves",{"_index":1233,"title":{},"body":{"interfaces/Template.html":{}}}],["movie",{"_index":426,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/DocWithID.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/SnapObject.html":{},"interfaces/Title.html":{},"interfaces/UserDocPermissions.html":{}}}],["moviecurrency",{"_index":443,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["moviedocument",{"_index":462,"title":{"interfaces/MovieDocument.html":{}},"body":{"interfaces/Credit.html":{},"interfaces/DocWithID.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/SnapObject.html":{},"interfaces/Title.html":{},"interfaces/UserDocPermissions.html":{}}}],["moviedocumentwithdates",{"_index":465,"title":{"interfaces/MovieDocumentWithDates.html":{}},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["moviefestivalprizes",{"_index":389,"title":{"interfaces/MovieFestivalPrizes.html":{}},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["movieid",{"_index":703,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{}}}],["movieids",{"_index":943,"title":{},"body":{"interfaces/OrganizationDocument.html":{},"interfaces/PublicOrganization.html":{}}}],["moviemain",{"_index":401,"title":{"interfaces/MovieMain.html":{}},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["moviepromotionaldescription",{"_index":370,"title":{"interfaces/MoviePromotionalDescription.html":{}},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["moviepromotionalelements",{"_index":378,"title":{"interfaces/MoviePromotionalElements.html":{}},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["movieraw",{"_index":427,"title":{"interfaces/MovieRaw.html":{}},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["movies",{"_index":433,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["moviesaledocumentwithdates",{"_index":400,"title":{"interfaces/MovieSaleDocumentWithDates.html":{}},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["moviesaleraw",{"_index":391,"title":{"interfaces/MovieSaleRaw.html":{}},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["moviesalesagentdealdocumentwithdates",{"_index":369,"title":{"interfaces/MovieSalesAgentDealDocumentWithDates.html":{}},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["moviesalesagentdealraw",{"_index":365,"title":{"interfaces/MovieSalesAgentDealRaw.html":{}},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["moviesalescast",{"_index":387,"title":{"interfaces/MovieSalesCast.html":{}},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["moviesalesinfodocumentwithdates",{"_index":424,"title":{"interfaces/MovieSalesInfoDocumentWithDates.html":{}},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["moviesalesinforaw",{"_index":414,"title":{"interfaces/MovieSalesInfoRaw.html":{}},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["moviestory",{"_index":384,"title":{"interfaces/MovieStory.html":{}},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["movieversioninfo",{"_index":362,"title":{"interfaces/MovieVersionInfo.html":{}},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["msg",{"_index":819,"title":{},"body":{"interfaces/EmailRequest.html":{}}}],["multiple",{"_index":567,"title":{},"body":{"interfaces/DeliveryContent.html":{},"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["mustbesigned",{"_index":705,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{}}}],["mustchargematerials",{"_index":704,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{}}}],["name",{"_index":121,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/Credit.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/DeployParams.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MetaTx.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/OrgProposal.html":{},"interfaces/OrganizationDocument.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/PublicOrganization.html":{},"interfaces/PublicUser.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/StoredDocument.html":{},"interfaces/TemplateDocument.html":{},"interfaces/Title.html":{},"interfaces/UserProposal.html":{}}}],["name.blockframes.eth",{"_index":243,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["name.blockframes.eth.blockframes.eth",{"_index":248,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["name.split",{"_index":250,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["named",{"_index":1476,"title":{},"body":{"index.html":{}}}],["namehash",{"_index":31,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["namehash(config.baseensdomain",{"_index":112,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["namehash(fullname",{"_index":294,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["nameowner",{"_index":274,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["nbmaterials",{"_index":1265,"title":{},"body":{"interfaces/Template.html":{}}}],["nbtemplates",{"_index":1264,"title":{},"body":{"interfaces/Template.html":{}}}],["need",{"_index":76,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["needed",{"_index":208,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["negociation",{"_index":684,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"miscellaneous/enumerations.html":{}}}],["negotiation",{"_index":685,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"miscellaneous/enumerations.html":{}}}],["network",{"_index":66,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["new",{"_index":106,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/Credit.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/StoredDocument.html":{},"interfaces/Title.html":{}}}],["newsignature",{"_index":866,"title":{},"body":{"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"miscellaneous/enumerations.html":{}}}],["newtemplate",{"_index":1244,"title":{},"body":{"interfaces/Template.html":{}}}],["newtemplate.materialsid",{"_index":1246,"title":{},"body":{"interfaces/Template.html":{}}}],["next",{"_index":757,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{},"miscellaneous/typealiases.html":{}}}],["ng",{"_index":1335,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ngmodule/material",{"_index":1321,"title":{},"body":{"dependencies.html":{}}}],["ngrx/effects",{"_index":1324,"title":{},"body":{"dependencies.html":{}}}],["ngrx/router",{"_index":1326,"title":{},"body":{"dependencies.html":{}}}],["ngrx/store",{"_index":1327,"title":{},"body":{"dependencies.html":{}}}],["ngx",{"_index":1355,"title":{},"body":{"dependencies.html":{}}}],["noa",{"_index":687,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"miscellaneous/enumerations.html":{}}}],["nod",{"_index":690,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"miscellaneous/enumerations.html":{}}}],["node",{"_index":1359,"title":{},"body":{"dependencies.html":{}}}],["non",{"_index":142,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["nonce",{"_index":83,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["noninfringement",{"_index":1556,"title":{},"body":{"license.html":{}}}],["normal",{"_index":504,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["normalize",{"_index":1453,"title":{},"body":{"index.html":{}}}],["note",{"_index":560,"title":{},"body":{"interfaces/DeliveryContent.html":{},"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["notes",{"_index":1488,"title":{},"body":{"index.html":{}}}],["notice",{"_index":688,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["notification",{"_index":860,"title":{},"body":{"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"miscellaneous/enumerations.html":{}}}],["notificationdocument",{"_index":857,"title":{"interfaces/NotificationDocument.html":{}},"body":{"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{}}}],["notificationoptions",{"_index":861,"title":{"interfaces/NotificationOptions.html":{}},"body":{"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{}}}],["notifications",{"_index":467,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/DocWithID.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/SnapObject.html":{},"interfaces/Title.html":{},"interfaces/UserDocPermissions.html":{}}}],["notificationtype",{"_index":732,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{},"miscellaneous/enumerations.html":{}}}],["now",{"_index":1034,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["now.tomillis",{"_index":1155,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["npm",{"_index":1362,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nrwl/angular",{"_index":1328,"title":{},"body":{"dependencies.html":{}}}],["nrwl/schematics:node",{"_index":1391,"title":{},"body":{"index.html":{}}}],["null",{"_index":189,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/DeployParams.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MetaTx.html":{},"interfaces/OrganizationDocument.html":{},"interfaces/PublicOrganization.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{}}}],["number",{"_index":98,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/Credit.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/DeployParams.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/MetaTx.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/OrganizationDocument.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/PublicOrganization.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/Title.html":{}}}],["numbers",{"_index":930,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["nvm",{"_index":1389,"title":{},"body":{"index.html":{}}}],["nx",{"_index":1388,"title":{},"body":{"index.html":{}}}],["object",{"_index":778,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"classes/Queue.html":{},"interfaces/SnapObject.html":{},"interfaces/StoredDocument.html":{},"interfaces/UserDocPermissions.html":{}}}],["object.keys(orgs",{"_index":628,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["object.keys(x",{"_index":1124,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["objects",{"_index":566,"title":{},"body":{"interfaces/DeliveryContent.html":{},"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["oblique",{"_index":507,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["obtaining",{"_index":1526,"title":{},"body":{"license.html":{}}}],["officeaddress",{"_index":944,"title":{},"body":{"interfaces/OrganizationDocument.html":{},"interfaces/PublicOrganization.html":{}}}],["old",{"_index":1160,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["once",{"_index":1062,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["one",{"_index":129,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["ongeneratedeliverypdfrequest(req",{"_index":659,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["onusercreate",{"_index":895,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["operationtype",{"_index":87,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["operatorname",{"_index":392,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["optional",{"_index":351,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/Invitation.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MovieMain.html":{},"interfaces/MovieRaw.html":{},"interfaces/NotificationOptions.html":{},"interfaces/Prize.html":{},"interfaces/PublicUser.html":{},"classes/Queue.html":{},"interfaces/StakeholderDocument.html":{},"interfaces/StepRaw.html":{},"interfaces/Title.html":{}}}],["order",{"_index":261,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["org",{"_index":335,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/Template.html":{}}}],["org.get('name",{"_index":213,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["org.id",{"_index":1245,"title":{},"body":{"interfaces/Template.html":{}}}],["org_contract_abi",{"_index":52,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["org_contract_bytecode",{"_index":53,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["orgaddress",{"_index":196,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["orgaddress.tolocalelowercase",{"_index":229,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["organization",{"_index":781,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationDocument.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/PublicOrganization.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{},"miscellaneous/enumerations.html":{}}}],["organizationdocpermissions",{"_index":767,"title":{"interfaces/OrganizationDocPermissions.html":{}},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{}}}],["organizationdocument",{"_index":489,"title":{"interfaces/OrganizationDocument.html":{}},"body":{"interfaces/DeliveryContent.html":{},"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationDocument.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/PublicOrganization.html":{},"interfaces/SnapObject.html":{},"interfaces/Template.html":{},"interfaces/UserDocPermissions.html":{}}}],["organizationfactory",{"_index":340,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["organizationfactory.deploy(adminaddress",{"_index":342,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["organizationids",{"_index":608,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["organizationids.map((id",{"_index":612,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["organizationpermissions",{"_index":765,"title":{"interfaces/OrganizationPermissions.html":{}},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{}}}],["organizations",{"_index":609,"title":{},"body":{"interfaces/DeliveryContent.html":{},"interfaces/Template.html":{}}}],["organizations[id",{"_index":614,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["organizationstatus",{"_index":735,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationDocument.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/PublicOrganization.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{},"miscellaneous/enumerations.html":{}}}],["organizationstatus.pending",{"_index":959,"title":{},"body":{"interfaces/OrganizationDocument.html":{},"interfaces/PublicOrganization.html":{}}}],["orgens",{"_index":214,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["orgid",{"_index":119,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/Template.html":{},"interfaces/TemplateDocument.html":{}}}],["orgids",{"_index":543,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["orgids.map((id",{"_index":548,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["orgname",{"_index":211,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["orgproposal",{"_index":880,"title":{"interfaces/OrgProposal.html":{}},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["orgs",{"_index":477,"title":{},"body":{"interfaces/DeliveryContent.html":{},"interfaces/Template.html":{}}}],["orgs.map(async",{"_index":1263,"title":{},"body":{"interfaces/Template.html":{}}}],["orgs.map(org",{"_index":1260,"title":{},"body":{"interfaces/Template.html":{}}}],["orgs/orgid/materials",{"_index":1234,"title":{},"body":{"interfaces/Template.html":{}}}],["orgs/orgid/templates",{"_index":1232,"title":{},"body":{"interfaces/Template.html":{}}}],["orgs[id",{"_index":549,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["orgsids",{"_index":627,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["origin",{"_index":865,"title":{},"body":{"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["original",{"_index":382,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{},"index.html":{}}}],["origincountries",{"_index":408,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["origincountryreleasedate",{"_index":421,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["os",{"_index":1474,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":1566,"title":{},"body":{"license.html":{}}}],["ouput",{"_index":1033,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["out",{"_index":662,"title":{},"body":{"interfaces/DeliveryContent.html":{},"license.html":{}}}],["over",{"_index":563,"title":{},"body":{"interfaces/DeliveryContent.html":{},"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["overflow",{"_index":1205,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["overview",{"_index":1571,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":772,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{}}}],["p",{"_index":1514,"title":{},"body":{"index.html":{}}}],["package",{"_index":1276,"title":{"dependencies.html":{}},"body":{}}],["package.jsondeploy",{"_index":1443,"title":{},"body":{"index.html":{}}}],["param",{"_index":158,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeployParams.html":{},"interfaces/DocWithID.html":{},"interfaces/MetaTx.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/SnapObject.html":{},"interfaces/StoredDocument.html":{},"interfaces/UserDocPermissions.html":{}}}],["parameter",{"_index":542,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["parameters",{"_index":198,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["params",{"_index":193,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/OrganizationDocument.html":{},"interfaces/PublicOrganization.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/StakeholderDocument.html":{}}}],["params.id",{"_index":958,"title":{},"body":{"interfaces/OrganizationDocument.html":{},"interfaces/PublicOrganization.html":{}}}],["part",{"_index":245,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/StoredDocument.html":{}}}],["partial",{"_index":957,"title":{},"body":{"interfaces/OrganizationDocument.html":{},"interfaces/PublicOrganization.html":{},"interfaces/StakeholderDocument.html":{}}}],["particular",{"_index":1555,"title":{},"body":{"license.html":{}}}],["password",{"_index":883,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{},"dependencies.html":{},"index.html":{}}}],["passwordgenerator",{"_index":882,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["path",{"_index":1084,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"index.html":{}}}],["pathtodocument",{"_index":872,"title":{},"body":{"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"miscellaneous/enumerations.html":{}}}],["payload",{"_index":177,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["pdf",{"_index":473,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["pdf.end",{"_index":673,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["pdf.pipe(resp",{"_index":672,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["pdfmake",{"_index":540,"title":{},"body":{"interfaces/DeliveryContent.html":{},"dependencies.html":{}}}],["pdfprinter",{"_index":497,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["pdfprinter(fonts",{"_index":642,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["pegi",{"_index":418,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["pending",{"_index":686,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/DocWithID.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationDocument.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/PublicOrganization.html":{},"interfaces/SnapObject.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/UserDocPermissions.html":{},"miscellaneous/enumerations.html":{}}}],["percentage",{"_index":698,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{}}}],["permission",{"_index":1520,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1539,"title":{},"body":{"license.html":{}}}],["person",{"_index":1525,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1540,"title":{},"body":{"license.html":{}}}],["phonenumber",{"_index":945,"title":{},"body":{"interfaces/OrganizationDocument.html":{},"interfaces/PublicOrganization.html":{}}}],["pipe",{"_index":651,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["place",{"_index":130,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["placeholder",{"_index":949,"title":{},"body":{"interfaces/OrganizationDocument.html":{},"interfaces/PublicOrganization.html":{}}}],["placeholder_logo",{"_index":950,"title":{},"body":{"interfaces/OrganizationDocument.html":{},"interfaces/PublicOrganization.html":{}}}],["please",{"_index":750,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{},"miscellaneous/typealiases.html":{}}}],["point",{"_index":1052,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["points",{"_index":1504,"title":{},"body":{"index.html":{}}}],["policy",{"_index":1466,"title":{},"body":{"index.html":{}}}],["pop",{"_index":969,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["portions",{"_index":1547,"title":{},"body":{"license.html":{}}}],["possible",{"_index":1199,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["poster",{"_index":405,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["potentialrevenues",{"_index":447,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["precompute",{"_index":151,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["precomputeaddress(ensdomain",{"_index":166,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["prefix",{"_index":908,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["prefix.length",{"_index":915,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["prep",{"_index":1032,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"index.html":{}}}],["preserve",{"_index":1158,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["preserved",{"_index":625,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["prevent",{"_index":246,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["previous",{"_index":1203,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["price",{"_index":399,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["printer",{"_index":641,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["printer.createpdfkitdocument(docdefinition",{"_index":643,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["prize",{"_index":373,"title":{"interfaces/Prize.html":{}},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["prizes",{"_index":390,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["probably",{"_index":327,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/StoredDocument.html":{}}}],["problem",{"_index":328,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["process",{"_index":1153,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["processedid",{"_index":718,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StakeholderDocument.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{}}}],["processing",{"_index":1061,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["processingqueue",{"_index":1053,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["processingqueue.isempty",{"_index":1059,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["processingqueue.pop",{"_index":1069,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["processingqueue.push(x.path",{"_index":1058,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["producernote",{"_index":441,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["production",{"_index":1410,"title":{},"body":{"index.html":{}}}],["productioncompanies",{"_index":411,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["productionyear",{"_index":406,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["project",{"_index":1497,"title":{},"body":{"index.html":{}}}],["promise",{"_index":815,"title":{},"body":{"interfaces/EmailRequest.html":{},"interfaces/OrgProposal.html":{},"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"interfaces/Template.html":{},"interfaces/UserProposal.html":{}}}],["promise(resolve",{"_index":1092,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["promise.all",{"_index":666,"title":{},"body":{"interfaces/DeliveryContent.html":{},"interfaces/Template.html":{}}}],["promise.all(promises",{"_index":1089,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"interfaces/Template.html":{}}}],["promises",{"_index":1063,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"interfaces/Template.html":{}}}],["promises.length",{"_index":1213,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["promises.push(db.doc(stored.docpath).set(reencodeobject(stored.content",{"_index":1210,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["promises.push(readerdone",{"_index":1211,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["promotional",{"_index":395,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["promotionaldescription",{"_index":454,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["promotionalelement",{"_index":375,"title":{"interfaces/PromotionalElement.html":{}},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["promotionalelements",{"_index":380,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["properties",{"_index":13,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/Credit.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/DeployParams.html":{},"interfaces/DocWithID.html":{},"interfaces/EmailRequest.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/MetaTx.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/OrgProposal.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationDocument.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/PublicOrganization.html":{},"interfaces/PublicUser.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/SnapObject.html":{},"interfaces/StakeholderDocument.html":{},"interfaces/StepRaw.html":{},"interfaces/StoredDocument.html":{},"interfaces/Template.html":{},"interfaces/TemplateDocument.html":{},"interfaces/Title.html":{},"interfaces/UserDocPermissions.html":{},"interfaces/UserProposal.html":{}}}],["protect",{"_index":1041,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["provided",{"_index":564,"title":{},"body":{"interfaces/DeliveryContent.html":{},"interfaces/EmailRequest.html":{},"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"license.html":{}}}],["provider",{"_index":30,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"dependencies.html":{}}}],["public",{"_index":466,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/OrganizationDocument.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/PublicOrganization.html":{},"interfaces/PublicUser.html":{},"interfaces/Title.html":{}}}],["publicmovie",{"_index":468,"title":{"interfaces/PublicMovie.html":{}},"body":{"interfaces/Credit.html":{},"interfaces/DocWithID.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/SnapObject.html":{},"interfaces/Title.html":{},"interfaces/UserDocPermissions.html":{}}}],["publicorganization",{"_index":730,"title":{"interfaces/PublicOrganization.html":{}},"body":{"interfaces/DocWithID.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationDocument.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/PublicOrganization.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{}}}],["publicuser",{"_index":827,"title":{"interfaces/PublicUser.html":{}},"body":{"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/PublicUser.html":{}}}],["publish",{"_index":1499,"title":{},"body":{"index.html":{},"license.html":{}}}],["pubsub",{"_index":1492,"title":{},"body":{"index.html":{}}}],["punycode",{"_index":40,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"dependencies.html":{}}}],["purpose",{"_index":839,"title":{},"body":{"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["push",{"_index":970,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"index.html":{}}}],["push(x",{"_index":974,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["pwd}/blockframes",{"_index":1512,"title":{},"body":{"index.html":{}}}],["q",{"_index":1070,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["q.docs.map(async",{"_index":1076,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["q.size",{"_index":1072,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["qr",{"_index":606,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["query",{"_index":656,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["query.docs.map(doc",{"_index":919,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["query.size",{"_index":918,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["querydocumentsnapshot",{"_index":994,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"miscellaneous/typealiases.html":{}}}],["querysnapshot",{"_index":992,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"miscellaneous/typealiases.html":{}}}],["queue",{"_index":965,"title":{"classes/Queue.html":{}},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["quota",{"_index":1048,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["r",{"_index":1128,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["r[k",{"_index":1130,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["range",{"_index":357,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["raw",{"_index":826,"title":{},"body":{"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{}}}],["re",{"_index":1109,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["reaches",{"_index":1065,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["reader",{"_index":1352,"title":{},"body":{"dependencies.html":{}}}],["readerdone",{"_index":1189,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["readline",{"_index":981,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["readline.createinterface",{"_index":1186,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["ready",{"_index":91,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["received",{"_index":1459,"title":{},"body":{"index.html":{}}}],["record",{"_index":219,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/DocWithID.html":{},"interfaces/MetaTx.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{},"miscellaneous/typealiases.html":{}}}],["recursion",{"_index":1040,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["recursive",{"_index":1120,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["reencode",{"_index":1117,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["reencodeobject(x",{"_index":1118,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["reencodeobject(x[k",{"_index":1131,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["refused",{"_index":709,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{}}}],["regarding",{"_index":1396,"title":{},"body":{"index.html":{}}}],["register",{"_index":236,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["registered",{"_index":277,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["registerparams",{"_index":120,"title":{"interfaces/RegisterParams.html":{}},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["registertx",{"_index":278,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["registertx.hash",{"_index":284,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["registertx.wait",{"_index":282,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["registration",{"_index":254,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["registry",{"_index":62,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["registryaddress",{"_index":67,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["regular",{"_index":9,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["rejected",{"_index":326,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["related",{"_index":764,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{}}}],["relayer",{"_index":60,"title":{"interfaces/Relayer.html":{}},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["relayer.baseensdomain",{"_index":216,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["relayer.contractfactory.deploy",{"_index":226,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["relayer.namehash",{"_index":280,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["relayer.registry.owner(namehash(fullname",{"_index":275,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["relayer.registry.resolver(namehash(fullname",{"_index":290,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["relayer.registry.setresolver",{"_index":293,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["relayer.registry.setsubnodeowner",{"_index":279,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["relayer.resolver.address",{"_index":291,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["relayer.resolver.setaddr",{"_index":302,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["relayer.wallet",{"_index":311,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["relayer.wallet.address",{"_index":276,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["relayer.wallet.provider.getcode(erc1077address",{"_index":221,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["relayer.wallet.provider.resolvename(ensname",{"_index":188,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["relayer.wallet.provider.resolvename(fullname",{"_index":270,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["relayer.wallet.provider.resolvename(orgens",{"_index":217,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["relayer.wallet.provider.resolvename(relayer.contractfactory.address).then(address",{"_index":172,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["relayerconfig",{"_index":64,"title":{"interfaces/RelayerConfig.html":{}},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["relayerdeploylogic",{"_index":191,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["relayerdeployorganizationlogic",{"_index":336,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["relayernamehash",{"_index":111,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["relayerregisterenslogic",{"_index":237,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["relayersendlogic",{"_index":309,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["removeorganization",{"_index":871,"title":{},"body":{"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"miscellaneous/enumerations.html":{}}}],["render",{"_index":536,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["rendering",{"_index":535,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["replace",{"_index":141,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["req",{"_index":654,"title":{},"body":{"interfaces/DeliveryContent.html":{},"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["req.query.deliveryid",{"_index":660,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["request",{"_index":649,"title":{},"body":{"interfaces/DeliveryContent.html":{},"dependencies.html":{}}}],["requested",{"_index":776,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{},"miscellaneous/enumerations.html":{}}}],["requests",{"_index":645,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["requesttokensparams",{"_index":95,"title":{"interfaces/RequestTokensParams.html":{}},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["require",{"_index":255,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["require('pdfmake",{"_index":498,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["required",{"_index":192,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["resolve",{"_index":1191,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["resolver",{"_index":63,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["resolveraddress",{"_index":68,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["resolvertx",{"_index":292,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["resolvertx.hash",{"_index":299,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["resolvertx.wait",{"_index":296,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["resp",{"_index":657,"title":{},"body":{"interfaces/DeliveryContent.html":{},"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"interfaces/Template.html":{}}}],["resp.status(200).send('nothing",{"_index":1175,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["resp.status(200).send('success",{"_index":1095,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"interfaces/Template.html":{}}}],["response",{"_index":653,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["restoration",{"_index":1147,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["restore",{"_index":1132,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["restored",{"_index":1025,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["restoredat",{"_index":1135,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["restoredat.tomillis",{"_index":1154,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["restoring",{"_index":1163,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["restriction",{"_index":1530,"title":{},"body":{"license.html":{}}}],["result",{"_index":218,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/Credit.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/DeployParams.html":{},"interfaces/DocWithID.html":{},"interfaces/EmailRequest.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/MetaTx.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/OrgProposal.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationDocument.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/PublicOrganization.html":{},"interfaces/PublicUser.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/SnapObject.html":{},"interfaces/StakeholderDocument.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/StoredDocument.html":{},"interfaces/Template.html":{},"interfaces/TemplateDocument.html":{},"interfaces/Title.html":{},"interfaces/UserDocPermissions.html":{},"interfaces/UserProposal.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["result['deploy",{"_index":230,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["result['link",{"_index":303,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["result['register",{"_index":281,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["result['resolver",{"_index":295,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["results",{"_index":348,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/Credit.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/DeployParams.html":{},"interfaces/DocWithID.html":{},"interfaces/EmailRequest.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/MetaTx.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/OrgProposal.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationDocument.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/PublicOrganization.html":{},"interfaces/PublicUser.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/SnapObject.html":{},"interfaces/StakeholderDocument.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/StoredDocument.html":{},"interfaces/Template.html":{},"interfaces/TemplateDocument.html":{},"interfaces/Title.html":{},"interfaces/UserDocPermissions.html":{},"interfaces/UserProposal.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["resumable",{"_index":1021,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["retrieve",{"_index":1054,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["retrievedaddress",{"_index":269,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["return",{"_index":115,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/DeployParams.html":{},"interfaces/DocWithID.html":{},"interfaces/EmailRequest.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MetaTx.html":{},"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/OrgProposal.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationDocument.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/PublicOrganization.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/SnapObject.html":{},"interfaces/StakeholderDocument.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/StoredDocument.html":{},"interfaces/Template.html":{},"interfaces/UserDocPermissions.html":{},"interfaces/UserProposal.html":{}}}],["returns",{"_index":539,"title":{},"body":{"interfaces/DeliveryContent.html":{},"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"classes/Queue.html":{},"interfaces/SnapObject.html":{},"interfaces/StoredDocument.html":{},"interfaces/UserDocPermissions.html":{}}}],["reuse",{"_index":565,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["reworkingperiod",{"_index":710,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{}}}],["rights",{"_index":366,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{},"license.html":{}}}],["rm",{"_index":1485,"title":{},"body":{"index.html":{}}}],["role",{"_index":1219,"title":{},"body":{"interfaces/StakeholderDocument.html":{}}}],["roles",{"_index":1498,"title":{},"body":{"index.html":{}}}],["root",{"_index":1055,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"interfaces/Template.html":{},"index.html":{}}}],["rowmaterials",{"_index":559,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["rowmaterialspercategory",{"_index":595,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["rowmaterialspercategory(materials",{"_index":631,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["roworganizations(orgids",{"_index":547,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["roworganizations(orgsids",{"_index":630,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["rowsignatures",{"_index":610,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["rowsignatures(orgsids",{"_index":632,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["run",{"_index":1432,"title":{},"body":{"index.html":{}}}],["running",{"_index":1440,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1367,"title":{},"body":{"dependencies.html":{}}}],["sales",{"_index":450,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["salesagentdeal",{"_index":459,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["salescast",{"_index":455,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["salesinfo",{"_index":456,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["salt",{"_index":161,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["same",{"_index":555,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["saturn",{"_index":1369,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":1194,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["schematics/angular",{"_index":1330,"title":{},"body":{"dependencies.html":{}}}],["scoring",{"_index":415,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["search",{"_index":912,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{},"dependencies.html":{}}}],["seconds",{"_index":1150,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["secrets",{"_index":1428,"title":{},"body":{"index.html":{}}}],["section",{"_index":1462,"title":{},"body":{"index.html":{}}}],["sections",{"_index":449,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["see",{"_index":751,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["select",{"_index":1357,"title":{},"body":{"dependencies.html":{}}}],["selectioncategories",{"_index":448,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["sell",{"_index":1537,"title":{},"body":{"license.html":{}}}],["send",{"_index":308,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/MetaTx.html":{},"interfaces/OrgProposal.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/UserProposal.html":{}}}],["sendgrid",{"_index":801,"title":{},"body":{"interfaces/EmailRequest.html":{}}}],["sendgrid.send(msg",{"_index":823,"title":{},"body":{"interfaces/EmailRequest.html":{}}}],["sendgrid.setapikey(sendgridapikey",{"_index":818,"title":{},"body":{"interfaces/EmailRequest.html":{}}}],["sendgrid/mail",{"_index":802,"title":{},"body":{"interfaces/EmailRequest.html":{},"dependencies.html":{}}}],["sendgrid_api_key",{"_index":1429,"title":{},"body":{"index.html":{}}}],["sendgridapikey",{"_index":803,"title":{},"body":{"interfaces/EmailRequest.html":{}}}],["sendmail",{"_index":814,"title":{},"body":{"interfaces/EmailRequest.html":{},"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["sendmail(userinvite(email",{"_index":938,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["sendparams",{"_index":93,"title":{"interfaces/SendParams.html":{}},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["sends",{"_index":805,"title":{},"body":{"interfaces/EmailRequest.html":{}}}],["sendtx",{"_index":329,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["sendtx.hash",{"_index":333,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["sendtx.wait",{"_index":334,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["sensitive",{"_index":953,"title":{},"body":{"interfaces/OrganizationDocument.html":{},"interfaces/PublicOrganization.html":{}}}],["sent",{"_index":80,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["server",{"_index":1435,"title":{},"body":{"index.html":{}}}],["server.scripthash",{"_index":1496,"title":{},"body":{"index.html":{}}}],["server:0.0.1",{"_index":1510,"title":{},"body":{"index.html":{}}}],["servertimestamp",{"_index":1225,"title":{},"body":{"interfaces/Template.html":{}}}],["service",{"_index":1423,"title":{},"body":{"index.html":{}}}],["set",{"_index":288,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/EmailRequest.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/MetaTx.html":{},"interfaces/OrganizationDocument.html":{},"interfaces/PublicOrganization.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/StoredDocument.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["setaddress",{"_index":306,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["setresolver",{"_index":298,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["setrestoreflag",{"_index":1133,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"interfaces/Template.html":{}}}],["setup",{"_index":1413,"title":{},"body":{"index.html":{}}}],["shall",{"_index":1544,"title":{},"body":{"license.html":{}}}],["shared",{"_index":1228,"title":{},"body":{"interfaces/Template.html":{},"index.html":{}}}],["short",{"_index":911,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["shortsynopsis",{"_index":413,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["showoperatorname",{"_index":393,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["side",{"_index":561,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["signature",{"_index":90,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["signatures",{"_index":77,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["signdeliveryparams",{"_index":99,"title":{"interfaces/SignDeliveryParams.html":{}},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["signedmetatx",{"_index":92,"title":{"interfaces/SignedMetaTx.html":{}},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["signer",{"_index":1304,"title":{},"body":{"dependencies.html":{}}}],["similar",{"_index":1206,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["size",{"_index":1044,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["skinny",{"_index":155,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["skip",{"_index":224,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/StoredDocument.html":{}}}],["skipping",{"_index":817,"title":{},"body":{"interfaces/EmailRequest.html":{}}}],["skipwhenrestoring",{"_index":1159,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["snapobject",{"_index":780,"title":{"interfaces/SnapObject.html":{}},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{}}}],["software",{"_index":1527,"title":{},"body":{"license.html":{}}}],["somehow",{"_index":1202,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["something",{"_index":1495,"title":{},"body":{"index.html":{}}}],["sortby",{"_index":484,"title":{},"body":{"interfaces/DeliveryContent.html":{},"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["sortby(['_seconds",{"_index":1009,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["sortby(files",{"_index":1171,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["sortby(object.keys(materialspercategory",{"_index":599,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["sortedfiles",{"_index":1170,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["sortedfiles.length",{"_index":1172,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["sortedfiles[sortedfiles.length",{"_index":1177,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/Credit.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/DeployParams.html":{},"interfaces/DocWithID.html":{},"interfaces/EmailRequest.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/MetaTx.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/OrgProposal.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationDocument.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/PublicOrganization.html":{},"interfaces/PublicUser.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/SnapObject.html":{},"interfaces/StakeholderDocument.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/StoredDocument.html":{},"interfaces/Template.html":{},"interfaces/TemplateDocument.html":{},"interfaces/Title.html":{},"interfaces/UserDocPermissions.html":{},"interfaces/UserProposal.html":{}}}],["specific",{"_index":829,"title":{},"body":{"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"miscellaneous/typealiases.html":{}}}],["speed",{"_index":1060,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["split",{"_index":135,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["stack",{"_index":1042,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["staging",{"_index":1409,"title":{},"body":{"index.html":{}}}],["stakeholder",{"_index":613,"title":{},"body":{"interfaces/DeliveryContent.html":{},"interfaces/StakeholderDocument.html":{}}}],["stakeholder.id",{"_index":715,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{}}}],["stakeholderdocument",{"_index":492,"title":{"interfaces/StakeholderDocument.html":{}},"body":{"interfaces/DeliveryContent.html":{},"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/StakeholderDocument.html":{},"interfaces/UserDocPermissions.html":{}}}],["stakeholderid",{"_index":101,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["stakeholders",{"_index":538,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["stakeholders.map",{"_index":667,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["start",{"_index":1433,"title":{},"body":{"index.html":{}}}],["started",{"_index":1146,"title":{"index.html":{},"license.html":{}},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["starts",{"_index":1434,"title":{},"body":{"index.html":{}}}],["static",{"_index":854,"title":{},"body":{"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{}}}],["staticmodels",{"_index":677,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{}}}],["staticmodels)['movie_currencies'])[number]['code",{"_index":681,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{}}}],["status",{"_index":410,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/OrganizationDocument.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/PublicOrganization.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/Title.html":{},"miscellaneous/enumerations.html":{}}}],["step",{"_index":558,"title":{},"body":{"interfaces/DeliveryContent.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{}}}],["step.date",{"_index":726,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{}}}],["step.date.todate",{"_index":727,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{}}}],["stepdocument",{"_index":720,"title":{"interfaces/StepDocument.html":{}},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/DocWithID.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/UserDocPermissions.html":{}}}],["stepdocumentwithdate",{"_index":490,"title":{"interfaces/StepDocumentWithDate.html":{}},"body":{"interfaces/DeliveryContent.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/DocWithID.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/UserDocPermissions.html":{}}}],["stepid",{"_index":847,"title":{},"body":{"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{}}}],["stepraw",{"_index":700,"title":{"interfaces/StepRaw.html":{}},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{}}}],["steps",{"_index":478,"title":{},"body":{"interfaces/DeliveryContent.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"classes/Queue.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/StoredDocument.html":{}}}],["steps.map(step",{"_index":725,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{}}}],["steps[material.stepid].name",{"_index":582,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["still",{"_index":1152,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["storage",{"_index":848,"title":{},"body":{"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"index.html":{}}}],["store",{"_index":621,"title":{},"body":{"interfaces/DeliveryContent.html":{},"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"dependencies.html":{},"index.html":{}}}],["stored",{"_index":1079,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"index.html":{}}}],["storeddocument",{"_index":1001,"title":{"interfaces/StoredDocument.html":{}},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["story",{"_index":453,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["stream",{"_index":983,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["stream.end(resolve",{"_index":1093,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["stream.on('end",{"_index":1192,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["stream.write('\\n",{"_index":1081,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["stream.write(json.stringify(stored",{"_index":1080,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["string",{"_index":16,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/Credit.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/DeployParams.html":{},"interfaces/DocWithID.html":{},"interfaces/EmailRequest.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/MetaTx.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/OrgProposal.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationDocument.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/PublicOrganization.html":{},"interfaces/PublicUser.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/SnapObject.html":{},"interfaces/StakeholderDocument.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/StoredDocument.html":{},"interfaces/Template.html":{},"interfaces/TemplateDocument.html":{},"interfaces/Title.html":{},"interfaces/UserDocPermissions.html":{},"interfaces/UserProposal.html":{}}}],["style",{"_index":521,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["style_bold",{"_index":515,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["style_description",{"_index":514,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["style_header",{"_index":510,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["style_subheader",{"_index":512,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["style_table_materials",{"_index":516,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["styles",{"_index":501,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["styletablematerials",{"_index":517,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["sub",{"_index":1235,"title":{},"body":{"interfaces/Template.html":{}}}],["subcollection",{"_index":452,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"interfaces/Title.html":{}}}],["subcollections",{"_index":1085,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["subcollections.foreach(x",{"_index":1087,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["subheader",{"_index":513,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["subheader(org.name",{"_index":550,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["subject",{"_index":800,"title":{},"body":{"interfaces/EmailRequest.html":{},"license.html":{}}}],["sublicense",{"_index":1536,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1546,"title":{},"body":{"license.html":{}}}],["subtitles",{"_index":364,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["superadmins",{"_index":766,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{}}}],["sure",{"_index":624,"title":{},"body":{"interfaces/DeliveryContent.html":{},"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["surname",{"_index":963,"title":{},"body":{"interfaces/PublicUser.html":{}}}],["switch",{"_index":531,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["synopsis",{"_index":385,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["t",{"_index":795,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"classes/Queue.html":{},"interfaces/SnapObject.html":{},"interfaces/StoredDocument.html":{},"interfaces/UserDocPermissions.html":{},"index.html":{}}}],["table",{"_index":557,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["tablebody",{"_index":577,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["tableheader",{"_index":574,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["tables",{"_index":592,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["tables.push(rowmaterials(materialspercategory[category",{"_index":602,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["tables.push(subheader(category",{"_index":601,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["tag=eth",{"_index":1509,"title":{},"body":{"index.html":{}}}],["tags",{"_index":1394,"title":{},"body":{"index.html":{}}}],["take",{"_index":532,"title":{},"body":{"interfaces/DeliveryContent.html":{},"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["template",{"_index":851,"title":{"interfaces/Template.html":{}},"body":{"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/Template.html":{},"interfaces/TemplateDocument.html":{},"index.html":{}}}],["template.materialsid.includes(material.id",{"_index":1239,"title":{},"body":{"interfaces/Template.html":{}}}],["templatedocument",{"_index":1274,"title":{"interfaces/TemplateDocument.html":{}},"body":{"interfaces/TemplateDocument.html":{}}}],["templateids",{"_index":946,"title":{},"body":{"interfaces/OrganizationDocument.html":{},"interfaces/PublicOrganization.html":{}}}],["templateref",{"_index":1247,"title":{},"body":{"interfaces/Template.html":{}}}],["templates",{"_index":887,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/Template.html":{},"interfaces/TemplateDocument.html":{},"interfaces/UserProposal.html":{}}}],["templates.foreach(doc",{"_index":1269,"title":{},"body":{"interfaces/Template.html":{}}}],["templates.foreach(template",{"_index":1253,"title":{},"body":{"interfaces/Template.html":{}}}],["templates/templateid/materials",{"_index":1236,"title":{},"body":{"interfaces/Template.html":{}}}],["terminal",{"_index":1188,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["territories",{"_index":367,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["test",{"_index":1442,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1431,"title":{},"body":{"index.html":{}}}],["text",{"_index":520,"title":{},"body":{"interfaces/DeliveryContent.html":{},"interfaces/EmailRequest.html":{}}}],["thirty_seconds_in_ms",{"_index":998,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["this.content.length",{"_index":1007,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["this.content.push(x",{"_index":1003,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["this.content.shift",{"_index":1004,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["those",{"_index":127,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["through",{"_index":1075,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["throw",{"_index":194,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/StoredDocument.html":{}}}],["time",{"_index":568,"title":{},"body":{"interfaces/DeliveryContent.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"classes/Queue.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/StoredDocument.html":{}}}],["timestamp",{"_index":360,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"classes/Queue.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/StoredDocument.html":{},"interfaces/Template.html":{},"interfaces/TemplateDocument.html":{},"interfaces/Title.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["timestamps",{"_index":1116,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["title",{"_index":381,"title":{"interfaces/Title.html":{}},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["tmp",{"_index":1372,"title":{},"body":{"dependencies.html":{}}}],["toascii",{"_index":39,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["toascii(email.split('@')[0]).tolowercase",{"_index":134,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["todo",{"_index":122,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/Credit.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeployParams.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/MetaTx.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/StoredDocument.html":{},"interfaces/Template.html":{},"interfaces/Title.html":{}}}],["topic",{"_index":1493,"title":{},"body":{"index.html":{}}}],["topicrootname}.{contractname",{"_index":1494,"title":{},"body":{"index.html":{}}}],["topics",{"_index":1502,"title":{},"body":{"index.html":{}}}],["tort",{"_index":1565,"title":{},"body":{"license.html":{}}}],["toutf8bytes",{"_index":35,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["toworkondocument",{"_index":842,"title":{},"body":{"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"miscellaneous/enumerations.html":{}}}],["transaction",{"_index":11,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/OrgProposal.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/UserProposal.html":{}}}],["transactional",{"_index":806,"title":{},"body":{"interfaces/EmailRequest.html":{}}}],["transactionreceipt",{"_index":28,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"miscellaneous/typealiases.html":{}}}],["transactionresponse",{"_index":27,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"miscellaneous/typealiases.html":{}}}],["transactions",{"_index":604,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["transform",{"_index":1113,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["true",{"_index":638,"title":{},"body":{"interfaces/DeliveryContent.html":{},"interfaces/OrgProposal.html":{},"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"interfaces/UserProposal.html":{}}}],["try",{"_index":199,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/OrgProposal.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/UserProposal.html":{}}}],["ts",{"_index":528,"title":{},"body":{"interfaces/DeliveryContent.html":{},"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["turn",{"_index":784,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"classes/Queue.html":{},"interfaces/SnapObject.html":{},"interfaces/StoredDocument.html":{},"interfaces/UserDocPermissions.html":{}}}],["twenty",{"_index":1149,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["tx",{"_index":75,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/OrgProposal.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/UserProposal.html":{}}}],["tx.data",{"_index":318,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["tx.gaslimit",{"_index":322,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["tx.gasprice",{"_index":320,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["tx.gastoken",{"_index":321,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["tx.get(userdocref",{"_index":902,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["tx.nonce",{"_index":319,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["tx.operationtype",{"_index":323,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["tx.set(userdocref",{"_index":905,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["tx.signatures",{"_index":324,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["tx.to",{"_index":316,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["tx.update(userdocref",{"_index":904,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["tx.value",{"_index":317,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["txid",{"_index":479,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["txid[id",{"_index":615,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["txreceipt",{"_index":58,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"miscellaneous/typealiases.html":{}}}],["txresponse",{"_index":57,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"miscellaneous/typealiases.html":{}}}],["txs",{"_index":258,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["type",{"_index":17,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/Credit.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/DeployParams.html":{},"interfaces/DocWithID.html":{},"interfaces/EmailRequest.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/MetaTx.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{},"interfaces/OrgProposal.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationDocument.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/PublicOrganization.html":{},"interfaces/PublicUser.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/SnapObject.html":{},"interfaces/StakeholderDocument.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/StoredDocument.html":{},"interfaces/Template.html":{},"interfaces/TemplateDocument.html":{},"interfaces/Title.html":{},"interfaces/UserDocPermissions.html":{},"interfaces/UserProposal.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":1572,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":721,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{}}}],["typeof",{"_index":526,"title":{},"body":{"interfaces/DeliveryContent.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{}}}],["types",{"_index":499,"title":{},"body":{"interfaces/DeliveryContent.html":{},"interfaces/DocWithID.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"classes/Queue.html":{},"interfaces/SnapObject.html":{},"interfaces/StoredDocument.html":{},"interfaces/UserDocPermissions.html":{},"miscellaneous/typealiases.html":{}}}],["types/sendgrid",{"_index":1332,"title":{},"body":{"dependencies.html":{}}}],["uid",{"_index":894,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/PublicUser.html":{},"interfaces/UserProposal.html":{}}}],["uint256",{"_index":71,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["uint8",{"_index":88,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["undefined",{"_index":782,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"classes/Queue.html":{},"interfaces/SnapObject.html":{},"interfaces/StoredDocument.html":{},"interfaces/UserDocPermissions.html":{},"miscellaneous/typealiases.html":{}}}],["unique",{"_index":162,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["universe",{"_index":914,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["up",{"_index":756,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"classes/Queue.html":{},"interfaces/SnapObject.html":{},"interfaces/StoredDocument.html":{},"interfaces/UserDocPermissions.html":{},"miscellaneous/typealiases.html":{}}}],["updated",{"_index":947,"title":{},"body":{"interfaces/OrganizationDocument.html":{},"interfaces/PublicOrganization.html":{}}}],["updatetov2",{"_index":1230,"title":{},"body":{"interfaces/Template.html":{}}}],["updatetov2(req",{"_index":1273,"title":{},"body":{"interfaces/Template.html":{}}}],["upload",{"_index":1447,"title":{},"body":{"index.html":{}}}],["upsert",{"_index":898,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["url",{"_index":377,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["use",{"_index":160,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/StoredDocument.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":544,"title":{},"body":{"interfaces/DeliveryContent.html":{},"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/DocWithID.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationDocument.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/PublicOrganization.html":{},"classes/Queue.html":{},"interfaces/SnapObject.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"interfaces/StoredDocument.html":{},"interfaces/UserDocPermissions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["user",{"_index":89,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/MetaTx.html":{},"interfaces/OrgProposal.html":{},"interfaces/PublicUser.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/UserProposal.html":{}}}],["user.uid",{"_index":933,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["userdoc",{"_index":901,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["userdoc.exists",{"_index":903,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["userdocpermissions",{"_index":773,"title":{"interfaces/UserDocPermissions.html":{}},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{}}}],["userdocref",{"_index":896,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["userid",{"_index":873,"title":{},"body":{"interfaces/NotificationDocument.html":{},"interfaces/NotificationOptions.html":{}}}],["userids",{"_index":948,"title":{},"body":{"interfaces/OrganizationDocument.html":{},"interfaces/PublicOrganization.html":{}}}],["userinvite",{"_index":885,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["username",{"_index":96,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["userproposal",{"_index":893,"title":{"interfaces/UserProposal.html":{}},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["userrecord",{"_index":889,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{},"miscellaneous/typealiases.html":{}}}],["users",{"_index":913,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["uses",{"_index":723,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{},"index.html":{}}}],["using",{"_index":1066,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["v",{"_index":1511,"title":{},"body":{"index.html":{}}}],["v9.10",{"_index":1390,"title":{},"body":{"index.html":{}}}],["valid",{"_index":206,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["validated",{"_index":714,"title":{},"body":{"interfaces/DeliveryDocument.html":{},"interfaces/DeliveryDocumentWithDates.html":{},"interfaces/DeliveryRaw.html":{},"interfaces/MGDeadlineRaw.html":{},"interfaces/StepDocument.html":{},"interfaces/StepDocumentWithDate.html":{},"interfaces/StepRaw.html":{}}}],["value",{"_index":15,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeployParams.html":{},"interfaces/MaterialDocument.html":{},"interfaces/MaterialRaw.html":{},"interfaces/MaterialTemplateDocument.html":{},"interfaces/MetaTx.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"miscellaneous/enumerations.html":{}}}],["values",{"_index":209,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["values.setup",{"_index":1419,"title":{},"body":{"index.html":{}}}],["variable",{"_index":570,"title":{},"body":{"interfaces/DeliveryContent.html":{},"index.html":{}}}],["variables",{"_index":1400,"title":{},"body":{"index.html":{}}}],["version",{"_index":1451,"title":{},"body":{"index.html":{}}}],["versionid",{"_index":1457,"title":{},"body":{"index.html":{}}}],["versioninfo",{"_index":457,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["vincent.appspot.com",{"_index":1484,"title":{},"body":{"index.html":{}}}],["void",{"_index":977,"title":{},"body":{"classes/Queue.html":{}}}],["w\\d",{"_index":137,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["wait",{"_index":1088,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["waiting",{"_index":289,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["wallet",{"_index":22,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["wallet.connect(provider",{"_index":108,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["wallet.frommnemonic(config.mnemonic",{"_index":104,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["want",{"_index":244,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["warning",{"_index":812,"title":{},"body":{"interfaces/EmailRequest.html":{}}}],["warranties",{"_index":1552,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1548,"title":{},"body":{"license.html":{}}}],["way",{"_index":126,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeliveryContent.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"classes/Queue.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{},"interfaces/StoredDocument.html":{}}}],["we'll",{"_index":1051,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["we're",{"_index":1195,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["what's",{"_index":755,"title":{},"body":{"interfaces/DocWithID.html":{},"interfaces/OrganizationDocPermissions.html":{},"interfaces/OrganizationPermissions.html":{},"interfaces/SnapObject.html":{},"interfaces/UserDocPermissions.html":{},"miscellaneous/typealiases.html":{}}}],["where('email",{"_index":916,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["where('name",{"_index":923,"title":{},"body":{"interfaces/OrgProposal.html":{},"interfaces/UserProposal.html":{}}}],["whether",{"_index":1563,"title":{},"body":{"license.html":{}}}],["widths",{"_index":587,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["wip",{"_index":437,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["within",{"_index":1142,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["without",{"_index":952,"title":{},"body":{"interfaces/OrganizationDocument.html":{},"interfaces/PublicOrganization.html":{},"license.html":{}}}],["withstyle",{"_index":519,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["withstyle(text",{"_index":522,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["work",{"_index":125,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationFromOrganizationToUser.html":{},"interfaces/InvitationFromUserToOrganization.html":{},"interfaces/InvitationToWorkOnDocument.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["worker",{"_index":1064,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{},"dependencies.html":{}}}],["workflow",{"_index":265,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["working",{"_index":1387,"title":{},"body":{"index.html":{}}}],["wrapper",{"_index":646,"title":{},"body":{"interfaces/DeliveryContent.html":{}}}],["writable",{"_index":982,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["writebatch",{"_index":1226,"title":{},"body":{"interfaces/Template.html":{}}}],["x",{"_index":976,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["x._nanoseconds",{"_index":1127,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["x.map(reencodeobject",{"_index":1122,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["x.path.startswith('_restore",{"_index":1030,"title":{},"body":{"classes/Queue.html":{},"interfaces/StoredDocument.html":{}}}],["xlsx",{"_index":1374,"title":{},"body":{"dependencies.html":{}}}],["year",{"_index":374,"title":{},"body":{"interfaces/Credit.html":{},"interfaces/MovieDocument.html":{},"interfaces/MovieDocumentWithDates.html":{},"interfaces/MovieFestivalPrizes.html":{},"interfaces/MovieMain.html":{},"interfaces/MoviePromotionalDescription.html":{},"interfaces/MoviePromotionalElements.html":{},"interfaces/MovieRaw.html":{},"interfaces/MovieSaleDocumentWithDates.html":{},"interfaces/MovieSaleRaw.html":{},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{},"interfaces/MovieSalesAgentDealRaw.html":{},"interfaces/MovieSalesCast.html":{},"interfaces/MovieSalesInfoDocumentWithDates.html":{},"interfaces/MovieSalesInfoRaw.html":{},"interfaces/MovieStory.html":{},"interfaces/MovieVersionInfo.html":{},"interfaces/Prize.html":{},"interfaces/PromotionalElement.html":{},"interfaces/PublicMovie.html":{},"interfaces/Title.html":{}}}],["z",{"_index":143,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["zero",{"_index":272,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["zero_address",{"_index":267,"title":{},"body":{"interfaces/BaseTx.html":{},"interfaces/DeployParams.html":{},"interfaces/MetaTx.html":{},"interfaces/RegisterParams.html":{},"interfaces/Relayer.html":{},"interfaces/RelayerConfig.html":{},"interfaces/RequestTokensParams.html":{},"interfaces/SendParams.html":{},"interfaces/SignDeliveryParams.html":{},"interfaces/SignedMetaTx.html":{}}}],["zone.js",{"_index":1376,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/BaseTx.html":{"url":"interfaces/BaseTx.html","title":"interface - BaseTx","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BaseTx\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend-functions/src/relayer.ts\n        \n\n            \n                Description\n            \n            \n                Regular Ethereum transaction \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        to\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InfuraProvider } from '@ethersproject/providers';\nimport { Wallet } from '@ethersproject/wallet';\nimport { Contract, ContractFactory } from '@ethersproject/contracts';\nimport { TransactionResponse, TransactionReceipt } from '@ethersproject/abstract-provider';\nimport { namehash } from '@ethersproject/hash';\nimport { keccak256 } from '@ethersproject/keccak256';\nimport { toUtf8Bytes } from '@ethersproject/strings';\nimport { getAddress } from '@ethersproject/address';\nimport { toASCII } from 'punycode';\nimport { abi as CREATE2_FACTORY_ABI } from './contracts/Factory2.json';\nimport { bytecode as ERC1077_BYTECODE, abi as ERC1077_ABI } from './contracts/ERC1077.json';\nimport { abi as ENS_REGISTRY_ABI } from './contracts/ENSRegistry.json';\nimport { abi as ENS_RESOLVER_ABI } from './contracts/PublicResolver.json';\nimport {abi as ORG_CONTRACT_ABI, bytecode as ORG_CONTRACT_BYTECODE } from './contracts/Organization.json';\nimport { db } from './internals/firebase';\n\ntype TxResponse = TransactionResponse;\ntype TxReceipt = TransactionReceipt;\n\nexport interface Relayer {\n  wallet: Wallet;\n  contractFactory: Contract;\n  baseEnsDomain: string;\n  namehash: string;\n  registry: Contract;\n  resolver: Contract;\n}\n\nexport interface RelayerConfig {\n  mnemonic: string;\n  network: string;\n  baseEnsDomain: string;\n  registryAddress: string;\n  resolverAddress: string;\n  factoryContract: string;\n}\n\n/** Regular Ethereum transaction */\nexport interface BaseTx {\n  to: string; // address\n  value: string; // uint256\n  data: string; // bytes\n}\n\n/** A Meta Transaction that encapsulate a regular tx (it will need a signatures before being sent)*/\nexport interface MetaTx extends BaseTx {\n  nonce: string; // uint256\n  gasPrice: string; // uint256\n  gasToken: string; // address\n  gasLimit: string; // uint256\n  operationType: string; // uint8\n}\n\n/** A Meta Transaction with the user signature (ready to be sent) */\nexport interface SignedMetaTx extends MetaTx {\n  signatures: string; // bytes\n}\nexport interface SendParams {\n  ethAddress: string;\n  tx: SignedMetaTx;\n}\n\nexport interface RequestTokensParams {\n  username: string;\n  amount: number;\n}\n\nexport interface SignDeliveryParams {\n  username: string;\n  deliveryId: string;\n  stakeholderId: string;\n}\n\nexport function initRelayer(config: RelayerConfig): Relayer {\n  let wallet = Wallet.fromMnemonic(config.mnemonic);\n  const provider = new InfuraProvider(config.network);\n\n  wallet = wallet.connect(provider);\n\n  const contractFactory = new Contract(config.factoryContract, CREATE2_FACTORY_ABI, wallet);\n  const baseEnsDomain = config.baseEnsDomain;\n  const relayerNamehash = namehash(config.baseEnsDomain);\n  const registry = new Contract(config.registryAddress, ENS_REGISTRY_ABI, wallet);\n  const resolver = new Contract(config.resolverAddress, ENS_RESOLVER_ABI, wallet);\n\n  return {\n    wallet,\n    contractFactory,\n    baseEnsDomain,\n    namehash: relayerNamehash,\n    registry,\n    resolver,\n  };\n}\n\ninterface DeployParams {\n  username: string;\n  key: string;\n  erc1077address: string;\n  orgId: string;\n}\n\ninterface RegisterParams {\n  name: string;\n  ethAddress: string;\n}\n\n// TODO issue#714 (Laurent work on a way to get those functions in only one place)\nexport function emailToEnsDomain(email: string, baseEnsDomain: string) { // !!!! there is a copy of this function in 'libs\\utils\\src\\lib\\helpers.ts'\n  return toASCII(email.split('@')[0]).toLowerCase()\n    .split('')\n    .map(char => /[^\\w\\d-.]/g.test(char) ? char.charCodeAt(0) : char) // replace every non a-z or 0-9 chars by their ASCII code : '?' -> '63'\n    .join('') + '.' + baseEnsDomain;\n}\n\n/**\n * This function precompute a contract address as defined in the EIP 1014 (Skinny Create 2)\n * @param ensDomain this is use as a salt (salt need to be unique for each user)\n * @param provider ethers provider\n */\n// TODO issue#714 (Laurent work on a way to get those functions in only one place)\nexport async function precomputeAddress(ensDomain: string, config: RelayerConfig) { // !!!! there is a copy of this function in 'libs\\utils\\src\\lib\\helpers.ts'\n  const baseName = ensDomain.split('.')[0];\n  const relayer = initRelayer(config);\n  const factoryAddress = await relayer.wallet.provider.resolveName(relayer.contractFactory.address).then(address => address.substr(2));\n  const salt = keccak256(toUtf8Bytes(baseName)).substr(2);\n  const byteCodeHash = keccak256(`0x${ERC1077_BYTECODE}`).substr(2);\n\n  const payload = `0xff${factoryAddress}${salt}${byteCodeHash}`;\n\n  return `0x${keccak256(payload).slice(-40)}`; // first 40 bytes of the hash of the payload\n}\n\n/** check if an ENS name is linked to an eth address */\nexport async function isENSNameRegistered(ensName: string, config: RelayerConfig) {\n  const relayer = initRelayer(config);\n\n  const address = await relayer.wallet.provider.resolveName(ensName); // return eth address or null\n  return !!address;\n}\n\n//---------------------------------------------------\n//                   DEPLOY\n//---------------------------------------------------\n\nexport async function relayerDeployLogic(\n  { username, key, erc1077address, orgId }: DeployParams,\n  config: RelayerConfig\n) {\n  const relayer: Relayer = initRelayer(config);\n\n  // check required params\n  if (!username || !key || !erc1077address || !orgId) {\n    throw new Error('\"username\", \"key\", \"erc1077address\", and \"orgAddress\" are mandatory parameters !');\n  }\n\n  try {\n    getAddress(key);\n    getAddress(erc1077address);\n  } catch (error) {\n    throw new Error('\"key\" and/or \"erc1077address\" should be a valid ethereum address !');\n  }\n\n  // compute needed values\n  const hash = keccak256(toUtf8Bytes(username));\n  const orgName = await db.doc(`/orgs/${orgId}`).get().then(org => org.get('name')) as string;\n  const orgEns = emailToEnsDomain(orgName.replace(' ', '-'), relayer.baseEnsDomain);\n  const orgAddress = await relayer.wallet.provider.resolveName(orgEns);\n\n  try {\n\n    const result: Record = {};\n\n    const codeAtAddress = await relayer.wallet.provider.getCode(erc1077address);\n    if (codeAtAddress === '0x') { // if there is already some code at this address : skip deploy\n      const deployTx: TxResponse = await relayer.contractFactory.deploy(\n        hash,\n        `0x${ERC1077_BYTECODE}`,\n        key.toLocaleLowerCase(),\n        orgAddress.toLocaleLowerCase(),\n      )\n\n      result['deploy'] = await deployTx.wait();\n      console.log(`(D) tx sent (deploy) : ${deployTx.hash}`);\n    }\n\n    return result;\n  } catch (error) {\n    console.error(error);\n    throw new Error(error);\n  }\n};\n\n//---------------------------------------------------\n//                   REGISTER\n//---------------------------------------------------\n\nexport async function relayerRegisterENSLogic(\n  { name, ethAddress }: RegisterParams,\n  config: RelayerConfig\n) {\n  const relayer: Relayer = initRelayer(config);\n\n  // check required params\n  if (!name || !ethAddress) {\n    throw new Error('\"name\" and \"ethAddress\" are mandatory parameters !');\n  }\n\n  try {\n    getAddress(ethAddress);\n  } catch (error) {\n    throw new Error('\"ethAddress\" should be a valid ethereum address !');\n  }\n\n  // in case name is of the form `name.blockframes.eth` we only want the first part to prevent ending with `name.blockframes.eth.blockframes.eth`\n  const [labelName] = name.split('.');\n\n  // compute needed values\n  const fullName = `${labelName}.${config.baseEnsDomain}`;\n  const hash = keccak256(toUtf8Bytes(labelName));\n\n  try {\n    /*\n    ENS registration require 3 interdependent txs to happens :\n    here are the order of the tx and their dependencies\n\n       (A) --> (B) --> (C)     // ENS workflow, (A) must complete before (B)\n\n    */\n\n    const ZERO_ADDRESS = '0x00000000000000000000000000000000000000';\n\n    const retrievedAddress = await relayer.wallet.provider.resolveName(fullName);\n    if (!!retrievedAddress && retrievedAddress !== ZERO_ADDRESS) { // if name is already link to a non-zero address : skip\n      throw new Error(`${fullName} already linked to an address (${retrievedAddress})`);\n    }\n    const result: Record = {};\n\n    // (A) register the user ens username\n    const nameOwner = await relayer.registry.owner(namehash(fullName));\n    if (nameOwner !== relayer.wallet.address) { // if name is already registered : skip registration\n      const registerTx: TxResponse = await relayer.registry.setSubnodeOwner(\n        relayer.namehash,\n        hash,\n        relayer.wallet.address,\n      );\n      result['register'] = await registerTx.wait();\n      console.log(`(A) tx sent (register) : ${registerTx.hash}`); // display tx to firebase logging\n    }\n\n    // (B) set a resolver to the ens username : require waiting for (A)\n    const resolverAddress = await relayer.registry.resolver(namehash(fullName))\n    if (resolverAddress !== relayer.resolver.address) { // if a resolver is already set : skip set resolver\n      const resolverTx: TxResponse = await relayer.registry.setResolver(\n        namehash(fullName),\n        relayer.resolver.address,\n      );\n      result['resolver']= await resolverTx.wait();\n      console.log(`(B) tx sent (setResolver) : ${resolverTx.hash}`); // display tx to firebase logging\n    }\n\n    // (C) link the erc1077 to the ens username : require waiting for (B)\n    const linkTx: TxResponse = await relayer.resolver.setAddr(\n      namehash(fullName),\n      ethAddress,\n    )\n    result['link'] = await linkTx.wait();\n    console.log(`(C) tx sent (setAddress) : ${linkTx.hash}`); // display tx to firebase logging\n    ;\n    return result;\n  } catch (error) {\n    console.error(error);\n    throw new Error(error);\n  }\n};\n\n\n\n//---------------------------------------------------\n//                   SEND\n//---------------------------------------------------\n\nexport async function relayerSendLogic(\n  { ethAddress, tx }: SendParams,\n  config: RelayerConfig\n) {\n  const relayer: Relayer = initRelayer(config);\n  // check required params\n  if (!ethAddress || !tx) {\n    throw new Error('\"ethAddress\" and \"tx\" are mandatory parameters !');\n  }\n\n  try {\n    getAddress(ethAddress);\n  } catch (error) {\n    throw new Error('\"ethAddress\" should be a valid ethereum address !');\n  }\n\n  // compute needed values\n  const erc1077 = new Contract(ethAddress, ERC1077_ABI, relayer.wallet);\n\n  // check if tx will be accepted by erc1077\n  const canExecute: boolean = await erc1077.functions.canExecute(\n    tx.to,\n    tx.value,\n    tx.data,\n    tx.nonce,\n    tx.gasPrice,\n    tx.gasToken,\n    tx.gasLimit,\n    tx.operationType,\n    tx.signatures\n  );\n\n  if (!canExecute) {\n    console.log(tx);\n    throw new Error(\n      'The transaction has not been sent because it will be be rejected by the ERC1077, this is probably a nonce or signatures problem.'\n    );\n  }\n\n  const sendTx = await erc1077.functions.executeSigned(\n    tx.to,\n    tx.value,\n    tx.data,\n    tx.nonce,\n    tx.gasPrice,\n    tx.gasToken,\n    tx.gasLimit,\n    tx.operationType,\n    tx.signatures\n  );\n  console.log(`tx sent (executeSigned) : ${sendTx.hash}`); // display tx to firebase logging\n\n  const txReceipt = await sendTx.wait();\n  return txReceipt;\n};\n\n//---------------------------------------------------\n//               DEPLOY ORG CONTRACT\n//---------------------------------------------------\n\nexport async function relayerDeployOrganizationLogic(\n  adminAddress: string,\n  config: RelayerConfig\n) {\n  const relayer: Relayer = initRelayer(config);\n  // check required params\n  if (!adminAddress) {\n    throw new Error('\"adminAddress\" is a mandatory parameters !');\n  }\n\n  try {\n    getAddress(adminAddress);\n  } catch (error) {\n    throw new Error('\"adminAddress\" should be a valid ethereum address !');\n  }\n\n  const organizationFactory = new ContractFactory(ORG_CONTRACT_ABI, ORG_CONTRACT_BYTECODE, relayer.wallet);\n  const contract = await organizationFactory.deploy(adminAddress);\n  console.log(`tx sent (deployOrganization) : ${contract.deployTransaction.hash}`); // display tx to firebase logging\n  await contract.deployed();\n  return contract.address;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Credit.html":{"url":"interfaces/Credit.html","title":"interface - Credit","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Credit\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/movie/src/lib/movie/+state/movie.firestore.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        creditRole\n                                \n                                \n                                        firstName\n                                \n                                \n                                            Optional\n                                        lastName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        creditRole\n                                    \n                                \n                                \n                                    \n                                        creditRole:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DateRangeRaw } from \"@blockframes/utils/date-range\";\nimport { firestore } from \"firebase/app\";\n\ntype Timestamp = firestore.Timestamp;\n\nexport interface MovieVersionInfo {\n  dubbings: string[],\n  subtitles: string[],\n}\n\ninterface MovieSalesAgentDealRaw {\n  rights: DateRangeRaw;\n  territories: string[],\n  medias: string[],\n}\n\nexport interface MovieSalesAgentDealDocumentWithDates extends MovieSalesAgentDealRaw {\n}\n\nexport interface MoviePromotionalDescription {\n  keyAssets: string[],\n  keywords: string[],\n}\n\nexport interface Prize {\n  name: string,\n  year: number,\n  prize?: string,\n}\n\nexport interface PromotionalElement {\n  label: string,\n  url: string\n}\n\nexport interface MoviePromotionalElements {\n  images: string[],\n  promotionalElements: PromotionalElement[],\n}\n\nexport interface Title {\n  original: string;\n  international?: string;\n}\n\nexport interface Credit {\n  firstName: string,\n  lastName?: string,\n  creditRole?: string,\n}\n\nexport interface MovieStory {\n  synopsis: string,\n  logline: string,\n}\n\nexport interface MovieSalesCast {\n  credits: Credit[],\n}\n\nexport interface MovieFestivalPrizes {\n  prizes: Prize[]\n}\n\ninterface MovieSaleRaw {\n  operatorName: string;\n  showOperatorName: boolean; //@todo #581 Promotional Distribution Deal\n  rights: DateRangeRaw;\n  territories: string[];\n  medias: string[];\n  dubbings: string[];\n  subtitles: string[];\n  exclusive: boolean;\n  price: number;\n}\n\nexport interface MovieSaleDocumentWithDates extends MovieSaleRaw {\n}\n\nexport interface MovieMain {\n  internalRef?: string,\n  isan?: string,\n  title: Title,\n  directors?: Credit[],\n  poster?: string,\n  productionYear?: number,\n  genres?: string[],\n  originCountries?: string[],\n  languages?: string[],\n  status?: string,\n  productionCompanies?: Credit[],\n  length?: number,\n  shortSynopsis?: string,\n}\n\ninterface MovieSalesInfoRaw {\n  scoring: string,\n  color: string,\n  europeanQualification: boolean,\n  pegi: string,\n  certifications: string[],\n  internationalPremiere: Prize,\n  originCountryReleaseDate: D,\n  broadcasterCoproducers: string[],\n}\n\nexport interface MovieSalesInfoDocumentWithDates extends MovieSalesInfoRaw {\n}\n\n/** Generic interface of a Movie */\ninterface MovieRaw {\n  // @todo #643 add new fields to Draw.io\n  _type: 'movies';\n  id: string;\n\n  // @todo #643 not main movie attributes WIP\n\n  deliveryIds: string[];\n  ipId?: string;\n  directorNote?: string;\n  producerNote?: string;\n  goalBudget?: number;\n  movieCurrency?: string;\n  fundedBudget?: number;\n  breakeven?: number;\n  backendProfit?: number;\n  potentialRevenues?: number;\n  selectionCategories?: string;\n\n  // Sections\n  sales: MovieSaleRaw[]; //@todo 581 => move to subcollection\n  main: MovieMain;\n  story: MovieStory;\n  promotionalElements: MoviePromotionalElements;\n  promotionalDescription: MoviePromotionalDescription;\n  salesCast: MovieSalesCast;\n  salesInfo: MovieSalesInfoRaw;\n  versionInfo: MovieVersionInfo;\n  festivalPrizes: MovieFestivalPrizes;\n  salesAgentDeal: MovieSalesAgentDealRaw;\n}\n\n/** Document model of a Movie */\nexport interface MovieDocument extends MovieRaw {\n}\n\n/** Document model of a Movie with Dates (type Date) */\nexport interface MovieDocumentWithDates extends MovieRaw {\n}\n\n/** Public interface of a movie (to notifications). */\nexport interface PublicMovie {\n  id: string;\n  title: Title;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DeliveryContent.html":{"url":"interfaces/DeliveryContent.html","title":"interface - DeliveryContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DeliveryContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend-functions/src/internals/pdf.ts\n        \n\n            \n                Description\n            \n            \n                Internal type expected by the pdf generation for delivery.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        materials\n                                \n                                \n                                        orgs\n                                \n                                \n                                        steps\n                                \n                                \n                                        txID\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        materials\n                                    \n                                \n                                \n                                    \n                                        materials:         MaterialDocument[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MaterialDocument[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orgs\n                                    \n                                \n                                \n                                    \n                                        orgs:         IDMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDMap\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        steps\n                                    \n                                \n                                \n                                    \n                                        steps:         IDMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDMap\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        txID\n                                    \n                                \n                                \n                                    \n                                        txID:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { groupBy, sortBy, isEmpty } from 'lodash';\nimport {\n  asIDMap,\n  DeliveryDocument,\n  IDMap,\n  MaterialDocument,\n  OrganizationDocument,\n  StepDocumentWithDate,\n  convertStepDocumentToStepDocumentWithDate,\n  StakeholderDocument\n} from '../data/types';\nimport { getCollection, getDocument } from '../data/internals';\n\nconst PdfPrinter = require('pdfmake');\n\n// Types\n// =====\n\n/**\n * Internal type expected by the pdf generation for delivery.\n */\ninterface DeliveryContent {\n  txID: { [stakeholderID: string]: string };\n  orgs: IDMap;\n  steps: IDMap;\n  materials: MaterialDocument[];\n}\n\n// Constants for styles & fonts\n// ============================\nconst FONTS = {\n  Helvetica: {\n    normal: 'Helvetica',\n    bold: 'Helvetica-Bold',\n    italics: 'Helvetica-Oblique',\n    bolditalics: 'Helvetica-BoldOblique'\n  }\n};\n\nconst STYLE_HEADER = 'header';\nconst STYLE_SUBHEADER = 'subheader';\nconst STYLE_DESCRIPTION = 'description';\nconst STYLE_BOLD = 'bold';\nconst STYLE_TABLE_MATERIALS = 'styleTableMaterials';\n\n// Helpers\n// -------\n\nconst withStyle = (text: string, style: string): any => ({\n  text,\n  style\n});\n\nconst header = (text: string) => withStyle(text, STYLE_HEADER);\nconst subHeader = (text: string) => withStyle(text, STYLE_SUBHEADER);\nconst description = (text: string) => withStyle(text, STYLE_DESCRIPTION);\nconst bold = (text: string) => withStyle(text, STYLE_BOLD);\n\nconst center = (content: string | { [k: string]: any }): any => {\n  if (typeof content === typeof 'string') {\n    return { text: content, alignment: 'center' };\n  } else {\n    // @ts-ignore: TODO: debug this switch\n    return { ...content, alignment: 'center' };\n  }\n};\n\n// PDF Generation\n// ==============\n\n// These functions take our blockframes model and generate data the pdf rendering.\n\n/**\n * Render a list of orgs / stakeholders\n *\n * This returns the PDFMake columns:\n * ```\n * ## Stakeholders\n *\n * | OrgName      | OrgName      | OrgName      | OrgName      |\n * | orgAddress   | orgAddress   | orgAddress   | orgAddress   |\n * ```\n *\n * The parameter orgIds is used to enforce a certain order.\n *\n * @param orgIds\n * @param orgs\n */\nfunction rowOrganizations(orgIds: string[], orgs: IDMap): any {\n  const columns: any = orgIds.map((id: string) => {\n    const org = orgs[id];\n    return [subHeader(org.name), description(org.officeAddress)];\n  });\n  return [\n    header('Stakeholders'),\n    {\n      alignment: 'center',\n      columns\n    }\n  ];\n}\n\n/**\n * Render a list of material, assumes they are all in the same category.\n *\n * This returns the PDFMake table:\n * ```\n *    +---------------------------------------+------+\n *    | material value                        | step |\n *    | Material description                  |      |\n *    +---------------------------------------+------+\n *    | material value                        | step |\n *    | Material description                  |      |\n *    +---------------------------------------+------+\n *    | material value                        | step |\n *    | Material description                  |      |\n *    +---------------------------------------+------+\n * ```\n *\n * @param materials\n * @param steps\n */\nfunction rowMaterials(\n  materials: MaterialDocument[],\n  steps: { [id: string]: StepDocumentWithDate }\n): any {\n  // NOTE: pdfmake side-effect over the data provided, we can reuse the same objects\n  // multiple time, we have to keep this variable definition INSIDE the forEach.\n  const tableHeader = [bold('material'), center(bold('step'))];\n\n  const tableBody = materials.map(material => [\n    [bold(material.value), description(material.description)],\n    center({\n      text: material.stepId ? steps[material.stepId].name : '',\n      margin: [0, 4, 0, 0]\n    })\n  ]);\n\n  return {\n    style: STYLE_TABLE_MATERIALS,\n    table: {\n      headerRows: 1,\n      widths: ['80%', '20%'],\n      body: [[...tableHeader], ...tableBody]\n    }\n  };\n}\n\n/**\n * Render a list of materials, grouped by category.\n *\n * This returns the PDFMake list of tables:\n *\n * ```\n * ## Category1\n *\n *    +---------------------------------------+------+\n *    | material value                        | step |\n *    | Material description                  |      |\n *    +---------------------------------------+------+\n *    | material value                        | step |\n *    | Material description                  |      |\n *    +---------------------------------------+------+\n *    | material value                        | step |\n *    | Material description                  |      |\n *    +---------------------------------------+------+\n *\n * ## Category2\n *\n *    +---------------------------------------+------+\n *    | material value                        | step |\n *    | Material description                  |      |\n *    +---------------------------------------+------+\n * ```\n *\n * @param materials\n * @param steps\n */\nfunction rowMaterialsPerCategory(\n  materials: MaterialDocument[],\n  steps: { [id: string]: StepDocumentWithDate }\n): any {\n  const materialsPerCategory = groupBy(\n    materials,\n    (material: MaterialDocument) => material.category\n  );\n  const categories = sortBy(Object.keys(materialsPerCategory));\n\n  const tables: any[] = [];\n\n  categories.forEach(category => {\n    tables.push(subHeader(category));\n    tables.push(rowMaterials(materialsPerCategory[category], steps));\n  });\n\n  return [header('Materials'), ...tables];\n}\n\n/**\n * Render a list of orgs' transactions ids as QR codes\n *\n * This returns the PDFMake columns:\n * ```\n * ## Signatures\n *\n * | OrgName      | OrgName      | OrgName      | OrgName      |\n * | ▒ tx QR Code | ▒ tx QR Code | ▒ tx QR Code | ▒ tx QR Code |\n * ```\n *\n * The parameter orgIds is used to enforce a certain order.\n\n *\n * @param organizationIds\n * @param organizations\n * @param txID\n */\nfunction rowSignatures(\n  organizationIds: string[],\n  organizations: { [id: string]: OrganizationDocument },\n  txID: { [orgId: string]: string }\n): any {\n  if (isEmpty(txID)) {\n    return [];\n  }\n\n  const columns = organizationIds.map((id: string) => {\n    const stakeholder = organizations[id];\n    const tx = txID[id];\n\n    return [bold(stakeholder.name), { qr: tx, fit: '100' }];\n  });\n\n  return [\n    header('Signatures'),\n    {\n      alignment: 'center',\n      columns\n    }\n  ];\n}\n\n/**\n * Render a delivery, its stakeholders, transactions and materials into a PDF document.\n *\n * @param txID\n * @param orgs\n * @param materials\n * @param steps\n */\nexport function buildDeliveryPDF({ txID, orgs, materials, steps }: DeliveryContent) {\n  // We store keys first to make sure order is preserved along the way\n  const orgsIds = Object.keys(orgs);\n\n  const docDefinition = {\n    content: [\n      ...rowOrganizations(orgsIds, orgs),\n      ...rowMaterialsPerCategory(materials, steps),\n      ...rowSignatures(orgsIds, orgs, txID)\n    ],\n    defaultStyle: {\n      font: 'Helvetica'\n    },\n    styles: {\n      [STYLE_TABLE_MATERIALS]: {\n        margin: [5, 5, 5, 5]\n      },\n      [STYLE_HEADER]: {\n        fontSize: 18,\n        bold: true,\n        margin: [5, 20, 5, 5]\n      },\n      [STYLE_SUBHEADER]: {\n        fontSize: 14,\n        bold: true,\n        margin: [5, 10, 5, 5]\n      },\n      [STYLE_DESCRIPTION]: {\n        fontSize: 10,\n        italics: true\n      },\n      [STYLE_BOLD]: {\n        bold: true\n      }\n    }\n  };\n  const printer = new PdfPrinter(FONTS);\n  return printer.createPdfKitDocument(docDefinition);\n}\n\n/**\n * Handle firebase requests to generate the PDF of a delivery.\n *\n * Wrapper around buildDeliveryPDF,\n * handles firebase request, loads the delivery data from firestore\n * and pipe the PDF to the express response.\n *\n * @param req   express requests, expects `deliveryId` in the query parameters.\n * @param resp  express response, we will feed it with the pdf content.\n */\nexport async function onGenerateDeliveryPDFRequest(req: any, resp: any) {\n  const deliveryId: string = req.query.deliveryId;\n\n  // TODO: factor out the data layer\n  const delivery = await getDocument(`deliveries/${deliveryId}`);\n  const stakeholders = await getCollection(\n    `deliveries/${deliveryId}/stakeholders`\n  );\n\n  const orgs = await Promise.all(\n    stakeholders.map(({ id }) => getDocument(`orgs/${id}`))\n  );\n\n  const materials = await getCollection(`deliveries/${deliveryId}/materials`);\n\n  const steps = asIDMap(convertStepDocumentToStepDocumentWithDate(delivery.steps));\n\n  const pdf = buildDeliveryPDF({ orgs: asIDMap(orgs), materials, steps, txID: {} });\n  pdf.pipe(resp);\n  pdf.end();\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DeliveryDocument.html":{"url":"interfaces/DeliveryDocument.html","title":"interface - DeliveryDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DeliveryDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/material/src/lib/delivery/+state/delivery.firestore.ts\n        \n\n            \n                Description\n            \n            \n                Document model of a delivery \n\n            \n\n            \n                Extends\n            \n            \n                        DeliveryRaw\n            \n\n\n\n\n    \n\n\n    \n        import { default as staticModels } from '@blockframes/movie/movie/static-model/staticModels';\nimport { firestore } from 'firebase';\n\nexport type Timestamp = firestore.Timestamp;\nexport type CurrencyCode = ((typeof staticModels)['MOVIE_CURRENCIES'])[number]['code'];\n\nexport const enum DeliveryStatus {\n  negociation = 'Delivery in negotiation',\n  pending = 'Materials pending',\n  noa = 'Notice of Availability',\n  nod = 'Notice of Delivery',\n  accepted = 'Materials accepted'\n}\n\n/** This is a Minimum Guarantee deadline, can be used to interact with the frontend (D = Date) or backend (D = Timestamp). */\nexport interface MGDeadlineRaw {\n  percentage: number;\n  date?: D;\n  label: string;\n}\n\n/** The Step of a given delivery, can be used to interact with the frontend (D = Date) or backend (D = Timestamp). */\ninterface StepRaw {\n  id: string;\n  name: string;\n  date?: D | null;\n}\n\n/** A given delivery, can be used to interact with the frontend (D = Date) or backend (D = Timestamp). */\ninterface DeliveryRaw {\n  id: string;\n  _type: 'deliveries';\n  isPaid: boolean;\n  movieId: string;\n  mustChargeMaterials?: boolean;\n  mustBeSigned?: boolean;\n  status: DeliveryStatus;\n  dueDate?: D;\n  /** Time to accept a material */\n  acceptationPeriod?: number;\n  /** Time to return a refused material */\n  reWorkingPeriod?: number;\n  mgAmount?: number;\n  mgCurrency?: CurrencyCode;\n  mgDeadlines?: MGDeadlineRaw[];\n  steps: StepRaw[];\n  validated: string[]; // Stakeholder.id[];\n  mgCurrentDeadline?: number;\n  isSigned?: boolean;\n  processedId?: string;\n}\n\n/** Document model of a delivery */\nexport interface DeliveryDocument extends DeliveryRaw {\n}\n\nexport interface DeliveryDocumentWithDates extends DeliveryRaw {\n}\n\n/** Document model of a Step */\nexport interface StepDocument extends StepRaw {}\n\n/** Document model of a Step with dates typed in Date. */\nexport interface StepDocumentWithDate extends StepRaw {}\n\n/** Convert a StepDocument to a Step (that uses Date). */\nexport function convertStepDocumentToStepDocumentWithDate(steps: StepDocument[]): StepDocumentWithDate[] {\n  if (!steps) {\n    return [];\n  }\n\n  return steps.map(step => {\n    if (!!step.date) {\n      return { ...step, date: step.date.toDate() };\n    } else {\n      return { ...step, date: null}\n    }\n  });\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DeliveryDocumentWithDates.html":{"url":"interfaces/DeliveryDocumentWithDates.html","title":"interface - DeliveryDocumentWithDates","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DeliveryDocumentWithDates\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/material/src/lib/delivery/+state/delivery.firestore.ts\n        \n\n\n            \n                Extends\n            \n            \n                        DeliveryRaw\n            \n\n\n\n\n    \n\n\n    \n        import { default as staticModels } from '@blockframes/movie/movie/static-model/staticModels';\nimport { firestore } from 'firebase';\n\nexport type Timestamp = firestore.Timestamp;\nexport type CurrencyCode = ((typeof staticModels)['MOVIE_CURRENCIES'])[number]['code'];\n\nexport const enum DeliveryStatus {\n  negociation = 'Delivery in negotiation',\n  pending = 'Materials pending',\n  noa = 'Notice of Availability',\n  nod = 'Notice of Delivery',\n  accepted = 'Materials accepted'\n}\n\n/** This is a Minimum Guarantee deadline, can be used to interact with the frontend (D = Date) or backend (D = Timestamp). */\nexport interface MGDeadlineRaw {\n  percentage: number;\n  date?: D;\n  label: string;\n}\n\n/** The Step of a given delivery, can be used to interact with the frontend (D = Date) or backend (D = Timestamp). */\ninterface StepRaw {\n  id: string;\n  name: string;\n  date?: D | null;\n}\n\n/** A given delivery, can be used to interact with the frontend (D = Date) or backend (D = Timestamp). */\ninterface DeliveryRaw {\n  id: string;\n  _type: 'deliveries';\n  isPaid: boolean;\n  movieId: string;\n  mustChargeMaterials?: boolean;\n  mustBeSigned?: boolean;\n  status: DeliveryStatus;\n  dueDate?: D;\n  /** Time to accept a material */\n  acceptationPeriod?: number;\n  /** Time to return a refused material */\n  reWorkingPeriod?: number;\n  mgAmount?: number;\n  mgCurrency?: CurrencyCode;\n  mgDeadlines?: MGDeadlineRaw[];\n  steps: StepRaw[];\n  validated: string[]; // Stakeholder.id[];\n  mgCurrentDeadline?: number;\n  isSigned?: boolean;\n  processedId?: string;\n}\n\n/** Document model of a delivery */\nexport interface DeliveryDocument extends DeliveryRaw {\n}\n\nexport interface DeliveryDocumentWithDates extends DeliveryRaw {\n}\n\n/** Document model of a Step */\nexport interface StepDocument extends StepRaw {}\n\n/** Document model of a Step with dates typed in Date. */\nexport interface StepDocumentWithDate extends StepRaw {}\n\n/** Convert a StepDocument to a Step (that uses Date). */\nexport function convertStepDocumentToStepDocumentWithDate(steps: StepDocument[]): StepDocumentWithDate[] {\n  if (!steps) {\n    return [];\n  }\n\n  return steps.map(step => {\n    if (!!step.date) {\n      return { ...step, date: step.date.toDate() };\n    } else {\n      return { ...step, date: null}\n    }\n  });\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DeliveryRaw.html":{"url":"interfaces/DeliveryRaw.html","title":"interface - DeliveryRaw","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DeliveryRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/material/src/lib/delivery/+state/delivery.firestore.ts\n        \n\n            \n                Description\n            \n            \n                A given delivery, can be used to interact with the frontend (D = Date) or backend (D = Timestamp). \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _type\n                                \n                                \n                                            Optional\n                                        acceptationPeriod\n                                \n                                \n                                            Optional\n                                        dueDate\n                                \n                                \n                                        id\n                                \n                                \n                                        isPaid\n                                \n                                \n                                            Optional\n                                        isSigned\n                                \n                                \n                                            Optional\n                                        mgAmount\n                                \n                                \n                                            Optional\n                                        mgCurrency\n                                \n                                \n                                            Optional\n                                        mgCurrentDeadline\n                                \n                                \n                                            Optional\n                                        mgDeadlines\n                                \n                                \n                                        movieId\n                                \n                                \n                                            Optional\n                                        mustBeSigned\n                                \n                                \n                                            Optional\n                                        mustChargeMaterials\n                                \n                                \n                                            Optional\n                                        processedId\n                                \n                                \n                                            Optional\n                                        reWorkingPeriod\n                                \n                                \n                                        status\n                                \n                                \n                                        steps\n                                \n                                \n                                        validated\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _type\n                                    \n                                \n                                \n                                    \n                                        _type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        acceptationPeriod\n                                    \n                                \n                                \n                                    \n                                        acceptationPeriod:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Time to accept a material \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dueDate\n                                    \n                                \n                                \n                                    \n                                        dueDate:     D\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     D\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isPaid\n                                    \n                                \n                                \n                                    \n                                        isPaid:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isSigned\n                                    \n                                \n                                \n                                    \n                                        isSigned:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mgAmount\n                                    \n                                \n                                \n                                    \n                                        mgAmount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mgCurrency\n                                    \n                                \n                                \n                                    \n                                        mgCurrency:         CurrencyCode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CurrencyCode\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mgCurrentDeadline\n                                    \n                                \n                                \n                                    \n                                        mgCurrentDeadline:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mgDeadlines\n                                    \n                                \n                                \n                                    \n                                        mgDeadlines:         MGDeadlineRaw[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MGDeadlineRaw[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        movieId\n                                    \n                                \n                                \n                                    \n                                        movieId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mustBeSigned\n                                    \n                                \n                                \n                                    \n                                        mustBeSigned:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mustChargeMaterials\n                                    \n                                \n                                \n                                    \n                                        mustChargeMaterials:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        processedId\n                                    \n                                \n                                \n                                    \n                                        processedId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reWorkingPeriod\n                                    \n                                \n                                \n                                    \n                                        reWorkingPeriod:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Time to return a refused material \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         DeliveryStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DeliveryStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        steps\n                                    \n                                \n                                \n                                    \n                                        steps:         StepRaw[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StepRaw[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validated\n                                    \n                                \n                                \n                                    \n                                        validated:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { default as staticModels } from '@blockframes/movie/movie/static-model/staticModels';\nimport { firestore } from 'firebase';\n\nexport type Timestamp = firestore.Timestamp;\nexport type CurrencyCode = ((typeof staticModels)['MOVIE_CURRENCIES'])[number]['code'];\n\nexport const enum DeliveryStatus {\n  negociation = 'Delivery in negotiation',\n  pending = 'Materials pending',\n  noa = 'Notice of Availability',\n  nod = 'Notice of Delivery',\n  accepted = 'Materials accepted'\n}\n\n/** This is a Minimum Guarantee deadline, can be used to interact with the frontend (D = Date) or backend (D = Timestamp). */\nexport interface MGDeadlineRaw {\n  percentage: number;\n  date?: D;\n  label: string;\n}\n\n/** The Step of a given delivery, can be used to interact with the frontend (D = Date) or backend (D = Timestamp). */\ninterface StepRaw {\n  id: string;\n  name: string;\n  date?: D | null;\n}\n\n/** A given delivery, can be used to interact with the frontend (D = Date) or backend (D = Timestamp). */\ninterface DeliveryRaw {\n  id: string;\n  _type: 'deliveries';\n  isPaid: boolean;\n  movieId: string;\n  mustChargeMaterials?: boolean;\n  mustBeSigned?: boolean;\n  status: DeliveryStatus;\n  dueDate?: D;\n  /** Time to accept a material */\n  acceptationPeriod?: number;\n  /** Time to return a refused material */\n  reWorkingPeriod?: number;\n  mgAmount?: number;\n  mgCurrency?: CurrencyCode;\n  mgDeadlines?: MGDeadlineRaw[];\n  steps: StepRaw[];\n  validated: string[]; // Stakeholder.id[];\n  mgCurrentDeadline?: number;\n  isSigned?: boolean;\n  processedId?: string;\n}\n\n/** Document model of a delivery */\nexport interface DeliveryDocument extends DeliveryRaw {\n}\n\nexport interface DeliveryDocumentWithDates extends DeliveryRaw {\n}\n\n/** Document model of a Step */\nexport interface StepDocument extends StepRaw {}\n\n/** Document model of a Step with dates typed in Date. */\nexport interface StepDocumentWithDate extends StepRaw {}\n\n/** Convert a StepDocument to a Step (that uses Date). */\nexport function convertStepDocumentToStepDocumentWithDate(steps: StepDocument[]): StepDocumentWithDate[] {\n  if (!steps) {\n    return [];\n  }\n\n  return steps.map(step => {\n    if (!!step.date) {\n      return { ...step, date: step.date.toDate() };\n    } else {\n      return { ...step, date: null}\n    }\n  });\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DeployParams.html":{"url":"interfaces/DeployParams.html","title":"interface - DeployParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DeployParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend-functions/src/relayer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        erc1077address\n                                \n                                \n                                        key\n                                \n                                \n                                        orgId\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        erc1077address\n                                    \n                                \n                                \n                                    \n                                        erc1077address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orgId\n                                    \n                                \n                                \n                                    \n                                        orgId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InfuraProvider } from '@ethersproject/providers';\nimport { Wallet } from '@ethersproject/wallet';\nimport { Contract, ContractFactory } from '@ethersproject/contracts';\nimport { TransactionResponse, TransactionReceipt } from '@ethersproject/abstract-provider';\nimport { namehash } from '@ethersproject/hash';\nimport { keccak256 } from '@ethersproject/keccak256';\nimport { toUtf8Bytes } from '@ethersproject/strings';\nimport { getAddress } from '@ethersproject/address';\nimport { toASCII } from 'punycode';\nimport { abi as CREATE2_FACTORY_ABI } from './contracts/Factory2.json';\nimport { bytecode as ERC1077_BYTECODE, abi as ERC1077_ABI } from './contracts/ERC1077.json';\nimport { abi as ENS_REGISTRY_ABI } from './contracts/ENSRegistry.json';\nimport { abi as ENS_RESOLVER_ABI } from './contracts/PublicResolver.json';\nimport {abi as ORG_CONTRACT_ABI, bytecode as ORG_CONTRACT_BYTECODE } from './contracts/Organization.json';\nimport { db } from './internals/firebase';\n\ntype TxResponse = TransactionResponse;\ntype TxReceipt = TransactionReceipt;\n\nexport interface Relayer {\n  wallet: Wallet;\n  contractFactory: Contract;\n  baseEnsDomain: string;\n  namehash: string;\n  registry: Contract;\n  resolver: Contract;\n}\n\nexport interface RelayerConfig {\n  mnemonic: string;\n  network: string;\n  baseEnsDomain: string;\n  registryAddress: string;\n  resolverAddress: string;\n  factoryContract: string;\n}\n\n/** Regular Ethereum transaction */\nexport interface BaseTx {\n  to: string; // address\n  value: string; // uint256\n  data: string; // bytes\n}\n\n/** A Meta Transaction that encapsulate a regular tx (it will need a signatures before being sent)*/\nexport interface MetaTx extends BaseTx {\n  nonce: string; // uint256\n  gasPrice: string; // uint256\n  gasToken: string; // address\n  gasLimit: string; // uint256\n  operationType: string; // uint8\n}\n\n/** A Meta Transaction with the user signature (ready to be sent) */\nexport interface SignedMetaTx extends MetaTx {\n  signatures: string; // bytes\n}\nexport interface SendParams {\n  ethAddress: string;\n  tx: SignedMetaTx;\n}\n\nexport interface RequestTokensParams {\n  username: string;\n  amount: number;\n}\n\nexport interface SignDeliveryParams {\n  username: string;\n  deliveryId: string;\n  stakeholderId: string;\n}\n\nexport function initRelayer(config: RelayerConfig): Relayer {\n  let wallet = Wallet.fromMnemonic(config.mnemonic);\n  const provider = new InfuraProvider(config.network);\n\n  wallet = wallet.connect(provider);\n\n  const contractFactory = new Contract(config.factoryContract, CREATE2_FACTORY_ABI, wallet);\n  const baseEnsDomain = config.baseEnsDomain;\n  const relayerNamehash = namehash(config.baseEnsDomain);\n  const registry = new Contract(config.registryAddress, ENS_REGISTRY_ABI, wallet);\n  const resolver = new Contract(config.resolverAddress, ENS_RESOLVER_ABI, wallet);\n\n  return {\n    wallet,\n    contractFactory,\n    baseEnsDomain,\n    namehash: relayerNamehash,\n    registry,\n    resolver,\n  };\n}\n\ninterface DeployParams {\n  username: string;\n  key: string;\n  erc1077address: string;\n  orgId: string;\n}\n\ninterface RegisterParams {\n  name: string;\n  ethAddress: string;\n}\n\n// TODO issue#714 (Laurent work on a way to get those functions in only one place)\nexport function emailToEnsDomain(email: string, baseEnsDomain: string) { // !!!! there is a copy of this function in 'libs\\utils\\src\\lib\\helpers.ts'\n  return toASCII(email.split('@')[0]).toLowerCase()\n    .split('')\n    .map(char => /[^\\w\\d-.]/g.test(char) ? char.charCodeAt(0) : char) // replace every non a-z or 0-9 chars by their ASCII code : '?' -> '63'\n    .join('') + '.' + baseEnsDomain;\n}\n\n/**\n * This function precompute a contract address as defined in the EIP 1014 (Skinny Create 2)\n * @param ensDomain this is use as a salt (salt need to be unique for each user)\n * @param provider ethers provider\n */\n// TODO issue#714 (Laurent work on a way to get those functions in only one place)\nexport async function precomputeAddress(ensDomain: string, config: RelayerConfig) { // !!!! there is a copy of this function in 'libs\\utils\\src\\lib\\helpers.ts'\n  const baseName = ensDomain.split('.')[0];\n  const relayer = initRelayer(config);\n  const factoryAddress = await relayer.wallet.provider.resolveName(relayer.contractFactory.address).then(address => address.substr(2));\n  const salt = keccak256(toUtf8Bytes(baseName)).substr(2);\n  const byteCodeHash = keccak256(`0x${ERC1077_BYTECODE}`).substr(2);\n\n  const payload = `0xff${factoryAddress}${salt}${byteCodeHash}`;\n\n  return `0x${keccak256(payload).slice(-40)}`; // first 40 bytes of the hash of the payload\n}\n\n/** check if an ENS name is linked to an eth address */\nexport async function isENSNameRegistered(ensName: string, config: RelayerConfig) {\n  const relayer = initRelayer(config);\n\n  const address = await relayer.wallet.provider.resolveName(ensName); // return eth address or null\n  return !!address;\n}\n\n//---------------------------------------------------\n//                   DEPLOY\n//---------------------------------------------------\n\nexport async function relayerDeployLogic(\n  { username, key, erc1077address, orgId }: DeployParams,\n  config: RelayerConfig\n) {\n  const relayer: Relayer = initRelayer(config);\n\n  // check required params\n  if (!username || !key || !erc1077address || !orgId) {\n    throw new Error('\"username\", \"key\", \"erc1077address\", and \"orgAddress\" are mandatory parameters !');\n  }\n\n  try {\n    getAddress(key);\n    getAddress(erc1077address);\n  } catch (error) {\n    throw new Error('\"key\" and/or \"erc1077address\" should be a valid ethereum address !');\n  }\n\n  // compute needed values\n  const hash = keccak256(toUtf8Bytes(username));\n  const orgName = await db.doc(`/orgs/${orgId}`).get().then(org => org.get('name')) as string;\n  const orgEns = emailToEnsDomain(orgName.replace(' ', '-'), relayer.baseEnsDomain);\n  const orgAddress = await relayer.wallet.provider.resolveName(orgEns);\n\n  try {\n\n    const result: Record = {};\n\n    const codeAtAddress = await relayer.wallet.provider.getCode(erc1077address);\n    if (codeAtAddress === '0x') { // if there is already some code at this address : skip deploy\n      const deployTx: TxResponse = await relayer.contractFactory.deploy(\n        hash,\n        `0x${ERC1077_BYTECODE}`,\n        key.toLocaleLowerCase(),\n        orgAddress.toLocaleLowerCase(),\n      )\n\n      result['deploy'] = await deployTx.wait();\n      console.log(`(D) tx sent (deploy) : ${deployTx.hash}`);\n    }\n\n    return result;\n  } catch (error) {\n    console.error(error);\n    throw new Error(error);\n  }\n};\n\n//---------------------------------------------------\n//                   REGISTER\n//---------------------------------------------------\n\nexport async function relayerRegisterENSLogic(\n  { name, ethAddress }: RegisterParams,\n  config: RelayerConfig\n) {\n  const relayer: Relayer = initRelayer(config);\n\n  // check required params\n  if (!name || !ethAddress) {\n    throw new Error('\"name\" and \"ethAddress\" are mandatory parameters !');\n  }\n\n  try {\n    getAddress(ethAddress);\n  } catch (error) {\n    throw new Error('\"ethAddress\" should be a valid ethereum address !');\n  }\n\n  // in case name is of the form `name.blockframes.eth` we only want the first part to prevent ending with `name.blockframes.eth.blockframes.eth`\n  const [labelName] = name.split('.');\n\n  // compute needed values\n  const fullName = `${labelName}.${config.baseEnsDomain}`;\n  const hash = keccak256(toUtf8Bytes(labelName));\n\n  try {\n    /*\n    ENS registration require 3 interdependent txs to happens :\n    here are the order of the tx and their dependencies\n\n       (A) --> (B) --> (C)     // ENS workflow, (A) must complete before (B)\n\n    */\n\n    const ZERO_ADDRESS = '0x00000000000000000000000000000000000000';\n\n    const retrievedAddress = await relayer.wallet.provider.resolveName(fullName);\n    if (!!retrievedAddress && retrievedAddress !== ZERO_ADDRESS) { // if name is already link to a non-zero address : skip\n      throw new Error(`${fullName} already linked to an address (${retrievedAddress})`);\n    }\n    const result: Record = {};\n\n    // (A) register the user ens username\n    const nameOwner = await relayer.registry.owner(namehash(fullName));\n    if (nameOwner !== relayer.wallet.address) { // if name is already registered : skip registration\n      const registerTx: TxResponse = await relayer.registry.setSubnodeOwner(\n        relayer.namehash,\n        hash,\n        relayer.wallet.address,\n      );\n      result['register'] = await registerTx.wait();\n      console.log(`(A) tx sent (register) : ${registerTx.hash}`); // display tx to firebase logging\n    }\n\n    // (B) set a resolver to the ens username : require waiting for (A)\n    const resolverAddress = await relayer.registry.resolver(namehash(fullName))\n    if (resolverAddress !== relayer.resolver.address) { // if a resolver is already set : skip set resolver\n      const resolverTx: TxResponse = await relayer.registry.setResolver(\n        namehash(fullName),\n        relayer.resolver.address,\n      );\n      result['resolver']= await resolverTx.wait();\n      console.log(`(B) tx sent (setResolver) : ${resolverTx.hash}`); // display tx to firebase logging\n    }\n\n    // (C) link the erc1077 to the ens username : require waiting for (B)\n    const linkTx: TxResponse = await relayer.resolver.setAddr(\n      namehash(fullName),\n      ethAddress,\n    )\n    result['link'] = await linkTx.wait();\n    console.log(`(C) tx sent (setAddress) : ${linkTx.hash}`); // display tx to firebase logging\n    ;\n    return result;\n  } catch (error) {\n    console.error(error);\n    throw new Error(error);\n  }\n};\n\n\n\n//---------------------------------------------------\n//                   SEND\n//---------------------------------------------------\n\nexport async function relayerSendLogic(\n  { ethAddress, tx }: SendParams,\n  config: RelayerConfig\n) {\n  const relayer: Relayer = initRelayer(config);\n  // check required params\n  if (!ethAddress || !tx) {\n    throw new Error('\"ethAddress\" and \"tx\" are mandatory parameters !');\n  }\n\n  try {\n    getAddress(ethAddress);\n  } catch (error) {\n    throw new Error('\"ethAddress\" should be a valid ethereum address !');\n  }\n\n  // compute needed values\n  const erc1077 = new Contract(ethAddress, ERC1077_ABI, relayer.wallet);\n\n  // check if tx will be accepted by erc1077\n  const canExecute: boolean = await erc1077.functions.canExecute(\n    tx.to,\n    tx.value,\n    tx.data,\n    tx.nonce,\n    tx.gasPrice,\n    tx.gasToken,\n    tx.gasLimit,\n    tx.operationType,\n    tx.signatures\n  );\n\n  if (!canExecute) {\n    console.log(tx);\n    throw new Error(\n      'The transaction has not been sent because it will be be rejected by the ERC1077, this is probably a nonce or signatures problem.'\n    );\n  }\n\n  const sendTx = await erc1077.functions.executeSigned(\n    tx.to,\n    tx.value,\n    tx.data,\n    tx.nonce,\n    tx.gasPrice,\n    tx.gasToken,\n    tx.gasLimit,\n    tx.operationType,\n    tx.signatures\n  );\n  console.log(`tx sent (executeSigned) : ${sendTx.hash}`); // display tx to firebase logging\n\n  const txReceipt = await sendTx.wait();\n  return txReceipt;\n};\n\n//---------------------------------------------------\n//               DEPLOY ORG CONTRACT\n//---------------------------------------------------\n\nexport async function relayerDeployOrganizationLogic(\n  adminAddress: string,\n  config: RelayerConfig\n) {\n  const relayer: Relayer = initRelayer(config);\n  // check required params\n  if (!adminAddress) {\n    throw new Error('\"adminAddress\" is a mandatory parameters !');\n  }\n\n  try {\n    getAddress(adminAddress);\n  } catch (error) {\n    throw new Error('\"adminAddress\" should be a valid ethereum address !');\n  }\n\n  const organizationFactory = new ContractFactory(ORG_CONTRACT_ABI, ORG_CONTRACT_BYTECODE, relayer.wallet);\n  const contract = await organizationFactory.deploy(adminAddress);\n  console.log(`tx sent (deployOrganization) : ${contract.deployTransaction.hash}`); // display tx to firebase logging\n  await contract.deployed();\n  return contract.address;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DocWithID.html":{"url":"interfaces/DocWithID.html","title":"interface - DocWithID","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DocWithID\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend-functions/src/data/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PublicOrganization } from '@blockframes/organization/types';\nimport { NotificationType } from '@blockframes/notification/types';\nimport { PublicMovie } from '@blockframes/movie/types';\n\nexport { MovieDocument } from '@blockframes/movie/types';\nexport { OrganizationDocument, OrganizationStatus } from '@blockframes/organization/types';\nexport {\n  InvitationDocument,\n  InvitationOrUndefined,\n  InvitationStatus,\n  InvitationType,\n  InvitationFromOrganizationToUser,\n  InvitationFromUserToOrganization,\n  InvitationToWorkOnDocument\n} from '@blockframes/invitation/types';\nexport { MaterialDocument, MaterialStatus } from '@blockframes/material/material/types';\nexport { StakeholderDocument } from '@blockframes/organization/stakeholder/types';\nexport {\n  DeliveryDocument,\n  StepDocument,\n  StepDocumentWithDate,\n  convertStepDocumentToStepDocumentWithDate\n} from '@blockframes/material/delivery/types';\n\n/**\n * Types used by the firebase backend.\n *\n * Define all type to be used in the codebase. Please see the index.ts for more\n * details on why, what and what's up next.\n */\n\n// Low Level Types\n// ===============\nexport type IDMap = Record;\n\ninterface DocWithID {\n  id: string;\n}\n\n// Core Application Types\n// ======================\n// Business & App Related\n\nexport interface OrganizationPermissions {\n  superAdmins: string[];\n}\n\nexport interface OrganizationDocPermissions {\n  id: string;\n  canCreate: boolean;\n  canRead: boolean;\n  canUpdate: boolean;\n  canDelete: boolean;\n  owner: boolean;\n}\n\nexport interface UserDocPermissions {\n  id: string;\n  admins: string[];\n  canCreate: string[];\n  canDelete: string[];\n  canRead: string[];\n  canUpdate: string[];\n}\n\nexport enum AppAccessStatus {\n  requested = 'requested',\n  pending = 'pending',\n  accepted = 'accepted'\n}\n\n/** Custom object used to build notifications. */\nexport interface SnapObject {\n  organization: PublicOrganization | undefined;\n  movie: PublicMovie;\n  docId: string;\n  type: NotificationType;\n}\n\n/**\n * Turn a list of items with ids into the corresponding mapping.\n *\n * @param items A list of item with an ID\n * @returns an object that maps each id to its item,\n *          `{id_x: item_x, id_y: item_y, ...}`\n */\nexport function asIDMap(items: T[]): IDMap {\n  return items.reduce((result, item) => ({ ...result, [item.id]: item }), {});\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EmailRequest.html":{"url":"interfaces/EmailRequest.html","title":"interface - EmailRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EmailRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend-functions/src/internals/email.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        subject\n                                \n                                \n                                        text\n                                \n                                \n                                        to\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import SendGrid from '@sendgrid/mail';\nimport { sendgridAPIKey } from '../environments/environment';\n\nexport interface EmailRequest {\n  to: string;\n  subject: string;\n  text: string;\n}\n\n/**\n * Sends a transactional email configured by the EmailRequest provided.\n *\n * Handles development mode: logs a warning when no sendgrid API key is provided.\n */\nexport async function sendMail({ to, subject, text }: EmailRequest): Promise {\n  if (sendgridAPIKey === '') {\n    console.warn('No sendgrid API key set, skipping');\n    return;\n  }\n  SendGrid.setApiKey(sendgridAPIKey);\n  const msg = {\n    to,\n    subject,\n    text,\n    from: 'admin@blockframes.io'\n  };\n\n  console.debug(\"sending mail:\", msg);\n  return SendGrid.send(msg);\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Invitation.html":{"url":"interfaces/Invitation.html","title":"interface - Invitation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Invitation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/notification/src/lib/invitation/+state/invitation.firestore.ts\n        \n\n            \n                Description\n            \n            \n                Raw type for Invitation. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        app\n                                \n                                \n                                        date\n                                \n                                \n                                            Optional\n                                        docId\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        organization\n                                \n                                \n                                            Optional\n                                        processedId\n                                \n                                \n                                        status\n                                \n                                \n                                        type\n                                \n                                \n                                            Optional\n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        app\n                                    \n                                \n                                \n                                    \n                                        app:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:         Timestamp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Timestamp\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        docId\n                                    \n                                \n                                \n                                    \n                                        docId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organization\n                                    \n                                \n                                \n                                    \n                                        organization:         PublicOrganization\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PublicOrganization\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        processedId\n                                    \n                                \n                                \n                                    \n                                        processedId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         InvitationStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InvitationStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         InvitationType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InvitationType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         PublicUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PublicUser\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PublicOrganization } from \"@blockframes/organization/types\";\nimport { PublicUser } from \"@blockframes/auth/types\";\nimport { firestore } from 'firebase/app';\ntype Timestamp = firestore.Timestamp;\n\n/** Raw type for Invitation. */\nexport interface Invitation {\n  id: string;\n  app: string;\n  type: InvitationType;\n  status: InvitationStatus;\n  date: Timestamp;\n  user?: PublicUser;\n  organization?: PublicOrganization;\n  docId?: string;\n  processedId?: string;\n}\n\n/** Specific types of Invitation, both used in firebase functions. */\nexport type InvitationDocument = InvitationToWorkOnDocument | InvitationFromOrganizationToUser | InvitationFromUserToOrganization;\nexport type InvitationOrUndefined = InvitationDocument | undefined;\n\n/** Specific Invitation send by an Organization to another Organization to work on a document. */\nexport interface InvitationToWorkOnDocument extends Invitation {\n  type: InvitationType.toWorkOnDocument;\n  docId: string;\n  organization: PublicOrganization;\n}\n\n/**  Specific Invitation send by an Organization to a User to join it. */\nexport interface InvitationFromOrganizationToUser extends Invitation {\n  type: InvitationType.fromOrganizationToUser;\n  user: PublicUser;\n  organization: PublicOrganization;\n}\n\n/** Specific Invitation send by a User to join an Organization. */\nexport interface InvitationFromUserToOrganization extends Invitation {\n  type: InvitationType.fromUserToOrganization;\n  user: PublicUser;\n  organization: PublicOrganization;\n}\n\n/** Status of an Invitation. Set to pending by default, get erased if accepted, archived if declined. */\nexport const enum InvitationStatus {\n  accepted = 'accepted',\n  declined = 'declined',\n  pending = 'pending'\n}\n\n/** Type of Invitation depending of its purpose. */\nexport const enum InvitationType {\n  fromUserToOrganization = 'fromUserToOrganization',\n  fromOrganizationToUser = 'fromOrganizationToUser',\n  toWorkOnDocument = 'toWorkOnDocument'\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InvitationFromOrganizationToUser.html":{"url":"interfaces/InvitationFromOrganizationToUser.html","title":"interface - InvitationFromOrganizationToUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InvitationFromOrganizationToUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/notification/src/lib/invitation/+state/invitation.firestore.ts\n        \n\n            \n                Description\n            \n            \n                Specific Invitation send by an Organization to a User to join it. \n\n            \n\n            \n                Extends\n            \n            \n                        Invitation\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        organization\n                                \n                                \n                                        type\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        organization\n                                    \n                                \n                                \n                                    \n                                        organization:         PublicOrganization\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PublicOrganization\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         InvitationType.fromOrganizationToUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InvitationType.fromOrganizationToUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         PublicUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PublicUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PublicOrganization } from \"@blockframes/organization/types\";\nimport { PublicUser } from \"@blockframes/auth/types\";\nimport { firestore } from 'firebase/app';\ntype Timestamp = firestore.Timestamp;\n\n/** Raw type for Invitation. */\nexport interface Invitation {\n  id: string;\n  app: string;\n  type: InvitationType;\n  status: InvitationStatus;\n  date: Timestamp;\n  user?: PublicUser;\n  organization?: PublicOrganization;\n  docId?: string;\n  processedId?: string;\n}\n\n/** Specific types of Invitation, both used in firebase functions. */\nexport type InvitationDocument = InvitationToWorkOnDocument | InvitationFromOrganizationToUser | InvitationFromUserToOrganization;\nexport type InvitationOrUndefined = InvitationDocument | undefined;\n\n/** Specific Invitation send by an Organization to another Organization to work on a document. */\nexport interface InvitationToWorkOnDocument extends Invitation {\n  type: InvitationType.toWorkOnDocument;\n  docId: string;\n  organization: PublicOrganization;\n}\n\n/**  Specific Invitation send by an Organization to a User to join it. */\nexport interface InvitationFromOrganizationToUser extends Invitation {\n  type: InvitationType.fromOrganizationToUser;\n  user: PublicUser;\n  organization: PublicOrganization;\n}\n\n/** Specific Invitation send by a User to join an Organization. */\nexport interface InvitationFromUserToOrganization extends Invitation {\n  type: InvitationType.fromUserToOrganization;\n  user: PublicUser;\n  organization: PublicOrganization;\n}\n\n/** Status of an Invitation. Set to pending by default, get erased if accepted, archived if declined. */\nexport const enum InvitationStatus {\n  accepted = 'accepted',\n  declined = 'declined',\n  pending = 'pending'\n}\n\n/** Type of Invitation depending of its purpose. */\nexport const enum InvitationType {\n  fromUserToOrganization = 'fromUserToOrganization',\n  fromOrganizationToUser = 'fromOrganizationToUser',\n  toWorkOnDocument = 'toWorkOnDocument'\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InvitationFromUserToOrganization.html":{"url":"interfaces/InvitationFromUserToOrganization.html","title":"interface - InvitationFromUserToOrganization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InvitationFromUserToOrganization\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/notification/src/lib/invitation/+state/invitation.firestore.ts\n        \n\n            \n                Description\n            \n            \n                Specific Invitation send by a User to join an Organization. \n\n            \n\n            \n                Extends\n            \n            \n                        Invitation\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        organization\n                                \n                                \n                                        type\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        organization\n                                    \n                                \n                                \n                                    \n                                        organization:         PublicOrganization\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PublicOrganization\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         InvitationType.fromUserToOrganization\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InvitationType.fromUserToOrganization\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         PublicUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PublicUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PublicOrganization } from \"@blockframes/organization/types\";\nimport { PublicUser } from \"@blockframes/auth/types\";\nimport { firestore } from 'firebase/app';\ntype Timestamp = firestore.Timestamp;\n\n/** Raw type for Invitation. */\nexport interface Invitation {\n  id: string;\n  app: string;\n  type: InvitationType;\n  status: InvitationStatus;\n  date: Timestamp;\n  user?: PublicUser;\n  organization?: PublicOrganization;\n  docId?: string;\n  processedId?: string;\n}\n\n/** Specific types of Invitation, both used in firebase functions. */\nexport type InvitationDocument = InvitationToWorkOnDocument | InvitationFromOrganizationToUser | InvitationFromUserToOrganization;\nexport type InvitationOrUndefined = InvitationDocument | undefined;\n\n/** Specific Invitation send by an Organization to another Organization to work on a document. */\nexport interface InvitationToWorkOnDocument extends Invitation {\n  type: InvitationType.toWorkOnDocument;\n  docId: string;\n  organization: PublicOrganization;\n}\n\n/**  Specific Invitation send by an Organization to a User to join it. */\nexport interface InvitationFromOrganizationToUser extends Invitation {\n  type: InvitationType.fromOrganizationToUser;\n  user: PublicUser;\n  organization: PublicOrganization;\n}\n\n/** Specific Invitation send by a User to join an Organization. */\nexport interface InvitationFromUserToOrganization extends Invitation {\n  type: InvitationType.fromUserToOrganization;\n  user: PublicUser;\n  organization: PublicOrganization;\n}\n\n/** Status of an Invitation. Set to pending by default, get erased if accepted, archived if declined. */\nexport const enum InvitationStatus {\n  accepted = 'accepted',\n  declined = 'declined',\n  pending = 'pending'\n}\n\n/** Type of Invitation depending of its purpose. */\nexport const enum InvitationType {\n  fromUserToOrganization = 'fromUserToOrganization',\n  fromOrganizationToUser = 'fromOrganizationToUser',\n  toWorkOnDocument = 'toWorkOnDocument'\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InvitationToWorkOnDocument.html":{"url":"interfaces/InvitationToWorkOnDocument.html","title":"interface - InvitationToWorkOnDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InvitationToWorkOnDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/notification/src/lib/invitation/+state/invitation.firestore.ts\n        \n\n            \n                Description\n            \n            \n                Specific Invitation send by an Organization to another Organization to work on a document. \n\n            \n\n            \n                Extends\n            \n            \n                        Invitation\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        docId\n                                \n                                \n                                        organization\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        docId\n                                    \n                                \n                                \n                                    \n                                        docId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organization\n                                    \n                                \n                                \n                                    \n                                        organization:         PublicOrganization\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PublicOrganization\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         InvitationType.toWorkOnDocument\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InvitationType.toWorkOnDocument\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PublicOrganization } from \"@blockframes/organization/types\";\nimport { PublicUser } from \"@blockframes/auth/types\";\nimport { firestore } from 'firebase/app';\ntype Timestamp = firestore.Timestamp;\n\n/** Raw type for Invitation. */\nexport interface Invitation {\n  id: string;\n  app: string;\n  type: InvitationType;\n  status: InvitationStatus;\n  date: Timestamp;\n  user?: PublicUser;\n  organization?: PublicOrganization;\n  docId?: string;\n  processedId?: string;\n}\n\n/** Specific types of Invitation, both used in firebase functions. */\nexport type InvitationDocument = InvitationToWorkOnDocument | InvitationFromOrganizationToUser | InvitationFromUserToOrganization;\nexport type InvitationOrUndefined = InvitationDocument | undefined;\n\n/** Specific Invitation send by an Organization to another Organization to work on a document. */\nexport interface InvitationToWorkOnDocument extends Invitation {\n  type: InvitationType.toWorkOnDocument;\n  docId: string;\n  organization: PublicOrganization;\n}\n\n/**  Specific Invitation send by an Organization to a User to join it. */\nexport interface InvitationFromOrganizationToUser extends Invitation {\n  type: InvitationType.fromOrganizationToUser;\n  user: PublicUser;\n  organization: PublicOrganization;\n}\n\n/** Specific Invitation send by a User to join an Organization. */\nexport interface InvitationFromUserToOrganization extends Invitation {\n  type: InvitationType.fromUserToOrganization;\n  user: PublicUser;\n  organization: PublicOrganization;\n}\n\n/** Status of an Invitation. Set to pending by default, get erased if accepted, archived if declined. */\nexport const enum InvitationStatus {\n  accepted = 'accepted',\n  declined = 'declined',\n  pending = 'pending'\n}\n\n/** Type of Invitation depending of its purpose. */\nexport const enum InvitationType {\n  fromUserToOrganization = 'fromUserToOrganization',\n  fromOrganizationToUser = 'fromOrganizationToUser',\n  toWorkOnDocument = 'toWorkOnDocument'\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MGDeadlineRaw.html":{"url":"interfaces/MGDeadlineRaw.html","title":"interface - MGDeadlineRaw","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MGDeadlineRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/material/src/lib/delivery/+state/delivery.firestore.ts\n        \n\n            \n                Description\n            \n            \n                This is a Minimum Guarantee deadline, can be used to interact with the frontend (D = Date) or backend (D = Timestamp). \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        date\n                                \n                                \n                                        label\n                                \n                                \n                                        percentage\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:     D\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     D\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        percentage\n                                    \n                                \n                                \n                                    \n                                        percentage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { default as staticModels } from '@blockframes/movie/movie/static-model/staticModels';\nimport { firestore } from 'firebase';\n\nexport type Timestamp = firestore.Timestamp;\nexport type CurrencyCode = ((typeof staticModels)['MOVIE_CURRENCIES'])[number]['code'];\n\nexport const enum DeliveryStatus {\n  negociation = 'Delivery in negotiation',\n  pending = 'Materials pending',\n  noa = 'Notice of Availability',\n  nod = 'Notice of Delivery',\n  accepted = 'Materials accepted'\n}\n\n/** This is a Minimum Guarantee deadline, can be used to interact with the frontend (D = Date) or backend (D = Timestamp). */\nexport interface MGDeadlineRaw {\n  percentage: number;\n  date?: D;\n  label: string;\n}\n\n/** The Step of a given delivery, can be used to interact with the frontend (D = Date) or backend (D = Timestamp). */\ninterface StepRaw {\n  id: string;\n  name: string;\n  date?: D | null;\n}\n\n/** A given delivery, can be used to interact with the frontend (D = Date) or backend (D = Timestamp). */\ninterface DeliveryRaw {\n  id: string;\n  _type: 'deliveries';\n  isPaid: boolean;\n  movieId: string;\n  mustChargeMaterials?: boolean;\n  mustBeSigned?: boolean;\n  status: DeliveryStatus;\n  dueDate?: D;\n  /** Time to accept a material */\n  acceptationPeriod?: number;\n  /** Time to return a refused material */\n  reWorkingPeriod?: number;\n  mgAmount?: number;\n  mgCurrency?: CurrencyCode;\n  mgDeadlines?: MGDeadlineRaw[];\n  steps: StepRaw[];\n  validated: string[]; // Stakeholder.id[];\n  mgCurrentDeadline?: number;\n  isSigned?: boolean;\n  processedId?: string;\n}\n\n/** Document model of a delivery */\nexport interface DeliveryDocument extends DeliveryRaw {\n}\n\nexport interface DeliveryDocumentWithDates extends DeliveryRaw {\n}\n\n/** Document model of a Step */\nexport interface StepDocument extends StepRaw {}\n\n/** Document model of a Step with dates typed in Date. */\nexport interface StepDocumentWithDate extends StepRaw {}\n\n/** Convert a StepDocument to a Step (that uses Date). */\nexport function convertStepDocumentToStepDocumentWithDate(steps: StepDocument[]): StepDocumentWithDate[] {\n  if (!steps) {\n    return [];\n  }\n\n  return steps.map(step => {\n    if (!!step.date) {\n      return { ...step, date: step.date.toDate() };\n    } else {\n      return { ...step, date: null}\n    }\n  });\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MaterialDocument.html":{"url":"interfaces/MaterialDocument.html","title":"interface - MaterialDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MaterialDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/material/src/lib/material/+state/material.firestore.ts\n        \n\n            \n                Description\n            \n            \n                Document model of a material \n\n            \n\n            \n                Extends\n            \n            \n                        MaterialRaw\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        currency\n                                \n                                \n                                        deliveryIds\n                                \n                                \n                                            Optional\n                                        isOrdered\n                                \n                                \n                                            Optional\n                                        isPaid\n                                \n                                \n                                            Optional\n                                        owner\n                                \n                                \n                                            Optional\n                                        price\n                                \n                                \n                                            Optional\n                                        status\n                                \n                                \n                                            Optional\n                                        stepId\n                                \n                                \n                                            Optional\n                                        storage\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currency\n                                    \n                                \n                                \n                                    \n                                        currency:         CurrencyCode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CurrencyCode\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deliveryIds\n                                    \n                                \n                                \n                                    \n                                        deliveryIds:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isOrdered\n                                    \n                                \n                                \n                                    \n                                        isOrdered:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isPaid\n                                    \n                                \n                                \n                                    \n                                        isPaid:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                    \n                                \n                                \n                                    \n                                        owner:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         MaterialStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MaterialStatus\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stepId\n                                    \n                                \n                                \n                                    \n                                        stepId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storage\n                                    \n                                \n                                \n                                    \n                                        storage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { default as staticModels } from '@blockframes/movie/movie/static-model/staticModels';\n\ntype CurrencyCode = ((typeof staticModels)['MOVIE_CURRENCIES'])[number]['code'];\n\nexport const enum MaterialStatus {\n  pending = 'pending',\n  available = 'available',\n  delivered = 'delivered'\n}\n\n/** Generic interface of a material */\nexport interface MaterialRaw {\n  id: string;\n  value: string;\n  description: string;\n  category: string;\n}\n\n/** Document model of a material specific to a template. */\nexport interface MaterialTemplateDocument extends MaterialRaw {\n  price: number; // TODO: Create \"Price\" type with currencies from static-models => ISSUE#818\n  currency: CurrencyCode;\n}\n\n\n/** Document model of a material */\nexport interface MaterialDocument extends MaterialRaw {\n  owner?: string;\n  stepId?: string;\n  status?: MaterialStatus;\n  deliveryIds: string[];\n  price?: number; // TODO: Create \"Price\" type with currencies from static-models => ISSUE#818\n  currency?: CurrencyCode;\n  isOrdered?: boolean;\n  isPaid?: boolean;\n  storage?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MaterialRaw.html":{"url":"interfaces/MaterialRaw.html","title":"interface - MaterialRaw","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MaterialRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/material/src/lib/material/+state/material.firestore.ts\n        \n\n            \n                Description\n            \n            \n                Generic interface of a material \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        category\n                                \n                                \n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { default as staticModels } from '@blockframes/movie/movie/static-model/staticModels';\n\ntype CurrencyCode = ((typeof staticModels)['MOVIE_CURRENCIES'])[number]['code'];\n\nexport const enum MaterialStatus {\n  pending = 'pending',\n  available = 'available',\n  delivered = 'delivered'\n}\n\n/** Generic interface of a material */\nexport interface MaterialRaw {\n  id: string;\n  value: string;\n  description: string;\n  category: string;\n}\n\n/** Document model of a material specific to a template. */\nexport interface MaterialTemplateDocument extends MaterialRaw {\n  price: number; // TODO: Create \"Price\" type with currencies from static-models => ISSUE#818\n  currency: CurrencyCode;\n}\n\n\n/** Document model of a material */\nexport interface MaterialDocument extends MaterialRaw {\n  owner?: string;\n  stepId?: string;\n  status?: MaterialStatus;\n  deliveryIds: string[];\n  price?: number; // TODO: Create \"Price\" type with currencies from static-models => ISSUE#818\n  currency?: CurrencyCode;\n  isOrdered?: boolean;\n  isPaid?: boolean;\n  storage?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MaterialTemplateDocument.html":{"url":"interfaces/MaterialTemplateDocument.html","title":"interface - MaterialTemplateDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MaterialTemplateDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/material/src/lib/material/+state/material.firestore.ts\n        \n\n            \n                Description\n            \n            \n                Document model of a material specific to a template. \n\n            \n\n            \n                Extends\n            \n            \n                        MaterialRaw\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        currency\n                                \n                                \n                                        price\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currency\n                                    \n                                \n                                \n                                    \n                                        currency:         CurrencyCode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CurrencyCode\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { default as staticModels } from '@blockframes/movie/movie/static-model/staticModels';\n\ntype CurrencyCode = ((typeof staticModels)['MOVIE_CURRENCIES'])[number]['code'];\n\nexport const enum MaterialStatus {\n  pending = 'pending',\n  available = 'available',\n  delivered = 'delivered'\n}\n\n/** Generic interface of a material */\nexport interface MaterialRaw {\n  id: string;\n  value: string;\n  description: string;\n  category: string;\n}\n\n/** Document model of a material specific to a template. */\nexport interface MaterialTemplateDocument extends MaterialRaw {\n  price: number; // TODO: Create \"Price\" type with currencies from static-models => ISSUE#818\n  currency: CurrencyCode;\n}\n\n\n/** Document model of a material */\nexport interface MaterialDocument extends MaterialRaw {\n  owner?: string;\n  stepId?: string;\n  status?: MaterialStatus;\n  deliveryIds: string[];\n  price?: number; // TODO: Create \"Price\" type with currencies from static-models => ISSUE#818\n  currency?: CurrencyCode;\n  isOrdered?: boolean;\n  isPaid?: boolean;\n  storage?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MetaTx.html":{"url":"interfaces/MetaTx.html","title":"interface - MetaTx","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MetaTx\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend-functions/src/relayer.ts\n        \n\n            \n                Description\n            \n            \n                A Meta Transaction that encapsulate a regular tx (it will need a signatures before being sent)\n\n            \n\n            \n                Extends\n            \n            \n                        BaseTx\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        gasLimit\n                                \n                                \n                                        gasPrice\n                                \n                                \n                                        gasToken\n                                \n                                \n                                        nonce\n                                \n                                \n                                        operationType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gasLimit\n                                    \n                                \n                                \n                                    \n                                        gasLimit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gasPrice\n                                    \n                                \n                                \n                                    \n                                        gasPrice:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gasToken\n                                    \n                                \n                                \n                                    \n                                        gasToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nonce\n                                    \n                                \n                                \n                                    \n                                        nonce:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operationType\n                                    \n                                \n                                \n                                    \n                                        operationType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InfuraProvider } from '@ethersproject/providers';\nimport { Wallet } from '@ethersproject/wallet';\nimport { Contract, ContractFactory } from '@ethersproject/contracts';\nimport { TransactionResponse, TransactionReceipt } from '@ethersproject/abstract-provider';\nimport { namehash } from '@ethersproject/hash';\nimport { keccak256 } from '@ethersproject/keccak256';\nimport { toUtf8Bytes } from '@ethersproject/strings';\nimport { getAddress } from '@ethersproject/address';\nimport { toASCII } from 'punycode';\nimport { abi as CREATE2_FACTORY_ABI } from './contracts/Factory2.json';\nimport { bytecode as ERC1077_BYTECODE, abi as ERC1077_ABI } from './contracts/ERC1077.json';\nimport { abi as ENS_REGISTRY_ABI } from './contracts/ENSRegistry.json';\nimport { abi as ENS_RESOLVER_ABI } from './contracts/PublicResolver.json';\nimport {abi as ORG_CONTRACT_ABI, bytecode as ORG_CONTRACT_BYTECODE } from './contracts/Organization.json';\nimport { db } from './internals/firebase';\n\ntype TxResponse = TransactionResponse;\ntype TxReceipt = TransactionReceipt;\n\nexport interface Relayer {\n  wallet: Wallet;\n  contractFactory: Contract;\n  baseEnsDomain: string;\n  namehash: string;\n  registry: Contract;\n  resolver: Contract;\n}\n\nexport interface RelayerConfig {\n  mnemonic: string;\n  network: string;\n  baseEnsDomain: string;\n  registryAddress: string;\n  resolverAddress: string;\n  factoryContract: string;\n}\n\n/** Regular Ethereum transaction */\nexport interface BaseTx {\n  to: string; // address\n  value: string; // uint256\n  data: string; // bytes\n}\n\n/** A Meta Transaction that encapsulate a regular tx (it will need a signatures before being sent)*/\nexport interface MetaTx extends BaseTx {\n  nonce: string; // uint256\n  gasPrice: string; // uint256\n  gasToken: string; // address\n  gasLimit: string; // uint256\n  operationType: string; // uint8\n}\n\n/** A Meta Transaction with the user signature (ready to be sent) */\nexport interface SignedMetaTx extends MetaTx {\n  signatures: string; // bytes\n}\nexport interface SendParams {\n  ethAddress: string;\n  tx: SignedMetaTx;\n}\n\nexport interface RequestTokensParams {\n  username: string;\n  amount: number;\n}\n\nexport interface SignDeliveryParams {\n  username: string;\n  deliveryId: string;\n  stakeholderId: string;\n}\n\nexport function initRelayer(config: RelayerConfig): Relayer {\n  let wallet = Wallet.fromMnemonic(config.mnemonic);\n  const provider = new InfuraProvider(config.network);\n\n  wallet = wallet.connect(provider);\n\n  const contractFactory = new Contract(config.factoryContract, CREATE2_FACTORY_ABI, wallet);\n  const baseEnsDomain = config.baseEnsDomain;\n  const relayerNamehash = namehash(config.baseEnsDomain);\n  const registry = new Contract(config.registryAddress, ENS_REGISTRY_ABI, wallet);\n  const resolver = new Contract(config.resolverAddress, ENS_RESOLVER_ABI, wallet);\n\n  return {\n    wallet,\n    contractFactory,\n    baseEnsDomain,\n    namehash: relayerNamehash,\n    registry,\n    resolver,\n  };\n}\n\ninterface DeployParams {\n  username: string;\n  key: string;\n  erc1077address: string;\n  orgId: string;\n}\n\ninterface RegisterParams {\n  name: string;\n  ethAddress: string;\n}\n\n// TODO issue#714 (Laurent work on a way to get those functions in only one place)\nexport function emailToEnsDomain(email: string, baseEnsDomain: string) { // !!!! there is a copy of this function in 'libs\\utils\\src\\lib\\helpers.ts'\n  return toASCII(email.split('@')[0]).toLowerCase()\n    .split('')\n    .map(char => /[^\\w\\d-.]/g.test(char) ? char.charCodeAt(0) : char) // replace every non a-z or 0-9 chars by their ASCII code : '?' -> '63'\n    .join('') + '.' + baseEnsDomain;\n}\n\n/**\n * This function precompute a contract address as defined in the EIP 1014 (Skinny Create 2)\n * @param ensDomain this is use as a salt (salt need to be unique for each user)\n * @param provider ethers provider\n */\n// TODO issue#714 (Laurent work on a way to get those functions in only one place)\nexport async function precomputeAddress(ensDomain: string, config: RelayerConfig) { // !!!! there is a copy of this function in 'libs\\utils\\src\\lib\\helpers.ts'\n  const baseName = ensDomain.split('.')[0];\n  const relayer = initRelayer(config);\n  const factoryAddress = await relayer.wallet.provider.resolveName(relayer.contractFactory.address).then(address => address.substr(2));\n  const salt = keccak256(toUtf8Bytes(baseName)).substr(2);\n  const byteCodeHash = keccak256(`0x${ERC1077_BYTECODE}`).substr(2);\n\n  const payload = `0xff${factoryAddress}${salt}${byteCodeHash}`;\n\n  return `0x${keccak256(payload).slice(-40)}`; // first 40 bytes of the hash of the payload\n}\n\n/** check if an ENS name is linked to an eth address */\nexport async function isENSNameRegistered(ensName: string, config: RelayerConfig) {\n  const relayer = initRelayer(config);\n\n  const address = await relayer.wallet.provider.resolveName(ensName); // return eth address or null\n  return !!address;\n}\n\n//---------------------------------------------------\n//                   DEPLOY\n//---------------------------------------------------\n\nexport async function relayerDeployLogic(\n  { username, key, erc1077address, orgId }: DeployParams,\n  config: RelayerConfig\n) {\n  const relayer: Relayer = initRelayer(config);\n\n  // check required params\n  if (!username || !key || !erc1077address || !orgId) {\n    throw new Error('\"username\", \"key\", \"erc1077address\", and \"orgAddress\" are mandatory parameters !');\n  }\n\n  try {\n    getAddress(key);\n    getAddress(erc1077address);\n  } catch (error) {\n    throw new Error('\"key\" and/or \"erc1077address\" should be a valid ethereum address !');\n  }\n\n  // compute needed values\n  const hash = keccak256(toUtf8Bytes(username));\n  const orgName = await db.doc(`/orgs/${orgId}`).get().then(org => org.get('name')) as string;\n  const orgEns = emailToEnsDomain(orgName.replace(' ', '-'), relayer.baseEnsDomain);\n  const orgAddress = await relayer.wallet.provider.resolveName(orgEns);\n\n  try {\n\n    const result: Record = {};\n\n    const codeAtAddress = await relayer.wallet.provider.getCode(erc1077address);\n    if (codeAtAddress === '0x') { // if there is already some code at this address : skip deploy\n      const deployTx: TxResponse = await relayer.contractFactory.deploy(\n        hash,\n        `0x${ERC1077_BYTECODE}`,\n        key.toLocaleLowerCase(),\n        orgAddress.toLocaleLowerCase(),\n      )\n\n      result['deploy'] = await deployTx.wait();\n      console.log(`(D) tx sent (deploy) : ${deployTx.hash}`);\n    }\n\n    return result;\n  } catch (error) {\n    console.error(error);\n    throw new Error(error);\n  }\n};\n\n//---------------------------------------------------\n//                   REGISTER\n//---------------------------------------------------\n\nexport async function relayerRegisterENSLogic(\n  { name, ethAddress }: RegisterParams,\n  config: RelayerConfig\n) {\n  const relayer: Relayer = initRelayer(config);\n\n  // check required params\n  if (!name || !ethAddress) {\n    throw new Error('\"name\" and \"ethAddress\" are mandatory parameters !');\n  }\n\n  try {\n    getAddress(ethAddress);\n  } catch (error) {\n    throw new Error('\"ethAddress\" should be a valid ethereum address !');\n  }\n\n  // in case name is of the form `name.blockframes.eth` we only want the first part to prevent ending with `name.blockframes.eth.blockframes.eth`\n  const [labelName] = name.split('.');\n\n  // compute needed values\n  const fullName = `${labelName}.${config.baseEnsDomain}`;\n  const hash = keccak256(toUtf8Bytes(labelName));\n\n  try {\n    /*\n    ENS registration require 3 interdependent txs to happens :\n    here are the order of the tx and their dependencies\n\n       (A) --> (B) --> (C)     // ENS workflow, (A) must complete before (B)\n\n    */\n\n    const ZERO_ADDRESS = '0x00000000000000000000000000000000000000';\n\n    const retrievedAddress = await relayer.wallet.provider.resolveName(fullName);\n    if (!!retrievedAddress && retrievedAddress !== ZERO_ADDRESS) { // if name is already link to a non-zero address : skip\n      throw new Error(`${fullName} already linked to an address (${retrievedAddress})`);\n    }\n    const result: Record = {};\n\n    // (A) register the user ens username\n    const nameOwner = await relayer.registry.owner(namehash(fullName));\n    if (nameOwner !== relayer.wallet.address) { // if name is already registered : skip registration\n      const registerTx: TxResponse = await relayer.registry.setSubnodeOwner(\n        relayer.namehash,\n        hash,\n        relayer.wallet.address,\n      );\n      result['register'] = await registerTx.wait();\n      console.log(`(A) tx sent (register) : ${registerTx.hash}`); // display tx to firebase logging\n    }\n\n    // (B) set a resolver to the ens username : require waiting for (A)\n    const resolverAddress = await relayer.registry.resolver(namehash(fullName))\n    if (resolverAddress !== relayer.resolver.address) { // if a resolver is already set : skip set resolver\n      const resolverTx: TxResponse = await relayer.registry.setResolver(\n        namehash(fullName),\n        relayer.resolver.address,\n      );\n      result['resolver']= await resolverTx.wait();\n      console.log(`(B) tx sent (setResolver) : ${resolverTx.hash}`); // display tx to firebase logging\n    }\n\n    // (C) link the erc1077 to the ens username : require waiting for (B)\n    const linkTx: TxResponse = await relayer.resolver.setAddr(\n      namehash(fullName),\n      ethAddress,\n    )\n    result['link'] = await linkTx.wait();\n    console.log(`(C) tx sent (setAddress) : ${linkTx.hash}`); // display tx to firebase logging\n    ;\n    return result;\n  } catch (error) {\n    console.error(error);\n    throw new Error(error);\n  }\n};\n\n\n\n//---------------------------------------------------\n//                   SEND\n//---------------------------------------------------\n\nexport async function relayerSendLogic(\n  { ethAddress, tx }: SendParams,\n  config: RelayerConfig\n) {\n  const relayer: Relayer = initRelayer(config);\n  // check required params\n  if (!ethAddress || !tx) {\n    throw new Error('\"ethAddress\" and \"tx\" are mandatory parameters !');\n  }\n\n  try {\n    getAddress(ethAddress);\n  } catch (error) {\n    throw new Error('\"ethAddress\" should be a valid ethereum address !');\n  }\n\n  // compute needed values\n  const erc1077 = new Contract(ethAddress, ERC1077_ABI, relayer.wallet);\n\n  // check if tx will be accepted by erc1077\n  const canExecute: boolean = await erc1077.functions.canExecute(\n    tx.to,\n    tx.value,\n    tx.data,\n    tx.nonce,\n    tx.gasPrice,\n    tx.gasToken,\n    tx.gasLimit,\n    tx.operationType,\n    tx.signatures\n  );\n\n  if (!canExecute) {\n    console.log(tx);\n    throw new Error(\n      'The transaction has not been sent because it will be be rejected by the ERC1077, this is probably a nonce or signatures problem.'\n    );\n  }\n\n  const sendTx = await erc1077.functions.executeSigned(\n    tx.to,\n    tx.value,\n    tx.data,\n    tx.nonce,\n    tx.gasPrice,\n    tx.gasToken,\n    tx.gasLimit,\n    tx.operationType,\n    tx.signatures\n  );\n  console.log(`tx sent (executeSigned) : ${sendTx.hash}`); // display tx to firebase logging\n\n  const txReceipt = await sendTx.wait();\n  return txReceipt;\n};\n\n//---------------------------------------------------\n//               DEPLOY ORG CONTRACT\n//---------------------------------------------------\n\nexport async function relayerDeployOrganizationLogic(\n  adminAddress: string,\n  config: RelayerConfig\n) {\n  const relayer: Relayer = initRelayer(config);\n  // check required params\n  if (!adminAddress) {\n    throw new Error('\"adminAddress\" is a mandatory parameters !');\n  }\n\n  try {\n    getAddress(adminAddress);\n  } catch (error) {\n    throw new Error('\"adminAddress\" should be a valid ethereum address !');\n  }\n\n  const organizationFactory = new ContractFactory(ORG_CONTRACT_ABI, ORG_CONTRACT_BYTECODE, relayer.wallet);\n  const contract = await organizationFactory.deploy(adminAddress);\n  console.log(`tx sent (deployOrganization) : ${contract.deployTransaction.hash}`); // display tx to firebase logging\n  await contract.deployed();\n  return contract.address;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MovieDocument.html":{"url":"interfaces/MovieDocument.html","title":"interface - MovieDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MovieDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/movie/src/lib/movie/+state/movie.firestore.ts\n        \n\n            \n                Description\n            \n            \n                Document model of a Movie \n\n            \n\n            \n                Extends\n            \n            \n                        MovieRaw\n            \n\n\n\n\n    \n\n\n    \n        import { DateRangeRaw } from \"@blockframes/utils/date-range\";\nimport { firestore } from \"firebase/app\";\n\ntype Timestamp = firestore.Timestamp;\n\nexport interface MovieVersionInfo {\n  dubbings: string[],\n  subtitles: string[],\n}\n\ninterface MovieSalesAgentDealRaw {\n  rights: DateRangeRaw;\n  territories: string[],\n  medias: string[],\n}\n\nexport interface MovieSalesAgentDealDocumentWithDates extends MovieSalesAgentDealRaw {\n}\n\nexport interface MoviePromotionalDescription {\n  keyAssets: string[],\n  keywords: string[],\n}\n\nexport interface Prize {\n  name: string,\n  year: number,\n  prize?: string,\n}\n\nexport interface PromotionalElement {\n  label: string,\n  url: string\n}\n\nexport interface MoviePromotionalElements {\n  images: string[],\n  promotionalElements: PromotionalElement[],\n}\n\nexport interface Title {\n  original: string;\n  international?: string;\n}\n\nexport interface Credit {\n  firstName: string,\n  lastName?: string,\n  creditRole?: string,\n}\n\nexport interface MovieStory {\n  synopsis: string,\n  logline: string,\n}\n\nexport interface MovieSalesCast {\n  credits: Credit[],\n}\n\nexport interface MovieFestivalPrizes {\n  prizes: Prize[]\n}\n\ninterface MovieSaleRaw {\n  operatorName: string;\n  showOperatorName: boolean; //@todo #581 Promotional Distribution Deal\n  rights: DateRangeRaw;\n  territories: string[];\n  medias: string[];\n  dubbings: string[];\n  subtitles: string[];\n  exclusive: boolean;\n  price: number;\n}\n\nexport interface MovieSaleDocumentWithDates extends MovieSaleRaw {\n}\n\nexport interface MovieMain {\n  internalRef?: string,\n  isan?: string,\n  title: Title,\n  directors?: Credit[],\n  poster?: string,\n  productionYear?: number,\n  genres?: string[],\n  originCountries?: string[],\n  languages?: string[],\n  status?: string,\n  productionCompanies?: Credit[],\n  length?: number,\n  shortSynopsis?: string,\n}\n\ninterface MovieSalesInfoRaw {\n  scoring: string,\n  color: string,\n  europeanQualification: boolean,\n  pegi: string,\n  certifications: string[],\n  internationalPremiere: Prize,\n  originCountryReleaseDate: D,\n  broadcasterCoproducers: string[],\n}\n\nexport interface MovieSalesInfoDocumentWithDates extends MovieSalesInfoRaw {\n}\n\n/** Generic interface of a Movie */\ninterface MovieRaw {\n  // @todo #643 add new fields to Draw.io\n  _type: 'movies';\n  id: string;\n\n  // @todo #643 not main movie attributes WIP\n\n  deliveryIds: string[];\n  ipId?: string;\n  directorNote?: string;\n  producerNote?: string;\n  goalBudget?: number;\n  movieCurrency?: string;\n  fundedBudget?: number;\n  breakeven?: number;\n  backendProfit?: number;\n  potentialRevenues?: number;\n  selectionCategories?: string;\n\n  // Sections\n  sales: MovieSaleRaw[]; //@todo 581 => move to subcollection\n  main: MovieMain;\n  story: MovieStory;\n  promotionalElements: MoviePromotionalElements;\n  promotionalDescription: MoviePromotionalDescription;\n  salesCast: MovieSalesCast;\n  salesInfo: MovieSalesInfoRaw;\n  versionInfo: MovieVersionInfo;\n  festivalPrizes: MovieFestivalPrizes;\n  salesAgentDeal: MovieSalesAgentDealRaw;\n}\n\n/** Document model of a Movie */\nexport interface MovieDocument extends MovieRaw {\n}\n\n/** Document model of a Movie with Dates (type Date) */\nexport interface MovieDocumentWithDates extends MovieRaw {\n}\n\n/** Public interface of a movie (to notifications). */\nexport interface PublicMovie {\n  id: string;\n  title: Title;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MovieDocumentWithDates.html":{"url":"interfaces/MovieDocumentWithDates.html","title":"interface - MovieDocumentWithDates","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MovieDocumentWithDates\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/movie/src/lib/movie/+state/movie.firestore.ts\n        \n\n            \n                Description\n            \n            \n                Document model of a Movie with Dates (type Date) \n\n            \n\n            \n                Extends\n            \n            \n                        MovieRaw\n            \n\n\n\n\n    \n\n\n    \n        import { DateRangeRaw } from \"@blockframes/utils/date-range\";\nimport { firestore } from \"firebase/app\";\n\ntype Timestamp = firestore.Timestamp;\n\nexport interface MovieVersionInfo {\n  dubbings: string[],\n  subtitles: string[],\n}\n\ninterface MovieSalesAgentDealRaw {\n  rights: DateRangeRaw;\n  territories: string[],\n  medias: string[],\n}\n\nexport interface MovieSalesAgentDealDocumentWithDates extends MovieSalesAgentDealRaw {\n}\n\nexport interface MoviePromotionalDescription {\n  keyAssets: string[],\n  keywords: string[],\n}\n\nexport interface Prize {\n  name: string,\n  year: number,\n  prize?: string,\n}\n\nexport interface PromotionalElement {\n  label: string,\n  url: string\n}\n\nexport interface MoviePromotionalElements {\n  images: string[],\n  promotionalElements: PromotionalElement[],\n}\n\nexport interface Title {\n  original: string;\n  international?: string;\n}\n\nexport interface Credit {\n  firstName: string,\n  lastName?: string,\n  creditRole?: string,\n}\n\nexport interface MovieStory {\n  synopsis: string,\n  logline: string,\n}\n\nexport interface MovieSalesCast {\n  credits: Credit[],\n}\n\nexport interface MovieFestivalPrizes {\n  prizes: Prize[]\n}\n\ninterface MovieSaleRaw {\n  operatorName: string;\n  showOperatorName: boolean; //@todo #581 Promotional Distribution Deal\n  rights: DateRangeRaw;\n  territories: string[];\n  medias: string[];\n  dubbings: string[];\n  subtitles: string[];\n  exclusive: boolean;\n  price: number;\n}\n\nexport interface MovieSaleDocumentWithDates extends MovieSaleRaw {\n}\n\nexport interface MovieMain {\n  internalRef?: string,\n  isan?: string,\n  title: Title,\n  directors?: Credit[],\n  poster?: string,\n  productionYear?: number,\n  genres?: string[],\n  originCountries?: string[],\n  languages?: string[],\n  status?: string,\n  productionCompanies?: Credit[],\n  length?: number,\n  shortSynopsis?: string,\n}\n\ninterface MovieSalesInfoRaw {\n  scoring: string,\n  color: string,\n  europeanQualification: boolean,\n  pegi: string,\n  certifications: string[],\n  internationalPremiere: Prize,\n  originCountryReleaseDate: D,\n  broadcasterCoproducers: string[],\n}\n\nexport interface MovieSalesInfoDocumentWithDates extends MovieSalesInfoRaw {\n}\n\n/** Generic interface of a Movie */\ninterface MovieRaw {\n  // @todo #643 add new fields to Draw.io\n  _type: 'movies';\n  id: string;\n\n  // @todo #643 not main movie attributes WIP\n\n  deliveryIds: string[];\n  ipId?: string;\n  directorNote?: string;\n  producerNote?: string;\n  goalBudget?: number;\n  movieCurrency?: string;\n  fundedBudget?: number;\n  breakeven?: number;\n  backendProfit?: number;\n  potentialRevenues?: number;\n  selectionCategories?: string;\n\n  // Sections\n  sales: MovieSaleRaw[]; //@todo 581 => move to subcollection\n  main: MovieMain;\n  story: MovieStory;\n  promotionalElements: MoviePromotionalElements;\n  promotionalDescription: MoviePromotionalDescription;\n  salesCast: MovieSalesCast;\n  salesInfo: MovieSalesInfoRaw;\n  versionInfo: MovieVersionInfo;\n  festivalPrizes: MovieFestivalPrizes;\n  salesAgentDeal: MovieSalesAgentDealRaw;\n}\n\n/** Document model of a Movie */\nexport interface MovieDocument extends MovieRaw {\n}\n\n/** Document model of a Movie with Dates (type Date) */\nexport interface MovieDocumentWithDates extends MovieRaw {\n}\n\n/** Public interface of a movie (to notifications). */\nexport interface PublicMovie {\n  id: string;\n  title: Title;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MovieFestivalPrizes.html":{"url":"interfaces/MovieFestivalPrizes.html","title":"interface - MovieFestivalPrizes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MovieFestivalPrizes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/movie/src/lib/movie/+state/movie.firestore.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        prizes\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        prizes\n                                    \n                                \n                                \n                                    \n                                        prizes:         Prize[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Prize[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DateRangeRaw } from \"@blockframes/utils/date-range\";\nimport { firestore } from \"firebase/app\";\n\ntype Timestamp = firestore.Timestamp;\n\nexport interface MovieVersionInfo {\n  dubbings: string[],\n  subtitles: string[],\n}\n\ninterface MovieSalesAgentDealRaw {\n  rights: DateRangeRaw;\n  territories: string[],\n  medias: string[],\n}\n\nexport interface MovieSalesAgentDealDocumentWithDates extends MovieSalesAgentDealRaw {\n}\n\nexport interface MoviePromotionalDescription {\n  keyAssets: string[],\n  keywords: string[],\n}\n\nexport interface Prize {\n  name: string,\n  year: number,\n  prize?: string,\n}\n\nexport interface PromotionalElement {\n  label: string,\n  url: string\n}\n\nexport interface MoviePromotionalElements {\n  images: string[],\n  promotionalElements: PromotionalElement[],\n}\n\nexport interface Title {\n  original: string;\n  international?: string;\n}\n\nexport interface Credit {\n  firstName: string,\n  lastName?: string,\n  creditRole?: string,\n}\n\nexport interface MovieStory {\n  synopsis: string,\n  logline: string,\n}\n\nexport interface MovieSalesCast {\n  credits: Credit[],\n}\n\nexport interface MovieFestivalPrizes {\n  prizes: Prize[]\n}\n\ninterface MovieSaleRaw {\n  operatorName: string;\n  showOperatorName: boolean; //@todo #581 Promotional Distribution Deal\n  rights: DateRangeRaw;\n  territories: string[];\n  medias: string[];\n  dubbings: string[];\n  subtitles: string[];\n  exclusive: boolean;\n  price: number;\n}\n\nexport interface MovieSaleDocumentWithDates extends MovieSaleRaw {\n}\n\nexport interface MovieMain {\n  internalRef?: string,\n  isan?: string,\n  title: Title,\n  directors?: Credit[],\n  poster?: string,\n  productionYear?: number,\n  genres?: string[],\n  originCountries?: string[],\n  languages?: string[],\n  status?: string,\n  productionCompanies?: Credit[],\n  length?: number,\n  shortSynopsis?: string,\n}\n\ninterface MovieSalesInfoRaw {\n  scoring: string,\n  color: string,\n  europeanQualification: boolean,\n  pegi: string,\n  certifications: string[],\n  internationalPremiere: Prize,\n  originCountryReleaseDate: D,\n  broadcasterCoproducers: string[],\n}\n\nexport interface MovieSalesInfoDocumentWithDates extends MovieSalesInfoRaw {\n}\n\n/** Generic interface of a Movie */\ninterface MovieRaw {\n  // @todo #643 add new fields to Draw.io\n  _type: 'movies';\n  id: string;\n\n  // @todo #643 not main movie attributes WIP\n\n  deliveryIds: string[];\n  ipId?: string;\n  directorNote?: string;\n  producerNote?: string;\n  goalBudget?: number;\n  movieCurrency?: string;\n  fundedBudget?: number;\n  breakeven?: number;\n  backendProfit?: number;\n  potentialRevenues?: number;\n  selectionCategories?: string;\n\n  // Sections\n  sales: MovieSaleRaw[]; //@todo 581 => move to subcollection\n  main: MovieMain;\n  story: MovieStory;\n  promotionalElements: MoviePromotionalElements;\n  promotionalDescription: MoviePromotionalDescription;\n  salesCast: MovieSalesCast;\n  salesInfo: MovieSalesInfoRaw;\n  versionInfo: MovieVersionInfo;\n  festivalPrizes: MovieFestivalPrizes;\n  salesAgentDeal: MovieSalesAgentDealRaw;\n}\n\n/** Document model of a Movie */\nexport interface MovieDocument extends MovieRaw {\n}\n\n/** Document model of a Movie with Dates (type Date) */\nexport interface MovieDocumentWithDates extends MovieRaw {\n}\n\n/** Public interface of a movie (to notifications). */\nexport interface PublicMovie {\n  id: string;\n  title: Title;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MovieMain.html":{"url":"interfaces/MovieMain.html","title":"interface - MovieMain","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MovieMain\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/movie/src/lib/movie/+state/movie.firestore.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        directors\n                                \n                                \n                                            Optional\n                                        genres\n                                \n                                \n                                            Optional\n                                        internalRef\n                                \n                                \n                                            Optional\n                                        isan\n                                \n                                \n                                            Optional\n                                        languages\n                                \n                                \n                                            Optional\n                                        length\n                                \n                                \n                                            Optional\n                                        originCountries\n                                \n                                \n                                            Optional\n                                        poster\n                                \n                                \n                                            Optional\n                                        productionCompanies\n                                \n                                \n                                            Optional\n                                        productionYear\n                                \n                                \n                                            Optional\n                                        shortSynopsis\n                                \n                                \n                                            Optional\n                                        status\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        directors\n                                    \n                                \n                                \n                                    \n                                        directors:         Credit[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Credit[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        genres\n                                    \n                                \n                                \n                                    \n                                        genres:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        internalRef\n                                    \n                                \n                                \n                                    \n                                        internalRef:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isan\n                                    \n                                \n                                \n                                    \n                                        isan:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        languages\n                                    \n                                \n                                \n                                    \n                                        languages:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        length\n                                    \n                                \n                                \n                                    \n                                        length:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        originCountries\n                                    \n                                \n                                \n                                    \n                                        originCountries:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        poster\n                                    \n                                \n                                \n                                    \n                                        poster:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productionCompanies\n                                    \n                                \n                                \n                                    \n                                        productionCompanies:         Credit[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Credit[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productionYear\n                                    \n                                \n                                \n                                    \n                                        productionYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortSynopsis\n                                    \n                                \n                                \n                                    \n                                        shortSynopsis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         Title\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Title\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DateRangeRaw } from \"@blockframes/utils/date-range\";\nimport { firestore } from \"firebase/app\";\n\ntype Timestamp = firestore.Timestamp;\n\nexport interface MovieVersionInfo {\n  dubbings: string[],\n  subtitles: string[],\n}\n\ninterface MovieSalesAgentDealRaw {\n  rights: DateRangeRaw;\n  territories: string[],\n  medias: string[],\n}\n\nexport interface MovieSalesAgentDealDocumentWithDates extends MovieSalesAgentDealRaw {\n}\n\nexport interface MoviePromotionalDescription {\n  keyAssets: string[],\n  keywords: string[],\n}\n\nexport interface Prize {\n  name: string,\n  year: number,\n  prize?: string,\n}\n\nexport interface PromotionalElement {\n  label: string,\n  url: string\n}\n\nexport interface MoviePromotionalElements {\n  images: string[],\n  promotionalElements: PromotionalElement[],\n}\n\nexport interface Title {\n  original: string;\n  international?: string;\n}\n\nexport interface Credit {\n  firstName: string,\n  lastName?: string,\n  creditRole?: string,\n}\n\nexport interface MovieStory {\n  synopsis: string,\n  logline: string,\n}\n\nexport interface MovieSalesCast {\n  credits: Credit[],\n}\n\nexport interface MovieFestivalPrizes {\n  prizes: Prize[]\n}\n\ninterface MovieSaleRaw {\n  operatorName: string;\n  showOperatorName: boolean; //@todo #581 Promotional Distribution Deal\n  rights: DateRangeRaw;\n  territories: string[];\n  medias: string[];\n  dubbings: string[];\n  subtitles: string[];\n  exclusive: boolean;\n  price: number;\n}\n\nexport interface MovieSaleDocumentWithDates extends MovieSaleRaw {\n}\n\nexport interface MovieMain {\n  internalRef?: string,\n  isan?: string,\n  title: Title,\n  directors?: Credit[],\n  poster?: string,\n  productionYear?: number,\n  genres?: string[],\n  originCountries?: string[],\n  languages?: string[],\n  status?: string,\n  productionCompanies?: Credit[],\n  length?: number,\n  shortSynopsis?: string,\n}\n\ninterface MovieSalesInfoRaw {\n  scoring: string,\n  color: string,\n  europeanQualification: boolean,\n  pegi: string,\n  certifications: string[],\n  internationalPremiere: Prize,\n  originCountryReleaseDate: D,\n  broadcasterCoproducers: string[],\n}\n\nexport interface MovieSalesInfoDocumentWithDates extends MovieSalesInfoRaw {\n}\n\n/** Generic interface of a Movie */\ninterface MovieRaw {\n  // @todo #643 add new fields to Draw.io\n  _type: 'movies';\n  id: string;\n\n  // @todo #643 not main movie attributes WIP\n\n  deliveryIds: string[];\n  ipId?: string;\n  directorNote?: string;\n  producerNote?: string;\n  goalBudget?: number;\n  movieCurrency?: string;\n  fundedBudget?: number;\n  breakeven?: number;\n  backendProfit?: number;\n  potentialRevenues?: number;\n  selectionCategories?: string;\n\n  // Sections\n  sales: MovieSaleRaw[]; //@todo 581 => move to subcollection\n  main: MovieMain;\n  story: MovieStory;\n  promotionalElements: MoviePromotionalElements;\n  promotionalDescription: MoviePromotionalDescription;\n  salesCast: MovieSalesCast;\n  salesInfo: MovieSalesInfoRaw;\n  versionInfo: MovieVersionInfo;\n  festivalPrizes: MovieFestivalPrizes;\n  salesAgentDeal: MovieSalesAgentDealRaw;\n}\n\n/** Document model of a Movie */\nexport interface MovieDocument extends MovieRaw {\n}\n\n/** Document model of a Movie with Dates (type Date) */\nexport interface MovieDocumentWithDates extends MovieRaw {\n}\n\n/** Public interface of a movie (to notifications). */\nexport interface PublicMovie {\n  id: string;\n  title: Title;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MoviePromotionalDescription.html":{"url":"interfaces/MoviePromotionalDescription.html","title":"interface - MoviePromotionalDescription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MoviePromotionalDescription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/movie/src/lib/movie/+state/movie.firestore.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        keyAssets\n                                \n                                \n                                        keywords\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        keyAssets\n                                    \n                                \n                                \n                                    \n                                        keyAssets:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keywords\n                                    \n                                \n                                \n                                    \n                                        keywords:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DateRangeRaw } from \"@blockframes/utils/date-range\";\nimport { firestore } from \"firebase/app\";\n\ntype Timestamp = firestore.Timestamp;\n\nexport interface MovieVersionInfo {\n  dubbings: string[],\n  subtitles: string[],\n}\n\ninterface MovieSalesAgentDealRaw {\n  rights: DateRangeRaw;\n  territories: string[],\n  medias: string[],\n}\n\nexport interface MovieSalesAgentDealDocumentWithDates extends MovieSalesAgentDealRaw {\n}\n\nexport interface MoviePromotionalDescription {\n  keyAssets: string[],\n  keywords: string[],\n}\n\nexport interface Prize {\n  name: string,\n  year: number,\n  prize?: string,\n}\n\nexport interface PromotionalElement {\n  label: string,\n  url: string\n}\n\nexport interface MoviePromotionalElements {\n  images: string[],\n  promotionalElements: PromotionalElement[],\n}\n\nexport interface Title {\n  original: string;\n  international?: string;\n}\n\nexport interface Credit {\n  firstName: string,\n  lastName?: string,\n  creditRole?: string,\n}\n\nexport interface MovieStory {\n  synopsis: string,\n  logline: string,\n}\n\nexport interface MovieSalesCast {\n  credits: Credit[],\n}\n\nexport interface MovieFestivalPrizes {\n  prizes: Prize[]\n}\n\ninterface MovieSaleRaw {\n  operatorName: string;\n  showOperatorName: boolean; //@todo #581 Promotional Distribution Deal\n  rights: DateRangeRaw;\n  territories: string[];\n  medias: string[];\n  dubbings: string[];\n  subtitles: string[];\n  exclusive: boolean;\n  price: number;\n}\n\nexport interface MovieSaleDocumentWithDates extends MovieSaleRaw {\n}\n\nexport interface MovieMain {\n  internalRef?: string,\n  isan?: string,\n  title: Title,\n  directors?: Credit[],\n  poster?: string,\n  productionYear?: number,\n  genres?: string[],\n  originCountries?: string[],\n  languages?: string[],\n  status?: string,\n  productionCompanies?: Credit[],\n  length?: number,\n  shortSynopsis?: string,\n}\n\ninterface MovieSalesInfoRaw {\n  scoring: string,\n  color: string,\n  europeanQualification: boolean,\n  pegi: string,\n  certifications: string[],\n  internationalPremiere: Prize,\n  originCountryReleaseDate: D,\n  broadcasterCoproducers: string[],\n}\n\nexport interface MovieSalesInfoDocumentWithDates extends MovieSalesInfoRaw {\n}\n\n/** Generic interface of a Movie */\ninterface MovieRaw {\n  // @todo #643 add new fields to Draw.io\n  _type: 'movies';\n  id: string;\n\n  // @todo #643 not main movie attributes WIP\n\n  deliveryIds: string[];\n  ipId?: string;\n  directorNote?: string;\n  producerNote?: string;\n  goalBudget?: number;\n  movieCurrency?: string;\n  fundedBudget?: number;\n  breakeven?: number;\n  backendProfit?: number;\n  potentialRevenues?: number;\n  selectionCategories?: string;\n\n  // Sections\n  sales: MovieSaleRaw[]; //@todo 581 => move to subcollection\n  main: MovieMain;\n  story: MovieStory;\n  promotionalElements: MoviePromotionalElements;\n  promotionalDescription: MoviePromotionalDescription;\n  salesCast: MovieSalesCast;\n  salesInfo: MovieSalesInfoRaw;\n  versionInfo: MovieVersionInfo;\n  festivalPrizes: MovieFestivalPrizes;\n  salesAgentDeal: MovieSalesAgentDealRaw;\n}\n\n/** Document model of a Movie */\nexport interface MovieDocument extends MovieRaw {\n}\n\n/** Document model of a Movie with Dates (type Date) */\nexport interface MovieDocumentWithDates extends MovieRaw {\n}\n\n/** Public interface of a movie (to notifications). */\nexport interface PublicMovie {\n  id: string;\n  title: Title;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MoviePromotionalElements.html":{"url":"interfaces/MoviePromotionalElements.html","title":"interface - MoviePromotionalElements","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MoviePromotionalElements\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/movie/src/lib/movie/+state/movie.firestore.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        images\n                                \n                                \n                                        promotionalElements\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        images\n                                    \n                                \n                                \n                                    \n                                        images:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        promotionalElements\n                                    \n                                \n                                \n                                    \n                                        promotionalElements:         PromotionalElement[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PromotionalElement[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DateRangeRaw } from \"@blockframes/utils/date-range\";\nimport { firestore } from \"firebase/app\";\n\ntype Timestamp = firestore.Timestamp;\n\nexport interface MovieVersionInfo {\n  dubbings: string[],\n  subtitles: string[],\n}\n\ninterface MovieSalesAgentDealRaw {\n  rights: DateRangeRaw;\n  territories: string[],\n  medias: string[],\n}\n\nexport interface MovieSalesAgentDealDocumentWithDates extends MovieSalesAgentDealRaw {\n}\n\nexport interface MoviePromotionalDescription {\n  keyAssets: string[],\n  keywords: string[],\n}\n\nexport interface Prize {\n  name: string,\n  year: number,\n  prize?: string,\n}\n\nexport interface PromotionalElement {\n  label: string,\n  url: string\n}\n\nexport interface MoviePromotionalElements {\n  images: string[],\n  promotionalElements: PromotionalElement[],\n}\n\nexport interface Title {\n  original: string;\n  international?: string;\n}\n\nexport interface Credit {\n  firstName: string,\n  lastName?: string,\n  creditRole?: string,\n}\n\nexport interface MovieStory {\n  synopsis: string,\n  logline: string,\n}\n\nexport interface MovieSalesCast {\n  credits: Credit[],\n}\n\nexport interface MovieFestivalPrizes {\n  prizes: Prize[]\n}\n\ninterface MovieSaleRaw {\n  operatorName: string;\n  showOperatorName: boolean; //@todo #581 Promotional Distribution Deal\n  rights: DateRangeRaw;\n  territories: string[];\n  medias: string[];\n  dubbings: string[];\n  subtitles: string[];\n  exclusive: boolean;\n  price: number;\n}\n\nexport interface MovieSaleDocumentWithDates extends MovieSaleRaw {\n}\n\nexport interface MovieMain {\n  internalRef?: string,\n  isan?: string,\n  title: Title,\n  directors?: Credit[],\n  poster?: string,\n  productionYear?: number,\n  genres?: string[],\n  originCountries?: string[],\n  languages?: string[],\n  status?: string,\n  productionCompanies?: Credit[],\n  length?: number,\n  shortSynopsis?: string,\n}\n\ninterface MovieSalesInfoRaw {\n  scoring: string,\n  color: string,\n  europeanQualification: boolean,\n  pegi: string,\n  certifications: string[],\n  internationalPremiere: Prize,\n  originCountryReleaseDate: D,\n  broadcasterCoproducers: string[],\n}\n\nexport interface MovieSalesInfoDocumentWithDates extends MovieSalesInfoRaw {\n}\n\n/** Generic interface of a Movie */\ninterface MovieRaw {\n  // @todo #643 add new fields to Draw.io\n  _type: 'movies';\n  id: string;\n\n  // @todo #643 not main movie attributes WIP\n\n  deliveryIds: string[];\n  ipId?: string;\n  directorNote?: string;\n  producerNote?: string;\n  goalBudget?: number;\n  movieCurrency?: string;\n  fundedBudget?: number;\n  breakeven?: number;\n  backendProfit?: number;\n  potentialRevenues?: number;\n  selectionCategories?: string;\n\n  // Sections\n  sales: MovieSaleRaw[]; //@todo 581 => move to subcollection\n  main: MovieMain;\n  story: MovieStory;\n  promotionalElements: MoviePromotionalElements;\n  promotionalDescription: MoviePromotionalDescription;\n  salesCast: MovieSalesCast;\n  salesInfo: MovieSalesInfoRaw;\n  versionInfo: MovieVersionInfo;\n  festivalPrizes: MovieFestivalPrizes;\n  salesAgentDeal: MovieSalesAgentDealRaw;\n}\n\n/** Document model of a Movie */\nexport interface MovieDocument extends MovieRaw {\n}\n\n/** Document model of a Movie with Dates (type Date) */\nexport interface MovieDocumentWithDates extends MovieRaw {\n}\n\n/** Public interface of a movie (to notifications). */\nexport interface PublicMovie {\n  id: string;\n  title: Title;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MovieRaw.html":{"url":"interfaces/MovieRaw.html","title":"interface - MovieRaw","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MovieRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/movie/src/lib/movie/+state/movie.firestore.ts\n        \n\n            \n                Description\n            \n            \n                Generic interface of a Movie \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _type\n                                \n                                \n                                            Optional\n                                        backendProfit\n                                \n                                \n                                            Optional\n                                        breakeven\n                                \n                                \n                                        deliveryIds\n                                \n                                \n                                            Optional\n                                        directorNote\n                                \n                                \n                                        festivalPrizes\n                                \n                                \n                                            Optional\n                                        fundedBudget\n                                \n                                \n                                            Optional\n                                        goalBudget\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        ipId\n                                \n                                \n                                        main\n                                \n                                \n                                            Optional\n                                        movieCurrency\n                                \n                                \n                                            Optional\n                                        potentialRevenues\n                                \n                                \n                                            Optional\n                                        producerNote\n                                \n                                \n                                        promotionalDescription\n                                \n                                \n                                        promotionalElements\n                                \n                                \n                                        sales\n                                \n                                \n                                        salesAgentDeal\n                                \n                                \n                                        salesCast\n                                \n                                \n                                        salesInfo\n                                \n                                \n                                            Optional\n                                        selectionCategories\n                                \n                                \n                                        story\n                                \n                                \n                                        versionInfo\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _type\n                                    \n                                \n                                \n                                    \n                                        _type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        backendProfit\n                                    \n                                \n                                \n                                    \n                                        backendProfit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        breakeven\n                                    \n                                \n                                \n                                    \n                                        breakeven:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deliveryIds\n                                    \n                                \n                                \n                                    \n                                        deliveryIds:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        directorNote\n                                    \n                                \n                                \n                                    \n                                        directorNote:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        festivalPrizes\n                                    \n                                \n                                \n                                    \n                                        festivalPrizes:         MovieFestivalPrizes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MovieFestivalPrizes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fundedBudget\n                                    \n                                \n                                \n                                    \n                                        fundedBudget:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        goalBudget\n                                    \n                                \n                                \n                                    \n                                        goalBudget:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ipId\n                                    \n                                \n                                \n                                    \n                                        ipId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        main\n                                    \n                                \n                                \n                                    \n                                        main:         MovieMain\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MovieMain\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        movieCurrency\n                                    \n                                \n                                \n                                    \n                                        movieCurrency:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        potentialRevenues\n                                    \n                                \n                                \n                                    \n                                        potentialRevenues:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        producerNote\n                                    \n                                \n                                \n                                    \n                                        producerNote:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        promotionalDescription\n                                    \n                                \n                                \n                                    \n                                        promotionalDescription:         MoviePromotionalDescription\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MoviePromotionalDescription\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        promotionalElements\n                                    \n                                \n                                \n                                    \n                                        promotionalElements:         MoviePromotionalElements\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MoviePromotionalElements\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sales\n                                    \n                                \n                                \n                                    \n                                        sales:         MovieSaleRaw[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MovieSaleRaw[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        salesAgentDeal\n                                    \n                                \n                                \n                                    \n                                        salesAgentDeal:         MovieSalesAgentDealRaw\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MovieSalesAgentDealRaw\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        salesCast\n                                    \n                                \n                                \n                                    \n                                        salesCast:         MovieSalesCast\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MovieSalesCast\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        salesInfo\n                                    \n                                \n                                \n                                    \n                                        salesInfo:         MovieSalesInfoRaw\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MovieSalesInfoRaw\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectionCategories\n                                    \n                                \n                                \n                                    \n                                        selectionCategories:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        story\n                                    \n                                \n                                \n                                    \n                                        story:         MovieStory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MovieStory\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        versionInfo\n                                    \n                                \n                                \n                                    \n                                        versionInfo:         MovieVersionInfo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MovieVersionInfo\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DateRangeRaw } from \"@blockframes/utils/date-range\";\nimport { firestore } from \"firebase/app\";\n\ntype Timestamp = firestore.Timestamp;\n\nexport interface MovieVersionInfo {\n  dubbings: string[],\n  subtitles: string[],\n}\n\ninterface MovieSalesAgentDealRaw {\n  rights: DateRangeRaw;\n  territories: string[],\n  medias: string[],\n}\n\nexport interface MovieSalesAgentDealDocumentWithDates extends MovieSalesAgentDealRaw {\n}\n\nexport interface MoviePromotionalDescription {\n  keyAssets: string[],\n  keywords: string[],\n}\n\nexport interface Prize {\n  name: string,\n  year: number,\n  prize?: string,\n}\n\nexport interface PromotionalElement {\n  label: string,\n  url: string\n}\n\nexport interface MoviePromotionalElements {\n  images: string[],\n  promotionalElements: PromotionalElement[],\n}\n\nexport interface Title {\n  original: string;\n  international?: string;\n}\n\nexport interface Credit {\n  firstName: string,\n  lastName?: string,\n  creditRole?: string,\n}\n\nexport interface MovieStory {\n  synopsis: string,\n  logline: string,\n}\n\nexport interface MovieSalesCast {\n  credits: Credit[],\n}\n\nexport interface MovieFestivalPrizes {\n  prizes: Prize[]\n}\n\ninterface MovieSaleRaw {\n  operatorName: string;\n  showOperatorName: boolean; //@todo #581 Promotional Distribution Deal\n  rights: DateRangeRaw;\n  territories: string[];\n  medias: string[];\n  dubbings: string[];\n  subtitles: string[];\n  exclusive: boolean;\n  price: number;\n}\n\nexport interface MovieSaleDocumentWithDates extends MovieSaleRaw {\n}\n\nexport interface MovieMain {\n  internalRef?: string,\n  isan?: string,\n  title: Title,\n  directors?: Credit[],\n  poster?: string,\n  productionYear?: number,\n  genres?: string[],\n  originCountries?: string[],\n  languages?: string[],\n  status?: string,\n  productionCompanies?: Credit[],\n  length?: number,\n  shortSynopsis?: string,\n}\n\ninterface MovieSalesInfoRaw {\n  scoring: string,\n  color: string,\n  europeanQualification: boolean,\n  pegi: string,\n  certifications: string[],\n  internationalPremiere: Prize,\n  originCountryReleaseDate: D,\n  broadcasterCoproducers: string[],\n}\n\nexport interface MovieSalesInfoDocumentWithDates extends MovieSalesInfoRaw {\n}\n\n/** Generic interface of a Movie */\ninterface MovieRaw {\n  // @todo #643 add new fields to Draw.io\n  _type: 'movies';\n  id: string;\n\n  // @todo #643 not main movie attributes WIP\n\n  deliveryIds: string[];\n  ipId?: string;\n  directorNote?: string;\n  producerNote?: string;\n  goalBudget?: number;\n  movieCurrency?: string;\n  fundedBudget?: number;\n  breakeven?: number;\n  backendProfit?: number;\n  potentialRevenues?: number;\n  selectionCategories?: string;\n\n  // Sections\n  sales: MovieSaleRaw[]; //@todo 581 => move to subcollection\n  main: MovieMain;\n  story: MovieStory;\n  promotionalElements: MoviePromotionalElements;\n  promotionalDescription: MoviePromotionalDescription;\n  salesCast: MovieSalesCast;\n  salesInfo: MovieSalesInfoRaw;\n  versionInfo: MovieVersionInfo;\n  festivalPrizes: MovieFestivalPrizes;\n  salesAgentDeal: MovieSalesAgentDealRaw;\n}\n\n/** Document model of a Movie */\nexport interface MovieDocument extends MovieRaw {\n}\n\n/** Document model of a Movie with Dates (type Date) */\nexport interface MovieDocumentWithDates extends MovieRaw {\n}\n\n/** Public interface of a movie (to notifications). */\nexport interface PublicMovie {\n  id: string;\n  title: Title;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MovieSaleDocumentWithDates.html":{"url":"interfaces/MovieSaleDocumentWithDates.html","title":"interface - MovieSaleDocumentWithDates","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MovieSaleDocumentWithDates\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/movie/src/lib/movie/+state/movie.firestore.ts\n        \n\n\n            \n                Extends\n            \n            \n                        MovieSaleRaw\n            \n\n\n\n\n    \n\n\n    \n        import { DateRangeRaw } from \"@blockframes/utils/date-range\";\nimport { firestore } from \"firebase/app\";\n\ntype Timestamp = firestore.Timestamp;\n\nexport interface MovieVersionInfo {\n  dubbings: string[],\n  subtitles: string[],\n}\n\ninterface MovieSalesAgentDealRaw {\n  rights: DateRangeRaw;\n  territories: string[],\n  medias: string[],\n}\n\nexport interface MovieSalesAgentDealDocumentWithDates extends MovieSalesAgentDealRaw {\n}\n\nexport interface MoviePromotionalDescription {\n  keyAssets: string[],\n  keywords: string[],\n}\n\nexport interface Prize {\n  name: string,\n  year: number,\n  prize?: string,\n}\n\nexport interface PromotionalElement {\n  label: string,\n  url: string\n}\n\nexport interface MoviePromotionalElements {\n  images: string[],\n  promotionalElements: PromotionalElement[],\n}\n\nexport interface Title {\n  original: string;\n  international?: string;\n}\n\nexport interface Credit {\n  firstName: string,\n  lastName?: string,\n  creditRole?: string,\n}\n\nexport interface MovieStory {\n  synopsis: string,\n  logline: string,\n}\n\nexport interface MovieSalesCast {\n  credits: Credit[],\n}\n\nexport interface MovieFestivalPrizes {\n  prizes: Prize[]\n}\n\ninterface MovieSaleRaw {\n  operatorName: string;\n  showOperatorName: boolean; //@todo #581 Promotional Distribution Deal\n  rights: DateRangeRaw;\n  territories: string[];\n  medias: string[];\n  dubbings: string[];\n  subtitles: string[];\n  exclusive: boolean;\n  price: number;\n}\n\nexport interface MovieSaleDocumentWithDates extends MovieSaleRaw {\n}\n\nexport interface MovieMain {\n  internalRef?: string,\n  isan?: string,\n  title: Title,\n  directors?: Credit[],\n  poster?: string,\n  productionYear?: number,\n  genres?: string[],\n  originCountries?: string[],\n  languages?: string[],\n  status?: string,\n  productionCompanies?: Credit[],\n  length?: number,\n  shortSynopsis?: string,\n}\n\ninterface MovieSalesInfoRaw {\n  scoring: string,\n  color: string,\n  europeanQualification: boolean,\n  pegi: string,\n  certifications: string[],\n  internationalPremiere: Prize,\n  originCountryReleaseDate: D,\n  broadcasterCoproducers: string[],\n}\n\nexport interface MovieSalesInfoDocumentWithDates extends MovieSalesInfoRaw {\n}\n\n/** Generic interface of a Movie */\ninterface MovieRaw {\n  // @todo #643 add new fields to Draw.io\n  _type: 'movies';\n  id: string;\n\n  // @todo #643 not main movie attributes WIP\n\n  deliveryIds: string[];\n  ipId?: string;\n  directorNote?: string;\n  producerNote?: string;\n  goalBudget?: number;\n  movieCurrency?: string;\n  fundedBudget?: number;\n  breakeven?: number;\n  backendProfit?: number;\n  potentialRevenues?: number;\n  selectionCategories?: string;\n\n  // Sections\n  sales: MovieSaleRaw[]; //@todo 581 => move to subcollection\n  main: MovieMain;\n  story: MovieStory;\n  promotionalElements: MoviePromotionalElements;\n  promotionalDescription: MoviePromotionalDescription;\n  salesCast: MovieSalesCast;\n  salesInfo: MovieSalesInfoRaw;\n  versionInfo: MovieVersionInfo;\n  festivalPrizes: MovieFestivalPrizes;\n  salesAgentDeal: MovieSalesAgentDealRaw;\n}\n\n/** Document model of a Movie */\nexport interface MovieDocument extends MovieRaw {\n}\n\n/** Document model of a Movie with Dates (type Date) */\nexport interface MovieDocumentWithDates extends MovieRaw {\n}\n\n/** Public interface of a movie (to notifications). */\nexport interface PublicMovie {\n  id: string;\n  title: Title;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MovieSaleRaw.html":{"url":"interfaces/MovieSaleRaw.html","title":"interface - MovieSaleRaw","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MovieSaleRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/movie/src/lib/movie/+state/movie.firestore.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dubbings\n                                \n                                \n                                        exclusive\n                                \n                                \n                                        medias\n                                \n                                \n                                        operatorName\n                                \n                                \n                                        price\n                                \n                                \n                                        rights\n                                \n                                \n                                        showOperatorName\n                                \n                                \n                                        subtitles\n                                \n                                \n                                        territories\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dubbings\n                                    \n                                \n                                \n                                    \n                                        dubbings:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exclusive\n                                    \n                                \n                                \n                                    \n                                        exclusive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        medias\n                                    \n                                \n                                \n                                    \n                                        medias:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operatorName\n                                    \n                                \n                                \n                                    \n                                        operatorName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rights\n                                    \n                                \n                                \n                                    \n                                        rights:     DateRangeRaw\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DateRangeRaw\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showOperatorName\n                                    \n                                \n                                \n                                    \n                                        showOperatorName:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subtitles\n                                    \n                                \n                                \n                                    \n                                        subtitles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        territories\n                                    \n                                \n                                \n                                    \n                                        territories:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DateRangeRaw } from \"@blockframes/utils/date-range\";\nimport { firestore } from \"firebase/app\";\n\ntype Timestamp = firestore.Timestamp;\n\nexport interface MovieVersionInfo {\n  dubbings: string[],\n  subtitles: string[],\n}\n\ninterface MovieSalesAgentDealRaw {\n  rights: DateRangeRaw;\n  territories: string[],\n  medias: string[],\n}\n\nexport interface MovieSalesAgentDealDocumentWithDates extends MovieSalesAgentDealRaw {\n}\n\nexport interface MoviePromotionalDescription {\n  keyAssets: string[],\n  keywords: string[],\n}\n\nexport interface Prize {\n  name: string,\n  year: number,\n  prize?: string,\n}\n\nexport interface PromotionalElement {\n  label: string,\n  url: string\n}\n\nexport interface MoviePromotionalElements {\n  images: string[],\n  promotionalElements: PromotionalElement[],\n}\n\nexport interface Title {\n  original: string;\n  international?: string;\n}\n\nexport interface Credit {\n  firstName: string,\n  lastName?: string,\n  creditRole?: string,\n}\n\nexport interface MovieStory {\n  synopsis: string,\n  logline: string,\n}\n\nexport interface MovieSalesCast {\n  credits: Credit[],\n}\n\nexport interface MovieFestivalPrizes {\n  prizes: Prize[]\n}\n\ninterface MovieSaleRaw {\n  operatorName: string;\n  showOperatorName: boolean; //@todo #581 Promotional Distribution Deal\n  rights: DateRangeRaw;\n  territories: string[];\n  medias: string[];\n  dubbings: string[];\n  subtitles: string[];\n  exclusive: boolean;\n  price: number;\n}\n\nexport interface MovieSaleDocumentWithDates extends MovieSaleRaw {\n}\n\nexport interface MovieMain {\n  internalRef?: string,\n  isan?: string,\n  title: Title,\n  directors?: Credit[],\n  poster?: string,\n  productionYear?: number,\n  genres?: string[],\n  originCountries?: string[],\n  languages?: string[],\n  status?: string,\n  productionCompanies?: Credit[],\n  length?: number,\n  shortSynopsis?: string,\n}\n\ninterface MovieSalesInfoRaw {\n  scoring: string,\n  color: string,\n  europeanQualification: boolean,\n  pegi: string,\n  certifications: string[],\n  internationalPremiere: Prize,\n  originCountryReleaseDate: D,\n  broadcasterCoproducers: string[],\n}\n\nexport interface MovieSalesInfoDocumentWithDates extends MovieSalesInfoRaw {\n}\n\n/** Generic interface of a Movie */\ninterface MovieRaw {\n  // @todo #643 add new fields to Draw.io\n  _type: 'movies';\n  id: string;\n\n  // @todo #643 not main movie attributes WIP\n\n  deliveryIds: string[];\n  ipId?: string;\n  directorNote?: string;\n  producerNote?: string;\n  goalBudget?: number;\n  movieCurrency?: string;\n  fundedBudget?: number;\n  breakeven?: number;\n  backendProfit?: number;\n  potentialRevenues?: number;\n  selectionCategories?: string;\n\n  // Sections\n  sales: MovieSaleRaw[]; //@todo 581 => move to subcollection\n  main: MovieMain;\n  story: MovieStory;\n  promotionalElements: MoviePromotionalElements;\n  promotionalDescription: MoviePromotionalDescription;\n  salesCast: MovieSalesCast;\n  salesInfo: MovieSalesInfoRaw;\n  versionInfo: MovieVersionInfo;\n  festivalPrizes: MovieFestivalPrizes;\n  salesAgentDeal: MovieSalesAgentDealRaw;\n}\n\n/** Document model of a Movie */\nexport interface MovieDocument extends MovieRaw {\n}\n\n/** Document model of a Movie with Dates (type Date) */\nexport interface MovieDocumentWithDates extends MovieRaw {\n}\n\n/** Public interface of a movie (to notifications). */\nexport interface PublicMovie {\n  id: string;\n  title: Title;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MovieSalesAgentDealDocumentWithDates.html":{"url":"interfaces/MovieSalesAgentDealDocumentWithDates.html","title":"interface - MovieSalesAgentDealDocumentWithDates","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MovieSalesAgentDealDocumentWithDates\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/movie/src/lib/movie/+state/movie.firestore.ts\n        \n\n\n            \n                Extends\n            \n            \n                        MovieSalesAgentDealRaw\n            \n\n\n\n\n    \n\n\n    \n        import { DateRangeRaw } from \"@blockframes/utils/date-range\";\nimport { firestore } from \"firebase/app\";\n\ntype Timestamp = firestore.Timestamp;\n\nexport interface MovieVersionInfo {\n  dubbings: string[],\n  subtitles: string[],\n}\n\ninterface MovieSalesAgentDealRaw {\n  rights: DateRangeRaw;\n  territories: string[],\n  medias: string[],\n}\n\nexport interface MovieSalesAgentDealDocumentWithDates extends MovieSalesAgentDealRaw {\n}\n\nexport interface MoviePromotionalDescription {\n  keyAssets: string[],\n  keywords: string[],\n}\n\nexport interface Prize {\n  name: string,\n  year: number,\n  prize?: string,\n}\n\nexport interface PromotionalElement {\n  label: string,\n  url: string\n}\n\nexport interface MoviePromotionalElements {\n  images: string[],\n  promotionalElements: PromotionalElement[],\n}\n\nexport interface Title {\n  original: string;\n  international?: string;\n}\n\nexport interface Credit {\n  firstName: string,\n  lastName?: string,\n  creditRole?: string,\n}\n\nexport interface MovieStory {\n  synopsis: string,\n  logline: string,\n}\n\nexport interface MovieSalesCast {\n  credits: Credit[],\n}\n\nexport interface MovieFestivalPrizes {\n  prizes: Prize[]\n}\n\ninterface MovieSaleRaw {\n  operatorName: string;\n  showOperatorName: boolean; //@todo #581 Promotional Distribution Deal\n  rights: DateRangeRaw;\n  territories: string[];\n  medias: string[];\n  dubbings: string[];\n  subtitles: string[];\n  exclusive: boolean;\n  price: number;\n}\n\nexport interface MovieSaleDocumentWithDates extends MovieSaleRaw {\n}\n\nexport interface MovieMain {\n  internalRef?: string,\n  isan?: string,\n  title: Title,\n  directors?: Credit[],\n  poster?: string,\n  productionYear?: number,\n  genres?: string[],\n  originCountries?: string[],\n  languages?: string[],\n  status?: string,\n  productionCompanies?: Credit[],\n  length?: number,\n  shortSynopsis?: string,\n}\n\ninterface MovieSalesInfoRaw {\n  scoring: string,\n  color: string,\n  europeanQualification: boolean,\n  pegi: string,\n  certifications: string[],\n  internationalPremiere: Prize,\n  originCountryReleaseDate: D,\n  broadcasterCoproducers: string[],\n}\n\nexport interface MovieSalesInfoDocumentWithDates extends MovieSalesInfoRaw {\n}\n\n/** Generic interface of a Movie */\ninterface MovieRaw {\n  // @todo #643 add new fields to Draw.io\n  _type: 'movies';\n  id: string;\n\n  // @todo #643 not main movie attributes WIP\n\n  deliveryIds: string[];\n  ipId?: string;\n  directorNote?: string;\n  producerNote?: string;\n  goalBudget?: number;\n  movieCurrency?: string;\n  fundedBudget?: number;\n  breakeven?: number;\n  backendProfit?: number;\n  potentialRevenues?: number;\n  selectionCategories?: string;\n\n  // Sections\n  sales: MovieSaleRaw[]; //@todo 581 => move to subcollection\n  main: MovieMain;\n  story: MovieStory;\n  promotionalElements: MoviePromotionalElements;\n  promotionalDescription: MoviePromotionalDescription;\n  salesCast: MovieSalesCast;\n  salesInfo: MovieSalesInfoRaw;\n  versionInfo: MovieVersionInfo;\n  festivalPrizes: MovieFestivalPrizes;\n  salesAgentDeal: MovieSalesAgentDealRaw;\n}\n\n/** Document model of a Movie */\nexport interface MovieDocument extends MovieRaw {\n}\n\n/** Document model of a Movie with Dates (type Date) */\nexport interface MovieDocumentWithDates extends MovieRaw {\n}\n\n/** Public interface of a movie (to notifications). */\nexport interface PublicMovie {\n  id: string;\n  title: Title;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MovieSalesAgentDealRaw.html":{"url":"interfaces/MovieSalesAgentDealRaw.html","title":"interface - MovieSalesAgentDealRaw","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MovieSalesAgentDealRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/movie/src/lib/movie/+state/movie.firestore.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        medias\n                                \n                                \n                                        rights\n                                \n                                \n                                        territories\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        medias\n                                    \n                                \n                                \n                                    \n                                        medias:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rights\n                                    \n                                \n                                \n                                    \n                                        rights:     DateRangeRaw\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DateRangeRaw\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        territories\n                                    \n                                \n                                \n                                    \n                                        territories:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DateRangeRaw } from \"@blockframes/utils/date-range\";\nimport { firestore } from \"firebase/app\";\n\ntype Timestamp = firestore.Timestamp;\n\nexport interface MovieVersionInfo {\n  dubbings: string[],\n  subtitles: string[],\n}\n\ninterface MovieSalesAgentDealRaw {\n  rights: DateRangeRaw;\n  territories: string[],\n  medias: string[],\n}\n\nexport interface MovieSalesAgentDealDocumentWithDates extends MovieSalesAgentDealRaw {\n}\n\nexport interface MoviePromotionalDescription {\n  keyAssets: string[],\n  keywords: string[],\n}\n\nexport interface Prize {\n  name: string,\n  year: number,\n  prize?: string,\n}\n\nexport interface PromotionalElement {\n  label: string,\n  url: string\n}\n\nexport interface MoviePromotionalElements {\n  images: string[],\n  promotionalElements: PromotionalElement[],\n}\n\nexport interface Title {\n  original: string;\n  international?: string;\n}\n\nexport interface Credit {\n  firstName: string,\n  lastName?: string,\n  creditRole?: string,\n}\n\nexport interface MovieStory {\n  synopsis: string,\n  logline: string,\n}\n\nexport interface MovieSalesCast {\n  credits: Credit[],\n}\n\nexport interface MovieFestivalPrizes {\n  prizes: Prize[]\n}\n\ninterface MovieSaleRaw {\n  operatorName: string;\n  showOperatorName: boolean; //@todo #581 Promotional Distribution Deal\n  rights: DateRangeRaw;\n  territories: string[];\n  medias: string[];\n  dubbings: string[];\n  subtitles: string[];\n  exclusive: boolean;\n  price: number;\n}\n\nexport interface MovieSaleDocumentWithDates extends MovieSaleRaw {\n}\n\nexport interface MovieMain {\n  internalRef?: string,\n  isan?: string,\n  title: Title,\n  directors?: Credit[],\n  poster?: string,\n  productionYear?: number,\n  genres?: string[],\n  originCountries?: string[],\n  languages?: string[],\n  status?: string,\n  productionCompanies?: Credit[],\n  length?: number,\n  shortSynopsis?: string,\n}\n\ninterface MovieSalesInfoRaw {\n  scoring: string,\n  color: string,\n  europeanQualification: boolean,\n  pegi: string,\n  certifications: string[],\n  internationalPremiere: Prize,\n  originCountryReleaseDate: D,\n  broadcasterCoproducers: string[],\n}\n\nexport interface MovieSalesInfoDocumentWithDates extends MovieSalesInfoRaw {\n}\n\n/** Generic interface of a Movie */\ninterface MovieRaw {\n  // @todo #643 add new fields to Draw.io\n  _type: 'movies';\n  id: string;\n\n  // @todo #643 not main movie attributes WIP\n\n  deliveryIds: string[];\n  ipId?: string;\n  directorNote?: string;\n  producerNote?: string;\n  goalBudget?: number;\n  movieCurrency?: string;\n  fundedBudget?: number;\n  breakeven?: number;\n  backendProfit?: number;\n  potentialRevenues?: number;\n  selectionCategories?: string;\n\n  // Sections\n  sales: MovieSaleRaw[]; //@todo 581 => move to subcollection\n  main: MovieMain;\n  story: MovieStory;\n  promotionalElements: MoviePromotionalElements;\n  promotionalDescription: MoviePromotionalDescription;\n  salesCast: MovieSalesCast;\n  salesInfo: MovieSalesInfoRaw;\n  versionInfo: MovieVersionInfo;\n  festivalPrizes: MovieFestivalPrizes;\n  salesAgentDeal: MovieSalesAgentDealRaw;\n}\n\n/** Document model of a Movie */\nexport interface MovieDocument extends MovieRaw {\n}\n\n/** Document model of a Movie with Dates (type Date) */\nexport interface MovieDocumentWithDates extends MovieRaw {\n}\n\n/** Public interface of a movie (to notifications). */\nexport interface PublicMovie {\n  id: string;\n  title: Title;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MovieSalesCast.html":{"url":"interfaces/MovieSalesCast.html","title":"interface - MovieSalesCast","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MovieSalesCast\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/movie/src/lib/movie/+state/movie.firestore.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        credits\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        credits\n                                    \n                                \n                                \n                                    \n                                        credits:         Credit[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Credit[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DateRangeRaw } from \"@blockframes/utils/date-range\";\nimport { firestore } from \"firebase/app\";\n\ntype Timestamp = firestore.Timestamp;\n\nexport interface MovieVersionInfo {\n  dubbings: string[],\n  subtitles: string[],\n}\n\ninterface MovieSalesAgentDealRaw {\n  rights: DateRangeRaw;\n  territories: string[],\n  medias: string[],\n}\n\nexport interface MovieSalesAgentDealDocumentWithDates extends MovieSalesAgentDealRaw {\n}\n\nexport interface MoviePromotionalDescription {\n  keyAssets: string[],\n  keywords: string[],\n}\n\nexport interface Prize {\n  name: string,\n  year: number,\n  prize?: string,\n}\n\nexport interface PromotionalElement {\n  label: string,\n  url: string\n}\n\nexport interface MoviePromotionalElements {\n  images: string[],\n  promotionalElements: PromotionalElement[],\n}\n\nexport interface Title {\n  original: string;\n  international?: string;\n}\n\nexport interface Credit {\n  firstName: string,\n  lastName?: string,\n  creditRole?: string,\n}\n\nexport interface MovieStory {\n  synopsis: string,\n  logline: string,\n}\n\nexport interface MovieSalesCast {\n  credits: Credit[],\n}\n\nexport interface MovieFestivalPrizes {\n  prizes: Prize[]\n}\n\ninterface MovieSaleRaw {\n  operatorName: string;\n  showOperatorName: boolean; //@todo #581 Promotional Distribution Deal\n  rights: DateRangeRaw;\n  territories: string[];\n  medias: string[];\n  dubbings: string[];\n  subtitles: string[];\n  exclusive: boolean;\n  price: number;\n}\n\nexport interface MovieSaleDocumentWithDates extends MovieSaleRaw {\n}\n\nexport interface MovieMain {\n  internalRef?: string,\n  isan?: string,\n  title: Title,\n  directors?: Credit[],\n  poster?: string,\n  productionYear?: number,\n  genres?: string[],\n  originCountries?: string[],\n  languages?: string[],\n  status?: string,\n  productionCompanies?: Credit[],\n  length?: number,\n  shortSynopsis?: string,\n}\n\ninterface MovieSalesInfoRaw {\n  scoring: string,\n  color: string,\n  europeanQualification: boolean,\n  pegi: string,\n  certifications: string[],\n  internationalPremiere: Prize,\n  originCountryReleaseDate: D,\n  broadcasterCoproducers: string[],\n}\n\nexport interface MovieSalesInfoDocumentWithDates extends MovieSalesInfoRaw {\n}\n\n/** Generic interface of a Movie */\ninterface MovieRaw {\n  // @todo #643 add new fields to Draw.io\n  _type: 'movies';\n  id: string;\n\n  // @todo #643 not main movie attributes WIP\n\n  deliveryIds: string[];\n  ipId?: string;\n  directorNote?: string;\n  producerNote?: string;\n  goalBudget?: number;\n  movieCurrency?: string;\n  fundedBudget?: number;\n  breakeven?: number;\n  backendProfit?: number;\n  potentialRevenues?: number;\n  selectionCategories?: string;\n\n  // Sections\n  sales: MovieSaleRaw[]; //@todo 581 => move to subcollection\n  main: MovieMain;\n  story: MovieStory;\n  promotionalElements: MoviePromotionalElements;\n  promotionalDescription: MoviePromotionalDescription;\n  salesCast: MovieSalesCast;\n  salesInfo: MovieSalesInfoRaw;\n  versionInfo: MovieVersionInfo;\n  festivalPrizes: MovieFestivalPrizes;\n  salesAgentDeal: MovieSalesAgentDealRaw;\n}\n\n/** Document model of a Movie */\nexport interface MovieDocument extends MovieRaw {\n}\n\n/** Document model of a Movie with Dates (type Date) */\nexport interface MovieDocumentWithDates extends MovieRaw {\n}\n\n/** Public interface of a movie (to notifications). */\nexport interface PublicMovie {\n  id: string;\n  title: Title;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MovieSalesInfoDocumentWithDates.html":{"url":"interfaces/MovieSalesInfoDocumentWithDates.html","title":"interface - MovieSalesInfoDocumentWithDates","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MovieSalesInfoDocumentWithDates\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/movie/src/lib/movie/+state/movie.firestore.ts\n        \n\n\n            \n                Extends\n            \n            \n                        MovieSalesInfoRaw\n            \n\n\n\n\n    \n\n\n    \n        import { DateRangeRaw } from \"@blockframes/utils/date-range\";\nimport { firestore } from \"firebase/app\";\n\ntype Timestamp = firestore.Timestamp;\n\nexport interface MovieVersionInfo {\n  dubbings: string[],\n  subtitles: string[],\n}\n\ninterface MovieSalesAgentDealRaw {\n  rights: DateRangeRaw;\n  territories: string[],\n  medias: string[],\n}\n\nexport interface MovieSalesAgentDealDocumentWithDates extends MovieSalesAgentDealRaw {\n}\n\nexport interface MoviePromotionalDescription {\n  keyAssets: string[],\n  keywords: string[],\n}\n\nexport interface Prize {\n  name: string,\n  year: number,\n  prize?: string,\n}\n\nexport interface PromotionalElement {\n  label: string,\n  url: string\n}\n\nexport interface MoviePromotionalElements {\n  images: string[],\n  promotionalElements: PromotionalElement[],\n}\n\nexport interface Title {\n  original: string;\n  international?: string;\n}\n\nexport interface Credit {\n  firstName: string,\n  lastName?: string,\n  creditRole?: string,\n}\n\nexport interface MovieStory {\n  synopsis: string,\n  logline: string,\n}\n\nexport interface MovieSalesCast {\n  credits: Credit[],\n}\n\nexport interface MovieFestivalPrizes {\n  prizes: Prize[]\n}\n\ninterface MovieSaleRaw {\n  operatorName: string;\n  showOperatorName: boolean; //@todo #581 Promotional Distribution Deal\n  rights: DateRangeRaw;\n  territories: string[];\n  medias: string[];\n  dubbings: string[];\n  subtitles: string[];\n  exclusive: boolean;\n  price: number;\n}\n\nexport interface MovieSaleDocumentWithDates extends MovieSaleRaw {\n}\n\nexport interface MovieMain {\n  internalRef?: string,\n  isan?: string,\n  title: Title,\n  directors?: Credit[],\n  poster?: string,\n  productionYear?: number,\n  genres?: string[],\n  originCountries?: string[],\n  languages?: string[],\n  status?: string,\n  productionCompanies?: Credit[],\n  length?: number,\n  shortSynopsis?: string,\n}\n\ninterface MovieSalesInfoRaw {\n  scoring: string,\n  color: string,\n  europeanQualification: boolean,\n  pegi: string,\n  certifications: string[],\n  internationalPremiere: Prize,\n  originCountryReleaseDate: D,\n  broadcasterCoproducers: string[],\n}\n\nexport interface MovieSalesInfoDocumentWithDates extends MovieSalesInfoRaw {\n}\n\n/** Generic interface of a Movie */\ninterface MovieRaw {\n  // @todo #643 add new fields to Draw.io\n  _type: 'movies';\n  id: string;\n\n  // @todo #643 not main movie attributes WIP\n\n  deliveryIds: string[];\n  ipId?: string;\n  directorNote?: string;\n  producerNote?: string;\n  goalBudget?: number;\n  movieCurrency?: string;\n  fundedBudget?: number;\n  breakeven?: number;\n  backendProfit?: number;\n  potentialRevenues?: number;\n  selectionCategories?: string;\n\n  // Sections\n  sales: MovieSaleRaw[]; //@todo 581 => move to subcollection\n  main: MovieMain;\n  story: MovieStory;\n  promotionalElements: MoviePromotionalElements;\n  promotionalDescription: MoviePromotionalDescription;\n  salesCast: MovieSalesCast;\n  salesInfo: MovieSalesInfoRaw;\n  versionInfo: MovieVersionInfo;\n  festivalPrizes: MovieFestivalPrizes;\n  salesAgentDeal: MovieSalesAgentDealRaw;\n}\n\n/** Document model of a Movie */\nexport interface MovieDocument extends MovieRaw {\n}\n\n/** Document model of a Movie with Dates (type Date) */\nexport interface MovieDocumentWithDates extends MovieRaw {\n}\n\n/** Public interface of a movie (to notifications). */\nexport interface PublicMovie {\n  id: string;\n  title: Title;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MovieSalesInfoRaw.html":{"url":"interfaces/MovieSalesInfoRaw.html","title":"interface - MovieSalesInfoRaw","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MovieSalesInfoRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/movie/src/lib/movie/+state/movie.firestore.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        broadcasterCoproducers\n                                \n                                \n                                        certifications\n                                \n                                \n                                        color\n                                \n                                \n                                        europeanQualification\n                                \n                                \n                                        internationalPremiere\n                                \n                                \n                                        originCountryReleaseDate\n                                \n                                \n                                        pegi\n                                \n                                \n                                        scoring\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        broadcasterCoproducers\n                                    \n                                \n                                \n                                    \n                                        broadcasterCoproducers:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        certifications\n                                    \n                                \n                                \n                                    \n                                        certifications:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        europeanQualification\n                                    \n                                \n                                \n                                    \n                                        europeanQualification:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        internationalPremiere\n                                    \n                                \n                                \n                                    \n                                        internationalPremiere:         Prize\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Prize\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        originCountryReleaseDate\n                                    \n                                \n                                \n                                    \n                                        originCountryReleaseDate:     D\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     D\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pegi\n                                    \n                                \n                                \n                                    \n                                        pegi:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scoring\n                                    \n                                \n                                \n                                    \n                                        scoring:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DateRangeRaw } from \"@blockframes/utils/date-range\";\nimport { firestore } from \"firebase/app\";\n\ntype Timestamp = firestore.Timestamp;\n\nexport interface MovieVersionInfo {\n  dubbings: string[],\n  subtitles: string[],\n}\n\ninterface MovieSalesAgentDealRaw {\n  rights: DateRangeRaw;\n  territories: string[],\n  medias: string[],\n}\n\nexport interface MovieSalesAgentDealDocumentWithDates extends MovieSalesAgentDealRaw {\n}\n\nexport interface MoviePromotionalDescription {\n  keyAssets: string[],\n  keywords: string[],\n}\n\nexport interface Prize {\n  name: string,\n  year: number,\n  prize?: string,\n}\n\nexport interface PromotionalElement {\n  label: string,\n  url: string\n}\n\nexport interface MoviePromotionalElements {\n  images: string[],\n  promotionalElements: PromotionalElement[],\n}\n\nexport interface Title {\n  original: string;\n  international?: string;\n}\n\nexport interface Credit {\n  firstName: string,\n  lastName?: string,\n  creditRole?: string,\n}\n\nexport interface MovieStory {\n  synopsis: string,\n  logline: string,\n}\n\nexport interface MovieSalesCast {\n  credits: Credit[],\n}\n\nexport interface MovieFestivalPrizes {\n  prizes: Prize[]\n}\n\ninterface MovieSaleRaw {\n  operatorName: string;\n  showOperatorName: boolean; //@todo #581 Promotional Distribution Deal\n  rights: DateRangeRaw;\n  territories: string[];\n  medias: string[];\n  dubbings: string[];\n  subtitles: string[];\n  exclusive: boolean;\n  price: number;\n}\n\nexport interface MovieSaleDocumentWithDates extends MovieSaleRaw {\n}\n\nexport interface MovieMain {\n  internalRef?: string,\n  isan?: string,\n  title: Title,\n  directors?: Credit[],\n  poster?: string,\n  productionYear?: number,\n  genres?: string[],\n  originCountries?: string[],\n  languages?: string[],\n  status?: string,\n  productionCompanies?: Credit[],\n  length?: number,\n  shortSynopsis?: string,\n}\n\ninterface MovieSalesInfoRaw {\n  scoring: string,\n  color: string,\n  europeanQualification: boolean,\n  pegi: string,\n  certifications: string[],\n  internationalPremiere: Prize,\n  originCountryReleaseDate: D,\n  broadcasterCoproducers: string[],\n}\n\nexport interface MovieSalesInfoDocumentWithDates extends MovieSalesInfoRaw {\n}\n\n/** Generic interface of a Movie */\ninterface MovieRaw {\n  // @todo #643 add new fields to Draw.io\n  _type: 'movies';\n  id: string;\n\n  // @todo #643 not main movie attributes WIP\n\n  deliveryIds: string[];\n  ipId?: string;\n  directorNote?: string;\n  producerNote?: string;\n  goalBudget?: number;\n  movieCurrency?: string;\n  fundedBudget?: number;\n  breakeven?: number;\n  backendProfit?: number;\n  potentialRevenues?: number;\n  selectionCategories?: string;\n\n  // Sections\n  sales: MovieSaleRaw[]; //@todo 581 => move to subcollection\n  main: MovieMain;\n  story: MovieStory;\n  promotionalElements: MoviePromotionalElements;\n  promotionalDescription: MoviePromotionalDescription;\n  salesCast: MovieSalesCast;\n  salesInfo: MovieSalesInfoRaw;\n  versionInfo: MovieVersionInfo;\n  festivalPrizes: MovieFestivalPrizes;\n  salesAgentDeal: MovieSalesAgentDealRaw;\n}\n\n/** Document model of a Movie */\nexport interface MovieDocument extends MovieRaw {\n}\n\n/** Document model of a Movie with Dates (type Date) */\nexport interface MovieDocumentWithDates extends MovieRaw {\n}\n\n/** Public interface of a movie (to notifications). */\nexport interface PublicMovie {\n  id: string;\n  title: Title;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MovieStory.html":{"url":"interfaces/MovieStory.html","title":"interface - MovieStory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MovieStory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/movie/src/lib/movie/+state/movie.firestore.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        logline\n                                \n                                \n                                        synopsis\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        logline\n                                    \n                                \n                                \n                                    \n                                        logline:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        synopsis\n                                    \n                                \n                                \n                                    \n                                        synopsis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DateRangeRaw } from \"@blockframes/utils/date-range\";\nimport { firestore } from \"firebase/app\";\n\ntype Timestamp = firestore.Timestamp;\n\nexport interface MovieVersionInfo {\n  dubbings: string[],\n  subtitles: string[],\n}\n\ninterface MovieSalesAgentDealRaw {\n  rights: DateRangeRaw;\n  territories: string[],\n  medias: string[],\n}\n\nexport interface MovieSalesAgentDealDocumentWithDates extends MovieSalesAgentDealRaw {\n}\n\nexport interface MoviePromotionalDescription {\n  keyAssets: string[],\n  keywords: string[],\n}\n\nexport interface Prize {\n  name: string,\n  year: number,\n  prize?: string,\n}\n\nexport interface PromotionalElement {\n  label: string,\n  url: string\n}\n\nexport interface MoviePromotionalElements {\n  images: string[],\n  promotionalElements: PromotionalElement[],\n}\n\nexport interface Title {\n  original: string;\n  international?: string;\n}\n\nexport interface Credit {\n  firstName: string,\n  lastName?: string,\n  creditRole?: string,\n}\n\nexport interface MovieStory {\n  synopsis: string,\n  logline: string,\n}\n\nexport interface MovieSalesCast {\n  credits: Credit[],\n}\n\nexport interface MovieFestivalPrizes {\n  prizes: Prize[]\n}\n\ninterface MovieSaleRaw {\n  operatorName: string;\n  showOperatorName: boolean; //@todo #581 Promotional Distribution Deal\n  rights: DateRangeRaw;\n  territories: string[];\n  medias: string[];\n  dubbings: string[];\n  subtitles: string[];\n  exclusive: boolean;\n  price: number;\n}\n\nexport interface MovieSaleDocumentWithDates extends MovieSaleRaw {\n}\n\nexport interface MovieMain {\n  internalRef?: string,\n  isan?: string,\n  title: Title,\n  directors?: Credit[],\n  poster?: string,\n  productionYear?: number,\n  genres?: string[],\n  originCountries?: string[],\n  languages?: string[],\n  status?: string,\n  productionCompanies?: Credit[],\n  length?: number,\n  shortSynopsis?: string,\n}\n\ninterface MovieSalesInfoRaw {\n  scoring: string,\n  color: string,\n  europeanQualification: boolean,\n  pegi: string,\n  certifications: string[],\n  internationalPremiere: Prize,\n  originCountryReleaseDate: D,\n  broadcasterCoproducers: string[],\n}\n\nexport interface MovieSalesInfoDocumentWithDates extends MovieSalesInfoRaw {\n}\n\n/** Generic interface of a Movie */\ninterface MovieRaw {\n  // @todo #643 add new fields to Draw.io\n  _type: 'movies';\n  id: string;\n\n  // @todo #643 not main movie attributes WIP\n\n  deliveryIds: string[];\n  ipId?: string;\n  directorNote?: string;\n  producerNote?: string;\n  goalBudget?: number;\n  movieCurrency?: string;\n  fundedBudget?: number;\n  breakeven?: number;\n  backendProfit?: number;\n  potentialRevenues?: number;\n  selectionCategories?: string;\n\n  // Sections\n  sales: MovieSaleRaw[]; //@todo 581 => move to subcollection\n  main: MovieMain;\n  story: MovieStory;\n  promotionalElements: MoviePromotionalElements;\n  promotionalDescription: MoviePromotionalDescription;\n  salesCast: MovieSalesCast;\n  salesInfo: MovieSalesInfoRaw;\n  versionInfo: MovieVersionInfo;\n  festivalPrizes: MovieFestivalPrizes;\n  salesAgentDeal: MovieSalesAgentDealRaw;\n}\n\n/** Document model of a Movie */\nexport interface MovieDocument extends MovieRaw {\n}\n\n/** Document model of a Movie with Dates (type Date) */\nexport interface MovieDocumentWithDates extends MovieRaw {\n}\n\n/** Public interface of a movie (to notifications). */\nexport interface PublicMovie {\n  id: string;\n  title: Title;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MovieVersionInfo.html":{"url":"interfaces/MovieVersionInfo.html","title":"interface - MovieVersionInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MovieVersionInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/movie/src/lib/movie/+state/movie.firestore.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dubbings\n                                \n                                \n                                        subtitles\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dubbings\n                                    \n                                \n                                \n                                    \n                                        dubbings:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subtitles\n                                    \n                                \n                                \n                                    \n                                        subtitles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DateRangeRaw } from \"@blockframes/utils/date-range\";\nimport { firestore } from \"firebase/app\";\n\ntype Timestamp = firestore.Timestamp;\n\nexport interface MovieVersionInfo {\n  dubbings: string[],\n  subtitles: string[],\n}\n\ninterface MovieSalesAgentDealRaw {\n  rights: DateRangeRaw;\n  territories: string[],\n  medias: string[],\n}\n\nexport interface MovieSalesAgentDealDocumentWithDates extends MovieSalesAgentDealRaw {\n}\n\nexport interface MoviePromotionalDescription {\n  keyAssets: string[],\n  keywords: string[],\n}\n\nexport interface Prize {\n  name: string,\n  year: number,\n  prize?: string,\n}\n\nexport interface PromotionalElement {\n  label: string,\n  url: string\n}\n\nexport interface MoviePromotionalElements {\n  images: string[],\n  promotionalElements: PromotionalElement[],\n}\n\nexport interface Title {\n  original: string;\n  international?: string;\n}\n\nexport interface Credit {\n  firstName: string,\n  lastName?: string,\n  creditRole?: string,\n}\n\nexport interface MovieStory {\n  synopsis: string,\n  logline: string,\n}\n\nexport interface MovieSalesCast {\n  credits: Credit[],\n}\n\nexport interface MovieFestivalPrizes {\n  prizes: Prize[]\n}\n\ninterface MovieSaleRaw {\n  operatorName: string;\n  showOperatorName: boolean; //@todo #581 Promotional Distribution Deal\n  rights: DateRangeRaw;\n  territories: string[];\n  medias: string[];\n  dubbings: string[];\n  subtitles: string[];\n  exclusive: boolean;\n  price: number;\n}\n\nexport interface MovieSaleDocumentWithDates extends MovieSaleRaw {\n}\n\nexport interface MovieMain {\n  internalRef?: string,\n  isan?: string,\n  title: Title,\n  directors?: Credit[],\n  poster?: string,\n  productionYear?: number,\n  genres?: string[],\n  originCountries?: string[],\n  languages?: string[],\n  status?: string,\n  productionCompanies?: Credit[],\n  length?: number,\n  shortSynopsis?: string,\n}\n\ninterface MovieSalesInfoRaw {\n  scoring: string,\n  color: string,\n  europeanQualification: boolean,\n  pegi: string,\n  certifications: string[],\n  internationalPremiere: Prize,\n  originCountryReleaseDate: D,\n  broadcasterCoproducers: string[],\n}\n\nexport interface MovieSalesInfoDocumentWithDates extends MovieSalesInfoRaw {\n}\n\n/** Generic interface of a Movie */\ninterface MovieRaw {\n  // @todo #643 add new fields to Draw.io\n  _type: 'movies';\n  id: string;\n\n  // @todo #643 not main movie attributes WIP\n\n  deliveryIds: string[];\n  ipId?: string;\n  directorNote?: string;\n  producerNote?: string;\n  goalBudget?: number;\n  movieCurrency?: string;\n  fundedBudget?: number;\n  breakeven?: number;\n  backendProfit?: number;\n  potentialRevenues?: number;\n  selectionCategories?: string;\n\n  // Sections\n  sales: MovieSaleRaw[]; //@todo 581 => move to subcollection\n  main: MovieMain;\n  story: MovieStory;\n  promotionalElements: MoviePromotionalElements;\n  promotionalDescription: MoviePromotionalDescription;\n  salesCast: MovieSalesCast;\n  salesInfo: MovieSalesInfoRaw;\n  versionInfo: MovieVersionInfo;\n  festivalPrizes: MovieFestivalPrizes;\n  salesAgentDeal: MovieSalesAgentDealRaw;\n}\n\n/** Document model of a Movie */\nexport interface MovieDocument extends MovieRaw {\n}\n\n/** Document model of a Movie with Dates (type Date) */\nexport interface MovieDocumentWithDates extends MovieRaw {\n}\n\n/** Public interface of a movie (to notifications). */\nexport interface PublicMovie {\n  id: string;\n  title: Title;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NotificationDocument.html":{"url":"interfaces/NotificationDocument.html","title":"interface - NotificationDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NotificationDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/notification/src/lib/notification/+state/notification.firestore.ts\n        \n\n            \n                Description\n            \n            \n                Generic informations for a Notification. \n\n            \n\n            \n                Extends\n            \n            \n                        NotificationOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        app\n                                \n                                \n                                        date\n                                \n                                \n                                        id\n                                \n                                \n                                        isRead\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        app\n                                    \n                                \n                                \n                                    \n                                        app:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:         FirebaseFirestore.FieldValue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FirebaseFirestore.FieldValue\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isRead\n                                    \n                                \n                                \n                                    \n                                        isRead:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PublicOrganization } from '@blockframes/organization/types';\nimport { PublicMovie } from '@blockframes/movie/types';\nimport * as admin from 'firebase-admin';\nimport { App } from '@blockframes/movie/movie/static-model/staticModels';\n\n/** Type of Notification depending of its origin. */\nexport const enum NotificationType {\n  newSignature = 'newSignature',\n  finalSignature = 'finalSignature',\n  createDocument = 'createDocument',\n  deleteDocument = 'deleteDocument',\n  inviteOrganization = 'inviteOrganization',\n  removeOrganization = 'removeOrganization',\n  pathToDocument = 'pathToDocument'\n}\n\n/** Minimum required informations to create a Notification. */\nexport interface NotificationOptions {\n  userId: string;\n  docId: string;\n  type: NotificationType;\n  movie: PublicMovie;\n  organization?: PublicOrganization;\n}\n\n/** Generic informations for a Notification. */\nexport interface NotificationDocument extends NotificationOptions {\n  id: string;\n  app: string;\n  isRead: boolean;\n  date: FirebaseFirestore.FieldValue;\n};\n\n/** Createa a Notification with required and generic informations. */\nexport function createNotification(notification: NotificationOptions): NotificationDocument {\n  return {\n    id: admin.firestore().collection('notifications').doc().id,\n    isRead: false,\n    date: admin.firestore.FieldValue.serverTimestamp(),\n    app: App.delivery,\n    ...notification\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NotificationOptions.html":{"url":"interfaces/NotificationOptions.html","title":"interface - NotificationOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NotificationOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/notification/src/lib/notification/+state/notification.firestore.ts\n        \n\n            \n                Description\n            \n            \n                Minimum required informations to create a Notification. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        docId\n                                \n                                \n                                        movie\n                                \n                                \n                                            Optional\n                                        organization\n                                \n                                \n                                        type\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        docId\n                                    \n                                \n                                \n                                    \n                                        docId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        movie\n                                    \n                                \n                                \n                                    \n                                        movie:         PublicMovie\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PublicMovie\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organization\n                                    \n                                \n                                \n                                    \n                                        organization:         PublicOrganization\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PublicOrganization\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         NotificationType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NotificationType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PublicOrganization } from '@blockframes/organization/types';\nimport { PublicMovie } from '@blockframes/movie/types';\nimport * as admin from 'firebase-admin';\nimport { App } from '@blockframes/movie/movie/static-model/staticModels';\n\n/** Type of Notification depending of its origin. */\nexport const enum NotificationType {\n  newSignature = 'newSignature',\n  finalSignature = 'finalSignature',\n  createDocument = 'createDocument',\n  deleteDocument = 'deleteDocument',\n  inviteOrganization = 'inviteOrganization',\n  removeOrganization = 'removeOrganization',\n  pathToDocument = 'pathToDocument'\n}\n\n/** Minimum required informations to create a Notification. */\nexport interface NotificationOptions {\n  userId: string;\n  docId: string;\n  type: NotificationType;\n  movie: PublicMovie;\n  organization?: PublicOrganization;\n}\n\n/** Generic informations for a Notification. */\nexport interface NotificationDocument extends NotificationOptions {\n  id: string;\n  app: string;\n  isRead: boolean;\n  date: FirebaseFirestore.FieldValue;\n};\n\n/** Createa a Notification with required and generic informations. */\nexport function createNotification(notification: NotificationOptions): NotificationDocument {\n  return {\n    id: admin.firestore().collection('notifications').doc().id,\n    isRead: false,\n    date: admin.firestore.FieldValue.serverTimestamp(),\n    app: App.delivery,\n    ...notification\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrgProposal.html":{"url":"interfaces/OrgProposal.html","title":"interface - OrgProposal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OrgProposal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend-functions/src/users.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as admin from 'firebase-admin';\nimport * as functions from 'firebase-functions';\nimport { generate as passwordGenerator } from 'generate-password';\nimport { auth, db } from './internals/firebase';\nimport { userInvite } from './assets/mail-templates';\nimport { sendMail } from './internals/email';\n\ntype UserRecord = admin.auth.UserRecord;\ntype CallableContext = functions.https.CallableContext;\n\ninterface UserProposal {\n  uid: string;\n  email: string;\n}\n\ninterface OrgProposal {\n  id: string;\n  name: string;\n}\n\nconst onUserCreate = (user: UserRecord) => {\n  const { email, uid } = user;\n\n  const userDocRef = db.collection('users').doc(user.uid);\n\n  // transaction to UPSERT the user doc\n  return db.runTransaction(async tx => {\n    const userDoc = await tx.get(userDocRef);\n\n    if (userDoc.exists) {\n      tx.update(userDocRef, { email, uid });\n    } else {\n      tx.set(userDocRef, { email, uid });\n    }\n  });\n};\n\nconst findUserByMail = async (data: any, context: CallableContext): Promise => {\n  const prefix: string = decodeURIComponent(data.prefix);\n\n  // Leave if the prefix is too short (do not search every users in the universe).\n  if (prefix.length =', prefix)\n    .where('email', ' {\n      // leave if there are too many results.\n      if (query.size > 10) {\n        return [];\n      }\n\n      return query.docs.map(doc => ({ uid: doc.id, email: doc.data().email }));\n    });\n};\n\nconst findOrgByName = async (data: any, context: CallableContext): Promise => {\n  const prefix: string = decodeURIComponent(data.prefix);\n\n  // Leave if the prefix is too short (do not search every users in the universe).\n  if (prefix.length =', prefix)\n    .where('name', ' {\n      // leave if there are too many results.\n      if (matchingOrgs.size > 10) {\n        return [];\n      }\n\n      return matchingOrgs.docs.map(matchingOrg => ({\n        id: matchingOrg.id,\n        name: matchingOrg.data().name\n      }));\n    });\n};\n\nconst generatePassword = () =>\n  passwordGenerator({\n    length: 12,\n    numbers: true\n  });\n\nconst getOrCreateUserByMail = async (\n  data: any,\n  context: CallableContext\n): Promise => {\n  const { email } = data;\n\n  try {\n    const user = await auth.getUserByEmail(email);\n    return { uid: user.uid, email };\n  } catch {\n    const password = generatePassword();\n\n    // User does not exists, send them an email.\n    const user = await auth.createUser({\n      email,\n      password,\n      emailVerified: true,\n      disabled: false\n    });\n\n    await sendMail(userInvite(email, password));\n\n    return { uid: user.uid, email };\n  }\n};\n\nexport { onUserCreate, findUserByMail, findOrgByName, getOrCreateUserByMail };\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrganizationDocPermissions.html":{"url":"interfaces/OrganizationDocPermissions.html","title":"interface - OrganizationDocPermissions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OrganizationDocPermissions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend-functions/src/data/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        canCreate\n                                \n                                \n                                        canDelete\n                                \n                                \n                                        canRead\n                                \n                                \n                                        canUpdate\n                                \n                                \n                                        id\n                                \n                                \n                                        owner\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canCreate\n                                    \n                                \n                                \n                                    \n                                        canCreate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canDelete\n                                    \n                                \n                                \n                                    \n                                        canDelete:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canRead\n                                    \n                                \n                                \n                                    \n                                        canRead:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canUpdate\n                                    \n                                \n                                \n                                    \n                                        canUpdate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                    \n                                \n                                \n                                    \n                                        owner:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PublicOrganization } from '@blockframes/organization/types';\nimport { NotificationType } from '@blockframes/notification/types';\nimport { PublicMovie } from '@blockframes/movie/types';\n\nexport { MovieDocument } from '@blockframes/movie/types';\nexport { OrganizationDocument, OrganizationStatus } from '@blockframes/organization/types';\nexport {\n  InvitationDocument,\n  InvitationOrUndefined,\n  InvitationStatus,\n  InvitationType,\n  InvitationFromOrganizationToUser,\n  InvitationFromUserToOrganization,\n  InvitationToWorkOnDocument\n} from '@blockframes/invitation/types';\nexport { MaterialDocument, MaterialStatus } from '@blockframes/material/material/types';\nexport { StakeholderDocument } from '@blockframes/organization/stakeholder/types';\nexport {\n  DeliveryDocument,\n  StepDocument,\n  StepDocumentWithDate,\n  convertStepDocumentToStepDocumentWithDate\n} from '@blockframes/material/delivery/types';\n\n/**\n * Types used by the firebase backend.\n *\n * Define all type to be used in the codebase. Please see the index.ts for more\n * details on why, what and what's up next.\n */\n\n// Low Level Types\n// ===============\nexport type IDMap = Record;\n\ninterface DocWithID {\n  id: string;\n}\n\n// Core Application Types\n// ======================\n// Business & App Related\n\nexport interface OrganizationPermissions {\n  superAdmins: string[];\n}\n\nexport interface OrganizationDocPermissions {\n  id: string;\n  canCreate: boolean;\n  canRead: boolean;\n  canUpdate: boolean;\n  canDelete: boolean;\n  owner: boolean;\n}\n\nexport interface UserDocPermissions {\n  id: string;\n  admins: string[];\n  canCreate: string[];\n  canDelete: string[];\n  canRead: string[];\n  canUpdate: string[];\n}\n\nexport enum AppAccessStatus {\n  requested = 'requested',\n  pending = 'pending',\n  accepted = 'accepted'\n}\n\n/** Custom object used to build notifications. */\nexport interface SnapObject {\n  organization: PublicOrganization | undefined;\n  movie: PublicMovie;\n  docId: string;\n  type: NotificationType;\n}\n\n/**\n * Turn a list of items with ids into the corresponding mapping.\n *\n * @param items A list of item with an ID\n * @returns an object that maps each id to its item,\n *          `{id_x: item_x, id_y: item_y, ...}`\n */\nexport function asIDMap(items: T[]): IDMap {\n  return items.reduce((result, item) => ({ ...result, [item.id]: item }), {});\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrganizationDocument.html":{"url":"interfaces/OrganizationDocument.html","title":"interface - OrganizationDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OrganizationDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/organization/src/lib/+state/organization.firestore.ts\n        \n\n            \n                Description\n            \n            \n                Document model of an Organization \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address\n                                \n                                \n                                        catalog\n                                \n                                \n                                        created\n                                \n                                \n                                        id\n                                \n                                \n                                        logo\n                                \n                                \n                                        movieIds\n                                \n                                \n                                        name\n                                \n                                \n                                        officeAddress\n                                \n                                \n                                        phoneNumber\n                                \n                                \n                                        status\n                                \n                                \n                                        templateIds\n                                \n                                \n                                        updated\n                                \n                                \n                                        userIds\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        catalog\n                                    \n                                \n                                \n                                    \n                                        catalog:     null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created\n                                    \n                                \n                                \n                                    \n                                        created:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logo\n                                    \n                                \n                                \n                                    \n                                        logo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        movieIds\n                                    \n                                \n                                \n                                    \n                                        movieIds:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        officeAddress\n                                    \n                                \n                                \n                                    \n                                        officeAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         OrganizationStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OrganizationStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        templateIds\n                                    \n                                \n                                \n                                    \n                                        templateIds:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated\n                                    \n                                \n                                \n                                    \n                                        updated:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userIds\n                                    \n                                \n                                \n                                    \n                                        userIds:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface OrganizationDocument {\n  id: string;\n  name: string;\n  address: string;\n  created: number;\n  updated: number;\n  userIds: string[];\n  movieIds: string[];\n  templateIds: string[];\n  status: OrganizationStatus;\n  catalog: null;\n  logo: string;\n  officeAddress: string;\n  phoneNumber: string;\n}\n\n/** Status of an Organization, set to pending by default when an Organization is created. */\nexport const enum OrganizationStatus {\n  pending = 'pending',\n  accepted = 'accepted'\n}\n\n/** Default placeholder logo used when an Organization is created. */\nexport const PLACEHOLDER_LOGO = '/assets/logo/organisation_avatar_250.svg';\n\n/** A public interface or Organization, without sensitive data. */\nexport interface PublicOrganization {\n  id: string;\n  name: string;\n}\n\n/** A factory function that creates an Organization. */\nexport function createOrganization(params: Partial = {}): OrganizationDocument {\n  return {\n    id: !!params.id ? params.id : '',\n    name: '',\n    address: '',\n    officeAddress: '',\n    phoneNumber: '',\n    status: OrganizationStatus.pending,\n    userIds: [],\n    movieIds: [],\n    templateIds: [],\n    created: Date.now(),\n    updated: Date.now(),\n    logo: PLACEHOLDER_LOGO,\n    catalog: null,\n    ...params\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrganizationPermissions.html":{"url":"interfaces/OrganizationPermissions.html","title":"interface - OrganizationPermissions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OrganizationPermissions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend-functions/src/data/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        superAdmins\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        superAdmins\n                                    \n                                \n                                \n                                    \n                                        superAdmins:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PublicOrganization } from '@blockframes/organization/types';\nimport { NotificationType } from '@blockframes/notification/types';\nimport { PublicMovie } from '@blockframes/movie/types';\n\nexport { MovieDocument } from '@blockframes/movie/types';\nexport { OrganizationDocument, OrganizationStatus } from '@blockframes/organization/types';\nexport {\n  InvitationDocument,\n  InvitationOrUndefined,\n  InvitationStatus,\n  InvitationType,\n  InvitationFromOrganizationToUser,\n  InvitationFromUserToOrganization,\n  InvitationToWorkOnDocument\n} from '@blockframes/invitation/types';\nexport { MaterialDocument, MaterialStatus } from '@blockframes/material/material/types';\nexport { StakeholderDocument } from '@blockframes/organization/stakeholder/types';\nexport {\n  DeliveryDocument,\n  StepDocument,\n  StepDocumentWithDate,\n  convertStepDocumentToStepDocumentWithDate\n} from '@blockframes/material/delivery/types';\n\n/**\n * Types used by the firebase backend.\n *\n * Define all type to be used in the codebase. Please see the index.ts for more\n * details on why, what and what's up next.\n */\n\n// Low Level Types\n// ===============\nexport type IDMap = Record;\n\ninterface DocWithID {\n  id: string;\n}\n\n// Core Application Types\n// ======================\n// Business & App Related\n\nexport interface OrganizationPermissions {\n  superAdmins: string[];\n}\n\nexport interface OrganizationDocPermissions {\n  id: string;\n  canCreate: boolean;\n  canRead: boolean;\n  canUpdate: boolean;\n  canDelete: boolean;\n  owner: boolean;\n}\n\nexport interface UserDocPermissions {\n  id: string;\n  admins: string[];\n  canCreate: string[];\n  canDelete: string[];\n  canRead: string[];\n  canUpdate: string[];\n}\n\nexport enum AppAccessStatus {\n  requested = 'requested',\n  pending = 'pending',\n  accepted = 'accepted'\n}\n\n/** Custom object used to build notifications. */\nexport interface SnapObject {\n  organization: PublicOrganization | undefined;\n  movie: PublicMovie;\n  docId: string;\n  type: NotificationType;\n}\n\n/**\n * Turn a list of items with ids into the corresponding mapping.\n *\n * @param items A list of item with an ID\n * @returns an object that maps each id to its item,\n *          `{id_x: item_x, id_y: item_y, ...}`\n */\nexport function asIDMap(items: T[]): IDMap {\n  return items.reduce((result, item) => ({ ...result, [item.id]: item }), {});\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Prize.html":{"url":"interfaces/Prize.html","title":"interface - Prize","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Prize\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/movie/src/lib/movie/+state/movie.firestore.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        prize\n                                \n                                \n                                        year\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prize\n                                    \n                                \n                                \n                                    \n                                        prize:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                    \n                                \n                                \n                                    \n                                        year:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DateRangeRaw } from \"@blockframes/utils/date-range\";\nimport { firestore } from \"firebase/app\";\n\ntype Timestamp = firestore.Timestamp;\n\nexport interface MovieVersionInfo {\n  dubbings: string[],\n  subtitles: string[],\n}\n\ninterface MovieSalesAgentDealRaw {\n  rights: DateRangeRaw;\n  territories: string[],\n  medias: string[],\n}\n\nexport interface MovieSalesAgentDealDocumentWithDates extends MovieSalesAgentDealRaw {\n}\n\nexport interface MoviePromotionalDescription {\n  keyAssets: string[],\n  keywords: string[],\n}\n\nexport interface Prize {\n  name: string,\n  year: number,\n  prize?: string,\n}\n\nexport interface PromotionalElement {\n  label: string,\n  url: string\n}\n\nexport interface MoviePromotionalElements {\n  images: string[],\n  promotionalElements: PromotionalElement[],\n}\n\nexport interface Title {\n  original: string;\n  international?: string;\n}\n\nexport interface Credit {\n  firstName: string,\n  lastName?: string,\n  creditRole?: string,\n}\n\nexport interface MovieStory {\n  synopsis: string,\n  logline: string,\n}\n\nexport interface MovieSalesCast {\n  credits: Credit[],\n}\n\nexport interface MovieFestivalPrizes {\n  prizes: Prize[]\n}\n\ninterface MovieSaleRaw {\n  operatorName: string;\n  showOperatorName: boolean; //@todo #581 Promotional Distribution Deal\n  rights: DateRangeRaw;\n  territories: string[];\n  medias: string[];\n  dubbings: string[];\n  subtitles: string[];\n  exclusive: boolean;\n  price: number;\n}\n\nexport interface MovieSaleDocumentWithDates extends MovieSaleRaw {\n}\n\nexport interface MovieMain {\n  internalRef?: string,\n  isan?: string,\n  title: Title,\n  directors?: Credit[],\n  poster?: string,\n  productionYear?: number,\n  genres?: string[],\n  originCountries?: string[],\n  languages?: string[],\n  status?: string,\n  productionCompanies?: Credit[],\n  length?: number,\n  shortSynopsis?: string,\n}\n\ninterface MovieSalesInfoRaw {\n  scoring: string,\n  color: string,\n  europeanQualification: boolean,\n  pegi: string,\n  certifications: string[],\n  internationalPremiere: Prize,\n  originCountryReleaseDate: D,\n  broadcasterCoproducers: string[],\n}\n\nexport interface MovieSalesInfoDocumentWithDates extends MovieSalesInfoRaw {\n}\n\n/** Generic interface of a Movie */\ninterface MovieRaw {\n  // @todo #643 add new fields to Draw.io\n  _type: 'movies';\n  id: string;\n\n  // @todo #643 not main movie attributes WIP\n\n  deliveryIds: string[];\n  ipId?: string;\n  directorNote?: string;\n  producerNote?: string;\n  goalBudget?: number;\n  movieCurrency?: string;\n  fundedBudget?: number;\n  breakeven?: number;\n  backendProfit?: number;\n  potentialRevenues?: number;\n  selectionCategories?: string;\n\n  // Sections\n  sales: MovieSaleRaw[]; //@todo 581 => move to subcollection\n  main: MovieMain;\n  story: MovieStory;\n  promotionalElements: MoviePromotionalElements;\n  promotionalDescription: MoviePromotionalDescription;\n  salesCast: MovieSalesCast;\n  salesInfo: MovieSalesInfoRaw;\n  versionInfo: MovieVersionInfo;\n  festivalPrizes: MovieFestivalPrizes;\n  salesAgentDeal: MovieSalesAgentDealRaw;\n}\n\n/** Document model of a Movie */\nexport interface MovieDocument extends MovieRaw {\n}\n\n/** Document model of a Movie with Dates (type Date) */\nexport interface MovieDocumentWithDates extends MovieRaw {\n}\n\n/** Public interface of a movie (to notifications). */\nexport interface PublicMovie {\n  id: string;\n  title: Title;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PromotionalElement.html":{"url":"interfaces/PromotionalElement.html","title":"interface - PromotionalElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PromotionalElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/movie/src/lib/movie/+state/movie.firestore.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        label\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DateRangeRaw } from \"@blockframes/utils/date-range\";\nimport { firestore } from \"firebase/app\";\n\ntype Timestamp = firestore.Timestamp;\n\nexport interface MovieVersionInfo {\n  dubbings: string[],\n  subtitles: string[],\n}\n\ninterface MovieSalesAgentDealRaw {\n  rights: DateRangeRaw;\n  territories: string[],\n  medias: string[],\n}\n\nexport interface MovieSalesAgentDealDocumentWithDates extends MovieSalesAgentDealRaw {\n}\n\nexport interface MoviePromotionalDescription {\n  keyAssets: string[],\n  keywords: string[],\n}\n\nexport interface Prize {\n  name: string,\n  year: number,\n  prize?: string,\n}\n\nexport interface PromotionalElement {\n  label: string,\n  url: string\n}\n\nexport interface MoviePromotionalElements {\n  images: string[],\n  promotionalElements: PromotionalElement[],\n}\n\nexport interface Title {\n  original: string;\n  international?: string;\n}\n\nexport interface Credit {\n  firstName: string,\n  lastName?: string,\n  creditRole?: string,\n}\n\nexport interface MovieStory {\n  synopsis: string,\n  logline: string,\n}\n\nexport interface MovieSalesCast {\n  credits: Credit[],\n}\n\nexport interface MovieFestivalPrizes {\n  prizes: Prize[]\n}\n\ninterface MovieSaleRaw {\n  operatorName: string;\n  showOperatorName: boolean; //@todo #581 Promotional Distribution Deal\n  rights: DateRangeRaw;\n  territories: string[];\n  medias: string[];\n  dubbings: string[];\n  subtitles: string[];\n  exclusive: boolean;\n  price: number;\n}\n\nexport interface MovieSaleDocumentWithDates extends MovieSaleRaw {\n}\n\nexport interface MovieMain {\n  internalRef?: string,\n  isan?: string,\n  title: Title,\n  directors?: Credit[],\n  poster?: string,\n  productionYear?: number,\n  genres?: string[],\n  originCountries?: string[],\n  languages?: string[],\n  status?: string,\n  productionCompanies?: Credit[],\n  length?: number,\n  shortSynopsis?: string,\n}\n\ninterface MovieSalesInfoRaw {\n  scoring: string,\n  color: string,\n  europeanQualification: boolean,\n  pegi: string,\n  certifications: string[],\n  internationalPremiere: Prize,\n  originCountryReleaseDate: D,\n  broadcasterCoproducers: string[],\n}\n\nexport interface MovieSalesInfoDocumentWithDates extends MovieSalesInfoRaw {\n}\n\n/** Generic interface of a Movie */\ninterface MovieRaw {\n  // @todo #643 add new fields to Draw.io\n  _type: 'movies';\n  id: string;\n\n  // @todo #643 not main movie attributes WIP\n\n  deliveryIds: string[];\n  ipId?: string;\n  directorNote?: string;\n  producerNote?: string;\n  goalBudget?: number;\n  movieCurrency?: string;\n  fundedBudget?: number;\n  breakeven?: number;\n  backendProfit?: number;\n  potentialRevenues?: number;\n  selectionCategories?: string;\n\n  // Sections\n  sales: MovieSaleRaw[]; //@todo 581 => move to subcollection\n  main: MovieMain;\n  story: MovieStory;\n  promotionalElements: MoviePromotionalElements;\n  promotionalDescription: MoviePromotionalDescription;\n  salesCast: MovieSalesCast;\n  salesInfo: MovieSalesInfoRaw;\n  versionInfo: MovieVersionInfo;\n  festivalPrizes: MovieFestivalPrizes;\n  salesAgentDeal: MovieSalesAgentDealRaw;\n}\n\n/** Document model of a Movie */\nexport interface MovieDocument extends MovieRaw {\n}\n\n/** Document model of a Movie with Dates (type Date) */\nexport interface MovieDocumentWithDates extends MovieRaw {\n}\n\n/** Public interface of a movie (to notifications). */\nexport interface PublicMovie {\n  id: string;\n  title: Title;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PublicMovie.html":{"url":"interfaces/PublicMovie.html","title":"interface - PublicMovie","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PublicMovie\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/movie/src/lib/movie/+state/movie.firestore.ts\n        \n\n            \n                Description\n            \n            \n                Public interface of a movie (to notifications). \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         Title\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Title\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DateRangeRaw } from \"@blockframes/utils/date-range\";\nimport { firestore } from \"firebase/app\";\n\ntype Timestamp = firestore.Timestamp;\n\nexport interface MovieVersionInfo {\n  dubbings: string[],\n  subtitles: string[],\n}\n\ninterface MovieSalesAgentDealRaw {\n  rights: DateRangeRaw;\n  territories: string[],\n  medias: string[],\n}\n\nexport interface MovieSalesAgentDealDocumentWithDates extends MovieSalesAgentDealRaw {\n}\n\nexport interface MoviePromotionalDescription {\n  keyAssets: string[],\n  keywords: string[],\n}\n\nexport interface Prize {\n  name: string,\n  year: number,\n  prize?: string,\n}\n\nexport interface PromotionalElement {\n  label: string,\n  url: string\n}\n\nexport interface MoviePromotionalElements {\n  images: string[],\n  promotionalElements: PromotionalElement[],\n}\n\nexport interface Title {\n  original: string;\n  international?: string;\n}\n\nexport interface Credit {\n  firstName: string,\n  lastName?: string,\n  creditRole?: string,\n}\n\nexport interface MovieStory {\n  synopsis: string,\n  logline: string,\n}\n\nexport interface MovieSalesCast {\n  credits: Credit[],\n}\n\nexport interface MovieFestivalPrizes {\n  prizes: Prize[]\n}\n\ninterface MovieSaleRaw {\n  operatorName: string;\n  showOperatorName: boolean; //@todo #581 Promotional Distribution Deal\n  rights: DateRangeRaw;\n  territories: string[];\n  medias: string[];\n  dubbings: string[];\n  subtitles: string[];\n  exclusive: boolean;\n  price: number;\n}\n\nexport interface MovieSaleDocumentWithDates extends MovieSaleRaw {\n}\n\nexport interface MovieMain {\n  internalRef?: string,\n  isan?: string,\n  title: Title,\n  directors?: Credit[],\n  poster?: string,\n  productionYear?: number,\n  genres?: string[],\n  originCountries?: string[],\n  languages?: string[],\n  status?: string,\n  productionCompanies?: Credit[],\n  length?: number,\n  shortSynopsis?: string,\n}\n\ninterface MovieSalesInfoRaw {\n  scoring: string,\n  color: string,\n  europeanQualification: boolean,\n  pegi: string,\n  certifications: string[],\n  internationalPremiere: Prize,\n  originCountryReleaseDate: D,\n  broadcasterCoproducers: string[],\n}\n\nexport interface MovieSalesInfoDocumentWithDates extends MovieSalesInfoRaw {\n}\n\n/** Generic interface of a Movie */\ninterface MovieRaw {\n  // @todo #643 add new fields to Draw.io\n  _type: 'movies';\n  id: string;\n\n  // @todo #643 not main movie attributes WIP\n\n  deliveryIds: string[];\n  ipId?: string;\n  directorNote?: string;\n  producerNote?: string;\n  goalBudget?: number;\n  movieCurrency?: string;\n  fundedBudget?: number;\n  breakeven?: number;\n  backendProfit?: number;\n  potentialRevenues?: number;\n  selectionCategories?: string;\n\n  // Sections\n  sales: MovieSaleRaw[]; //@todo 581 => move to subcollection\n  main: MovieMain;\n  story: MovieStory;\n  promotionalElements: MoviePromotionalElements;\n  promotionalDescription: MoviePromotionalDescription;\n  salesCast: MovieSalesCast;\n  salesInfo: MovieSalesInfoRaw;\n  versionInfo: MovieVersionInfo;\n  festivalPrizes: MovieFestivalPrizes;\n  salesAgentDeal: MovieSalesAgentDealRaw;\n}\n\n/** Document model of a Movie */\nexport interface MovieDocument extends MovieRaw {\n}\n\n/** Document model of a Movie with Dates (type Date) */\nexport interface MovieDocumentWithDates extends MovieRaw {\n}\n\n/** Public interface of a movie (to notifications). */\nexport interface PublicMovie {\n  id: string;\n  title: Title;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PublicOrganization.html":{"url":"interfaces/PublicOrganization.html","title":"interface - PublicOrganization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PublicOrganization\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/organization/src/lib/+state/organization.firestore.ts\n        \n\n            \n                Description\n            \n            \n                A public interface or Organization, without sensitive data. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface OrganizationDocument {\n  id: string;\n  name: string;\n  address: string;\n  created: number;\n  updated: number;\n  userIds: string[];\n  movieIds: string[];\n  templateIds: string[];\n  status: OrganizationStatus;\n  catalog: null;\n  logo: string;\n  officeAddress: string;\n  phoneNumber: string;\n}\n\n/** Status of an Organization, set to pending by default when an Organization is created. */\nexport const enum OrganizationStatus {\n  pending = 'pending',\n  accepted = 'accepted'\n}\n\n/** Default placeholder logo used when an Organization is created. */\nexport const PLACEHOLDER_LOGO = '/assets/logo/organisation_avatar_250.svg';\n\n/** A public interface or Organization, without sensitive data. */\nexport interface PublicOrganization {\n  id: string;\n  name: string;\n}\n\n/** A factory function that creates an Organization. */\nexport function createOrganization(params: Partial = {}): OrganizationDocument {\n  return {\n    id: !!params.id ? params.id : '',\n    name: '',\n    address: '',\n    officeAddress: '',\n    phoneNumber: '',\n    status: OrganizationStatus.pending,\n    userIds: [],\n    movieIds: [],\n    templateIds: [],\n    created: Date.now(),\n    updated: Date.now(),\n    logo: PLACEHOLDER_LOGO,\n    catalog: null,\n    ...params\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PublicUser.html":{"url":"interfaces/PublicUser.html","title":"interface - PublicUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PublicUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/auth/src/lib/+state/auth.firestore.ts\n        \n\n            \n                Description\n            \n            \n                A user interface with public informations \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        avatar\n                                \n                                \n                                        email\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        surname\n                                \n                                \n                                        uid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                    \n                                \n                                \n                                    \n                                        uid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PublicUser {\n  uid: string;\n  email: string;\n  avatar?: string;\n  name?: string;\n  surname?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Queue.html":{"url":"classes/Queue.html","title":"class - Queue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Queue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend-functions/src/backup.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isEmpty\n                            \n                            \n                                pop\n                            \n                            \n                                push\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in apps/backend-functions/src/backup.ts:22\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEmpty\n                        \n                        \n                    \n                \n            \n            \n                \nisEmpty()\n                \n            \n\n\n            \n                \n                    Defined in apps/backend-functions/src/backup.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pop\n                        \n                        \n                    \n                \n            \n            \n                \npop()\n                \n            \n\n\n            \n                \n                    Defined in apps/backend-functions/src/backup.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            push\n                        \n                        \n                    \n                \n            \n            \n                \npush(x: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/backend-functions/src/backup.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { isArray, isEqual, isPlainObject, sortBy } from 'lodash';\nimport readline from 'readline';\nimport { Writable } from 'stream';\nimport * as admin from 'firebase-admin';\nimport { Bucket, File as GFile } from '@google-cloud/storage';\nimport { db, getBackupBucketName } from './internals/firebase';\n\ntype Firestore = admin.firestore.Firestore\ntype CollectionReference = admin.firestore.CollectionReference;\ntype QuerySnapshot = admin.firestore.QuerySnapshot;\ntype QueryDocumentSnapshot = admin.firestore.QueryDocumentSnapshot;\ntype DocumentReference = admin.firestore.DocumentReference;\n\nconst THIRTY_SECONDS_IN_MS = 30 * 1000;\n\ninterface StoredDocument {\n  docPath: string;\n  content: any;\n}\n\nclass Queue {\n  content: string[] = [];\n\n  push(x: string) {\n    this.content.push(x);\n  }\n\n  pop(): string {\n    const x = this.content.shift();\n\n    if (x === undefined) {\n      throw new Error('popping from an empty queue');\n    } else {\n      return x;\n    }\n  }\n\n  isEmpty(): boolean {\n    return this.content.length === 0;\n  }\n}\n\nconst KEYS_TIMESTAMP = sortBy(['_seconds', '_nanoseconds']);\n\nconst getBackupBucket = async (): Promise => {\n  const bucket: Bucket = admin.storage().bucket(getBackupBucketName());\n  const exists = await bucket.exists();\n\n  // The api returns an array.\n  if (!exists[0]) {\n    await bucket.create();\n  }\n\n  return bucket;\n};\n\nconst getBackupOutput = async (bucket: Bucket, name: string): Promise => {\n  const blob = bucket.file(`${name}.jsonl`);\n  return blob.createWriteStream({ resumable: false });\n};\n\n/**\n * Return all collection in the firestore instance provided, skip the \"meta\" collection\n * that should not be backup'd or restored.\n *\n * @param firestore\n */\nconst backupedCollections = async (firestore: Firestore): Promise => {\n  const collections: CollectionReference[] = await firestore.listCollections();\n  return collections\n    .filter(x => !x.path.startsWith('_restore'));\n};\n\nexport const freeze = async (req: any, resp: any) => {\n  // Prep ouput\n  const now = new Date().toISOString();\n  const bucket: Bucket = await getBackupBucket();\n  const stream = await getBackupOutput(bucket, now);\n\n  // Note: we use a Queue to store the collections to backup instead of doing a recursion,\n  // this will protect the stack. It will break when the size of keys to backup grows\n  // larger than our memory quota (memory is around 500mo => around 50GB of firestore data to backup)\n  // We'll have to store them in a collection at this point.\n  const processingQueue = new Queue();\n\n  // retrieve all the collections at the root.\n  const collections: CollectionReference[] = await backupedCollections(db);\n  collections.forEach(x => processingQueue.push(x.path));\n\n  while (!processingQueue.isEmpty()) {\n    // Note: we could speed up the code by processing multiple collections at once,\n    // we push many promises to a \"worker queue\" and await them when it reaches a certain size\n    // instead of using a while that blocks over every item.\n\n    const currentPath: string = processingQueue.pop();\n    const q: QuerySnapshot = await db.collection(currentPath).get();\n\n    if (q.size === 0) {\n      // Empty, move on\n      continue;\n    }\n\n    // Go through each document of the collection for backup\n    const promises = q.docs.map(async (doc: QueryDocumentSnapshot) => {\n      // Store the data\n      const docPath: string = doc.ref.path;\n      const content: any = doc.data();\n      const stored: StoredDocument = { docPath, content };\n\n      stream.write(JSON.stringify(stored));\n      stream.write('\\n');\n\n      // Adding the current path to the subcollections to backup\n      const subCollections = await doc.ref.listCollections();\n      subCollections.forEach(x => processingQueue.push(x.path));\n    });\n\n    // Wait for this backup to complete\n    await Promise.all(promises);\n  }\n\n  console.info('Done, closing our stream');\n  await new Promise(resolve => {\n    stream.end(resolve);\n  });\n\n  console.info('Finally');\n  return resp.status(200).send('success');\n};\n\nconst clear = async () => {\n  const processingQueue = new Queue();\n\n  // Note: this code is heavily inspired by the backup function,\n  // TODO: implement a generalized way to go through all docs & collections\n  // and use it in both functions.\n\n  // retrieve all the collections at the root.\n  const collections: CollectionReference[] = await backupedCollections(db);\n  collections.forEach(x => processingQueue.push(x.path));\n\n  while (!processingQueue.isEmpty()) {\n    const currentPath: string = processingQueue.pop();\n    const docs: DocumentReference[] = await db.collection(currentPath).listDocuments();\n\n    // keep all docs subcollection to be deleted to,\n    // delete every doc content.\n    const promises = docs.map(async doc => {\n      // Adding the current path to the subcollections to backup\n      const subCollections = await doc.listCollections();\n      subCollections.forEach(x => processingQueue.push(x.path));\n\n      // Delete the document\n      return doc.delete();\n    });\n\n    await Promise.all(promises);\n  }\n\n  return true;\n};\n\n/**\n * Take a json object and re-encode its content to match our firebase storage.\n *\n * For example: transform {_second, _nanoseconds} objects back to firestore timestamps\n * objects.\n *\n * @param x the object to reencode\n * @returns a new object\n */\nfunction reEncodeObject(x: any): any {\n  if (isArray(x)) {\n    // array: recursive descent for each item (used in steps object for example)\n    return x.map(reEncodeObject);\n  } else if (isPlainObject(x)) {\n    const keys = Object.keys(x);\n\n    if (isEqual(sortBy(keys), KEYS_TIMESTAMP)) {\n      // We have a timestamp object, re-encode\n      return new admin.firestore.Timestamp(x._seconds, x._nanoseconds);\n    } else {\n      // else: recursive descent\n      const r: any = {};\n      keys.forEach(k => {\n        r[k] = reEncodeObject(x[k]);\n      });\n      return r;\n    }\n  } else {\n    return x;\n  }\n}\n\n/**\n * Set the restore timestamp to now.\n */\nexport const setRestoreFlag = async () => {\n  return db.collection('_restore').doc('_DOC').set({ restoredAt: admin.firestore.FieldValue.serverTimestamp() });\n};\n\nconst isRestoring = async () => {\n  const docRestoreMeta = await db.collection('_restore').doc('_DOC').get();\n  if (docRestoreMeta.exists && docRestoreMeta.data() && docRestoreMeta.data()!.restoredAt) {\n    // @ts-ignore: within this block, we know .data() and `restoredAt' are set\n    const { restoredAt } = docRestoreMeta.data();\n\n    const now = admin.firestore.Timestamp.now();\n\n    // If we started the restoration less than twenty seconds ago, we are still in the restore process,\n    return restoredAt.toMillis() + THIRTY_SECONDS_IN_MS > now.toMillis();\n  }\n  return false;\n};\n\n// TODO: take the time to fix the types,\n// probably turn this into a generic (f: T) to and preserve types.\nexport const skipWhenRestoring = (f: any) => {\n  // return a new function that is:\n  // the old function + a check that early exits when we are restoring.\n  return async (...args: any[]) => {\n    // early exit\n    if (await isRestoring()) {\n      return true;\n    }\n\n    return f(...args);\n  };\n};\n\n\nexport const restore = async (req: any, resp: any) => {\n  // We get the backup file before clearing the db, just in case.\n  const bucket = await getBackupBucket();\n  const files: GFile[] = (await bucket.getFiles())[0];\n  const sortedFiles: GFile[] = sortBy(files, ['name']);\n\n  if (sortedFiles.length === 0) {\n    console.info('nothing to restore, leaving');\n    return resp.status(200).send('nothing-to-restore');\n  }\n\n  const lastFile: GFile = sortedFiles[sortedFiles.length - 1];\n\n  console.info('Updating restore flag');\n  await setRestoreFlag();\n\n  console.info('Clearing the database');\n  await clear();\n\n  console.info('restoring file:', lastFile.name);\n  const stream = lastFile.createReadStream();\n  const lineReader = readline.createInterface({\n    input: stream,\n    terminal: false\n  });\n\n  const promises: Promise[] = [];\n\n  const readerDone = new Promise(resolve => {\n    lineReader.on('close', resolve);\n  });\n\n  stream.on('end', () => {\n    lineReader.close();\n  });\n\n  // TODO: make this part scalable too, we're going to load the file\n  // and create promises \"as fast as possible\", we should backpressure the\n  // callback somehow to make sure the X previous promises have been completed\n  // before adding more. This will protect us from memory overflow (similar\n  // to the note in the backup code).\n  lineReader.on('line', line => {\n    const stored: StoredDocument = JSON.parse(line);\n    promises.push(db.doc(stored.docPath).set(reEncodeObject(stored.content)));\n  });\n\n  promises.push(readerDone);\n  await Promise.all(promises);\n\n  await setRestoreFlag();\n\n  console.info(`Done processing: ${promises.length - 1} lines loaded`);\n  return resp.status(200).send('success');\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegisterParams.html":{"url":"interfaces/RegisterParams.html","title":"interface - RegisterParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RegisterParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend-functions/src/relayer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ethAddress\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ethAddress\n                                    \n                                \n                                \n                                    \n                                        ethAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InfuraProvider } from '@ethersproject/providers';\nimport { Wallet } from '@ethersproject/wallet';\nimport { Contract, ContractFactory } from '@ethersproject/contracts';\nimport { TransactionResponse, TransactionReceipt } from '@ethersproject/abstract-provider';\nimport { namehash } from '@ethersproject/hash';\nimport { keccak256 } from '@ethersproject/keccak256';\nimport { toUtf8Bytes } from '@ethersproject/strings';\nimport { getAddress } from '@ethersproject/address';\nimport { toASCII } from 'punycode';\nimport { abi as CREATE2_FACTORY_ABI } from './contracts/Factory2.json';\nimport { bytecode as ERC1077_BYTECODE, abi as ERC1077_ABI } from './contracts/ERC1077.json';\nimport { abi as ENS_REGISTRY_ABI } from './contracts/ENSRegistry.json';\nimport { abi as ENS_RESOLVER_ABI } from './contracts/PublicResolver.json';\nimport {abi as ORG_CONTRACT_ABI, bytecode as ORG_CONTRACT_BYTECODE } from './contracts/Organization.json';\nimport { db } from './internals/firebase';\n\ntype TxResponse = TransactionResponse;\ntype TxReceipt = TransactionReceipt;\n\nexport interface Relayer {\n  wallet: Wallet;\n  contractFactory: Contract;\n  baseEnsDomain: string;\n  namehash: string;\n  registry: Contract;\n  resolver: Contract;\n}\n\nexport interface RelayerConfig {\n  mnemonic: string;\n  network: string;\n  baseEnsDomain: string;\n  registryAddress: string;\n  resolverAddress: string;\n  factoryContract: string;\n}\n\n/** Regular Ethereum transaction */\nexport interface BaseTx {\n  to: string; // address\n  value: string; // uint256\n  data: string; // bytes\n}\n\n/** A Meta Transaction that encapsulate a regular tx (it will need a signatures before being sent)*/\nexport interface MetaTx extends BaseTx {\n  nonce: string; // uint256\n  gasPrice: string; // uint256\n  gasToken: string; // address\n  gasLimit: string; // uint256\n  operationType: string; // uint8\n}\n\n/** A Meta Transaction with the user signature (ready to be sent) */\nexport interface SignedMetaTx extends MetaTx {\n  signatures: string; // bytes\n}\nexport interface SendParams {\n  ethAddress: string;\n  tx: SignedMetaTx;\n}\n\nexport interface RequestTokensParams {\n  username: string;\n  amount: number;\n}\n\nexport interface SignDeliveryParams {\n  username: string;\n  deliveryId: string;\n  stakeholderId: string;\n}\n\nexport function initRelayer(config: RelayerConfig): Relayer {\n  let wallet = Wallet.fromMnemonic(config.mnemonic);\n  const provider = new InfuraProvider(config.network);\n\n  wallet = wallet.connect(provider);\n\n  const contractFactory = new Contract(config.factoryContract, CREATE2_FACTORY_ABI, wallet);\n  const baseEnsDomain = config.baseEnsDomain;\n  const relayerNamehash = namehash(config.baseEnsDomain);\n  const registry = new Contract(config.registryAddress, ENS_REGISTRY_ABI, wallet);\n  const resolver = new Contract(config.resolverAddress, ENS_RESOLVER_ABI, wallet);\n\n  return {\n    wallet,\n    contractFactory,\n    baseEnsDomain,\n    namehash: relayerNamehash,\n    registry,\n    resolver,\n  };\n}\n\ninterface DeployParams {\n  username: string;\n  key: string;\n  erc1077address: string;\n  orgId: string;\n}\n\ninterface RegisterParams {\n  name: string;\n  ethAddress: string;\n}\n\n// TODO issue#714 (Laurent work on a way to get those functions in only one place)\nexport function emailToEnsDomain(email: string, baseEnsDomain: string) { // !!!! there is a copy of this function in 'libs\\utils\\src\\lib\\helpers.ts'\n  return toASCII(email.split('@')[0]).toLowerCase()\n    .split('')\n    .map(char => /[^\\w\\d-.]/g.test(char) ? char.charCodeAt(0) : char) // replace every non a-z or 0-9 chars by their ASCII code : '?' -> '63'\n    .join('') + '.' + baseEnsDomain;\n}\n\n/**\n * This function precompute a contract address as defined in the EIP 1014 (Skinny Create 2)\n * @param ensDomain this is use as a salt (salt need to be unique for each user)\n * @param provider ethers provider\n */\n// TODO issue#714 (Laurent work on a way to get those functions in only one place)\nexport async function precomputeAddress(ensDomain: string, config: RelayerConfig) { // !!!! there is a copy of this function in 'libs\\utils\\src\\lib\\helpers.ts'\n  const baseName = ensDomain.split('.')[0];\n  const relayer = initRelayer(config);\n  const factoryAddress = await relayer.wallet.provider.resolveName(relayer.contractFactory.address).then(address => address.substr(2));\n  const salt = keccak256(toUtf8Bytes(baseName)).substr(2);\n  const byteCodeHash = keccak256(`0x${ERC1077_BYTECODE}`).substr(2);\n\n  const payload = `0xff${factoryAddress}${salt}${byteCodeHash}`;\n\n  return `0x${keccak256(payload).slice(-40)}`; // first 40 bytes of the hash of the payload\n}\n\n/** check if an ENS name is linked to an eth address */\nexport async function isENSNameRegistered(ensName: string, config: RelayerConfig) {\n  const relayer = initRelayer(config);\n\n  const address = await relayer.wallet.provider.resolveName(ensName); // return eth address or null\n  return !!address;\n}\n\n//---------------------------------------------------\n//                   DEPLOY\n//---------------------------------------------------\n\nexport async function relayerDeployLogic(\n  { username, key, erc1077address, orgId }: DeployParams,\n  config: RelayerConfig\n) {\n  const relayer: Relayer = initRelayer(config);\n\n  // check required params\n  if (!username || !key || !erc1077address || !orgId) {\n    throw new Error('\"username\", \"key\", \"erc1077address\", and \"orgAddress\" are mandatory parameters !');\n  }\n\n  try {\n    getAddress(key);\n    getAddress(erc1077address);\n  } catch (error) {\n    throw new Error('\"key\" and/or \"erc1077address\" should be a valid ethereum address !');\n  }\n\n  // compute needed values\n  const hash = keccak256(toUtf8Bytes(username));\n  const orgName = await db.doc(`/orgs/${orgId}`).get().then(org => org.get('name')) as string;\n  const orgEns = emailToEnsDomain(orgName.replace(' ', '-'), relayer.baseEnsDomain);\n  const orgAddress = await relayer.wallet.provider.resolveName(orgEns);\n\n  try {\n\n    const result: Record = {};\n\n    const codeAtAddress = await relayer.wallet.provider.getCode(erc1077address);\n    if (codeAtAddress === '0x') { // if there is already some code at this address : skip deploy\n      const deployTx: TxResponse = await relayer.contractFactory.deploy(\n        hash,\n        `0x${ERC1077_BYTECODE}`,\n        key.toLocaleLowerCase(),\n        orgAddress.toLocaleLowerCase(),\n      )\n\n      result['deploy'] = await deployTx.wait();\n      console.log(`(D) tx sent (deploy) : ${deployTx.hash}`);\n    }\n\n    return result;\n  } catch (error) {\n    console.error(error);\n    throw new Error(error);\n  }\n};\n\n//---------------------------------------------------\n//                   REGISTER\n//---------------------------------------------------\n\nexport async function relayerRegisterENSLogic(\n  { name, ethAddress }: RegisterParams,\n  config: RelayerConfig\n) {\n  const relayer: Relayer = initRelayer(config);\n\n  // check required params\n  if (!name || !ethAddress) {\n    throw new Error('\"name\" and \"ethAddress\" are mandatory parameters !');\n  }\n\n  try {\n    getAddress(ethAddress);\n  } catch (error) {\n    throw new Error('\"ethAddress\" should be a valid ethereum address !');\n  }\n\n  // in case name is of the form `name.blockframes.eth` we only want the first part to prevent ending with `name.blockframes.eth.blockframes.eth`\n  const [labelName] = name.split('.');\n\n  // compute needed values\n  const fullName = `${labelName}.${config.baseEnsDomain}`;\n  const hash = keccak256(toUtf8Bytes(labelName));\n\n  try {\n    /*\n    ENS registration require 3 interdependent txs to happens :\n    here are the order of the tx and their dependencies\n\n       (A) --> (B) --> (C)     // ENS workflow, (A) must complete before (B)\n\n    */\n\n    const ZERO_ADDRESS = '0x00000000000000000000000000000000000000';\n\n    const retrievedAddress = await relayer.wallet.provider.resolveName(fullName);\n    if (!!retrievedAddress && retrievedAddress !== ZERO_ADDRESS) { // if name is already link to a non-zero address : skip\n      throw new Error(`${fullName} already linked to an address (${retrievedAddress})`);\n    }\n    const result: Record = {};\n\n    // (A) register the user ens username\n    const nameOwner = await relayer.registry.owner(namehash(fullName));\n    if (nameOwner !== relayer.wallet.address) { // if name is already registered : skip registration\n      const registerTx: TxResponse = await relayer.registry.setSubnodeOwner(\n        relayer.namehash,\n        hash,\n        relayer.wallet.address,\n      );\n      result['register'] = await registerTx.wait();\n      console.log(`(A) tx sent (register) : ${registerTx.hash}`); // display tx to firebase logging\n    }\n\n    // (B) set a resolver to the ens username : require waiting for (A)\n    const resolverAddress = await relayer.registry.resolver(namehash(fullName))\n    if (resolverAddress !== relayer.resolver.address) { // if a resolver is already set : skip set resolver\n      const resolverTx: TxResponse = await relayer.registry.setResolver(\n        namehash(fullName),\n        relayer.resolver.address,\n      );\n      result['resolver']= await resolverTx.wait();\n      console.log(`(B) tx sent (setResolver) : ${resolverTx.hash}`); // display tx to firebase logging\n    }\n\n    // (C) link the erc1077 to the ens username : require waiting for (B)\n    const linkTx: TxResponse = await relayer.resolver.setAddr(\n      namehash(fullName),\n      ethAddress,\n    )\n    result['link'] = await linkTx.wait();\n    console.log(`(C) tx sent (setAddress) : ${linkTx.hash}`); // display tx to firebase logging\n    ;\n    return result;\n  } catch (error) {\n    console.error(error);\n    throw new Error(error);\n  }\n};\n\n\n\n//---------------------------------------------------\n//                   SEND\n//---------------------------------------------------\n\nexport async function relayerSendLogic(\n  { ethAddress, tx }: SendParams,\n  config: RelayerConfig\n) {\n  const relayer: Relayer = initRelayer(config);\n  // check required params\n  if (!ethAddress || !tx) {\n    throw new Error('\"ethAddress\" and \"tx\" are mandatory parameters !');\n  }\n\n  try {\n    getAddress(ethAddress);\n  } catch (error) {\n    throw new Error('\"ethAddress\" should be a valid ethereum address !');\n  }\n\n  // compute needed values\n  const erc1077 = new Contract(ethAddress, ERC1077_ABI, relayer.wallet);\n\n  // check if tx will be accepted by erc1077\n  const canExecute: boolean = await erc1077.functions.canExecute(\n    tx.to,\n    tx.value,\n    tx.data,\n    tx.nonce,\n    tx.gasPrice,\n    tx.gasToken,\n    tx.gasLimit,\n    tx.operationType,\n    tx.signatures\n  );\n\n  if (!canExecute) {\n    console.log(tx);\n    throw new Error(\n      'The transaction has not been sent because it will be be rejected by the ERC1077, this is probably a nonce or signatures problem.'\n    );\n  }\n\n  const sendTx = await erc1077.functions.executeSigned(\n    tx.to,\n    tx.value,\n    tx.data,\n    tx.nonce,\n    tx.gasPrice,\n    tx.gasToken,\n    tx.gasLimit,\n    tx.operationType,\n    tx.signatures\n  );\n  console.log(`tx sent (executeSigned) : ${sendTx.hash}`); // display tx to firebase logging\n\n  const txReceipt = await sendTx.wait();\n  return txReceipt;\n};\n\n//---------------------------------------------------\n//               DEPLOY ORG CONTRACT\n//---------------------------------------------------\n\nexport async function relayerDeployOrganizationLogic(\n  adminAddress: string,\n  config: RelayerConfig\n) {\n  const relayer: Relayer = initRelayer(config);\n  // check required params\n  if (!adminAddress) {\n    throw new Error('\"adminAddress\" is a mandatory parameters !');\n  }\n\n  try {\n    getAddress(adminAddress);\n  } catch (error) {\n    throw new Error('\"adminAddress\" should be a valid ethereum address !');\n  }\n\n  const organizationFactory = new ContractFactory(ORG_CONTRACT_ABI, ORG_CONTRACT_BYTECODE, relayer.wallet);\n  const contract = await organizationFactory.deploy(adminAddress);\n  console.log(`tx sent (deployOrganization) : ${contract.deployTransaction.hash}`); // display tx to firebase logging\n  await contract.deployed();\n  return contract.address;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Relayer.html":{"url":"interfaces/Relayer.html","title":"interface - Relayer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Relayer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend-functions/src/relayer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        baseEnsDomain\n                                \n                                \n                                        contractFactory\n                                \n                                \n                                        namehash\n                                \n                                \n                                        registry\n                                \n                                \n                                        resolver\n                                \n                                \n                                        wallet\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        baseEnsDomain\n                                    \n                                \n                                \n                                    \n                                        baseEnsDomain:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contractFactory\n                                    \n                                \n                                \n                                    \n                                        contractFactory:     Contract\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Contract\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namehash\n                                    \n                                \n                                \n                                    \n                                        namehash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registry\n                                    \n                                \n                                \n                                    \n                                        registry:     Contract\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Contract\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resolver\n                                    \n                                \n                                \n                                    \n                                        resolver:     Contract\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Contract\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wallet\n                                    \n                                \n                                \n                                    \n                                        wallet:     Wallet\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Wallet\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InfuraProvider } from '@ethersproject/providers';\nimport { Wallet } from '@ethersproject/wallet';\nimport { Contract, ContractFactory } from '@ethersproject/contracts';\nimport { TransactionResponse, TransactionReceipt } from '@ethersproject/abstract-provider';\nimport { namehash } from '@ethersproject/hash';\nimport { keccak256 } from '@ethersproject/keccak256';\nimport { toUtf8Bytes } from '@ethersproject/strings';\nimport { getAddress } from '@ethersproject/address';\nimport { toASCII } from 'punycode';\nimport { abi as CREATE2_FACTORY_ABI } from './contracts/Factory2.json';\nimport { bytecode as ERC1077_BYTECODE, abi as ERC1077_ABI } from './contracts/ERC1077.json';\nimport { abi as ENS_REGISTRY_ABI } from './contracts/ENSRegistry.json';\nimport { abi as ENS_RESOLVER_ABI } from './contracts/PublicResolver.json';\nimport {abi as ORG_CONTRACT_ABI, bytecode as ORG_CONTRACT_BYTECODE } from './contracts/Organization.json';\nimport { db } from './internals/firebase';\n\ntype TxResponse = TransactionResponse;\ntype TxReceipt = TransactionReceipt;\n\nexport interface Relayer {\n  wallet: Wallet;\n  contractFactory: Contract;\n  baseEnsDomain: string;\n  namehash: string;\n  registry: Contract;\n  resolver: Contract;\n}\n\nexport interface RelayerConfig {\n  mnemonic: string;\n  network: string;\n  baseEnsDomain: string;\n  registryAddress: string;\n  resolverAddress: string;\n  factoryContract: string;\n}\n\n/** Regular Ethereum transaction */\nexport interface BaseTx {\n  to: string; // address\n  value: string; // uint256\n  data: string; // bytes\n}\n\n/** A Meta Transaction that encapsulate a regular tx (it will need a signatures before being sent)*/\nexport interface MetaTx extends BaseTx {\n  nonce: string; // uint256\n  gasPrice: string; // uint256\n  gasToken: string; // address\n  gasLimit: string; // uint256\n  operationType: string; // uint8\n}\n\n/** A Meta Transaction with the user signature (ready to be sent) */\nexport interface SignedMetaTx extends MetaTx {\n  signatures: string; // bytes\n}\nexport interface SendParams {\n  ethAddress: string;\n  tx: SignedMetaTx;\n}\n\nexport interface RequestTokensParams {\n  username: string;\n  amount: number;\n}\n\nexport interface SignDeliveryParams {\n  username: string;\n  deliveryId: string;\n  stakeholderId: string;\n}\n\nexport function initRelayer(config: RelayerConfig): Relayer {\n  let wallet = Wallet.fromMnemonic(config.mnemonic);\n  const provider = new InfuraProvider(config.network);\n\n  wallet = wallet.connect(provider);\n\n  const contractFactory = new Contract(config.factoryContract, CREATE2_FACTORY_ABI, wallet);\n  const baseEnsDomain = config.baseEnsDomain;\n  const relayerNamehash = namehash(config.baseEnsDomain);\n  const registry = new Contract(config.registryAddress, ENS_REGISTRY_ABI, wallet);\n  const resolver = new Contract(config.resolverAddress, ENS_RESOLVER_ABI, wallet);\n\n  return {\n    wallet,\n    contractFactory,\n    baseEnsDomain,\n    namehash: relayerNamehash,\n    registry,\n    resolver,\n  };\n}\n\ninterface DeployParams {\n  username: string;\n  key: string;\n  erc1077address: string;\n  orgId: string;\n}\n\ninterface RegisterParams {\n  name: string;\n  ethAddress: string;\n}\n\n// TODO issue#714 (Laurent work on a way to get those functions in only one place)\nexport function emailToEnsDomain(email: string, baseEnsDomain: string) { // !!!! there is a copy of this function in 'libs\\utils\\src\\lib\\helpers.ts'\n  return toASCII(email.split('@')[0]).toLowerCase()\n    .split('')\n    .map(char => /[^\\w\\d-.]/g.test(char) ? char.charCodeAt(0) : char) // replace every non a-z or 0-9 chars by their ASCII code : '?' -> '63'\n    .join('') + '.' + baseEnsDomain;\n}\n\n/**\n * This function precompute a contract address as defined in the EIP 1014 (Skinny Create 2)\n * @param ensDomain this is use as a salt (salt need to be unique for each user)\n * @param provider ethers provider\n */\n// TODO issue#714 (Laurent work on a way to get those functions in only one place)\nexport async function precomputeAddress(ensDomain: string, config: RelayerConfig) { // !!!! there is a copy of this function in 'libs\\utils\\src\\lib\\helpers.ts'\n  const baseName = ensDomain.split('.')[0];\n  const relayer = initRelayer(config);\n  const factoryAddress = await relayer.wallet.provider.resolveName(relayer.contractFactory.address).then(address => address.substr(2));\n  const salt = keccak256(toUtf8Bytes(baseName)).substr(2);\n  const byteCodeHash = keccak256(`0x${ERC1077_BYTECODE}`).substr(2);\n\n  const payload = `0xff${factoryAddress}${salt}${byteCodeHash}`;\n\n  return `0x${keccak256(payload).slice(-40)}`; // first 40 bytes of the hash of the payload\n}\n\n/** check if an ENS name is linked to an eth address */\nexport async function isENSNameRegistered(ensName: string, config: RelayerConfig) {\n  const relayer = initRelayer(config);\n\n  const address = await relayer.wallet.provider.resolveName(ensName); // return eth address or null\n  return !!address;\n}\n\n//---------------------------------------------------\n//                   DEPLOY\n//---------------------------------------------------\n\nexport async function relayerDeployLogic(\n  { username, key, erc1077address, orgId }: DeployParams,\n  config: RelayerConfig\n) {\n  const relayer: Relayer = initRelayer(config);\n\n  // check required params\n  if (!username || !key || !erc1077address || !orgId) {\n    throw new Error('\"username\", \"key\", \"erc1077address\", and \"orgAddress\" are mandatory parameters !');\n  }\n\n  try {\n    getAddress(key);\n    getAddress(erc1077address);\n  } catch (error) {\n    throw new Error('\"key\" and/or \"erc1077address\" should be a valid ethereum address !');\n  }\n\n  // compute needed values\n  const hash = keccak256(toUtf8Bytes(username));\n  const orgName = await db.doc(`/orgs/${orgId}`).get().then(org => org.get('name')) as string;\n  const orgEns = emailToEnsDomain(orgName.replace(' ', '-'), relayer.baseEnsDomain);\n  const orgAddress = await relayer.wallet.provider.resolveName(orgEns);\n\n  try {\n\n    const result: Record = {};\n\n    const codeAtAddress = await relayer.wallet.provider.getCode(erc1077address);\n    if (codeAtAddress === '0x') { // if there is already some code at this address : skip deploy\n      const deployTx: TxResponse = await relayer.contractFactory.deploy(\n        hash,\n        `0x${ERC1077_BYTECODE}`,\n        key.toLocaleLowerCase(),\n        orgAddress.toLocaleLowerCase(),\n      )\n\n      result['deploy'] = await deployTx.wait();\n      console.log(`(D) tx sent (deploy) : ${deployTx.hash}`);\n    }\n\n    return result;\n  } catch (error) {\n    console.error(error);\n    throw new Error(error);\n  }\n};\n\n//---------------------------------------------------\n//                   REGISTER\n//---------------------------------------------------\n\nexport async function relayerRegisterENSLogic(\n  { name, ethAddress }: RegisterParams,\n  config: RelayerConfig\n) {\n  const relayer: Relayer = initRelayer(config);\n\n  // check required params\n  if (!name || !ethAddress) {\n    throw new Error('\"name\" and \"ethAddress\" are mandatory parameters !');\n  }\n\n  try {\n    getAddress(ethAddress);\n  } catch (error) {\n    throw new Error('\"ethAddress\" should be a valid ethereum address !');\n  }\n\n  // in case name is of the form `name.blockframes.eth` we only want the first part to prevent ending with `name.blockframes.eth.blockframes.eth`\n  const [labelName] = name.split('.');\n\n  // compute needed values\n  const fullName = `${labelName}.${config.baseEnsDomain}`;\n  const hash = keccak256(toUtf8Bytes(labelName));\n\n  try {\n    /*\n    ENS registration require 3 interdependent txs to happens :\n    here are the order of the tx and their dependencies\n\n       (A) --> (B) --> (C)     // ENS workflow, (A) must complete before (B)\n\n    */\n\n    const ZERO_ADDRESS = '0x00000000000000000000000000000000000000';\n\n    const retrievedAddress = await relayer.wallet.provider.resolveName(fullName);\n    if (!!retrievedAddress && retrievedAddress !== ZERO_ADDRESS) { // if name is already link to a non-zero address : skip\n      throw new Error(`${fullName} already linked to an address (${retrievedAddress})`);\n    }\n    const result: Record = {};\n\n    // (A) register the user ens username\n    const nameOwner = await relayer.registry.owner(namehash(fullName));\n    if (nameOwner !== relayer.wallet.address) { // if name is already registered : skip registration\n      const registerTx: TxResponse = await relayer.registry.setSubnodeOwner(\n        relayer.namehash,\n        hash,\n        relayer.wallet.address,\n      );\n      result['register'] = await registerTx.wait();\n      console.log(`(A) tx sent (register) : ${registerTx.hash}`); // display tx to firebase logging\n    }\n\n    // (B) set a resolver to the ens username : require waiting for (A)\n    const resolverAddress = await relayer.registry.resolver(namehash(fullName))\n    if (resolverAddress !== relayer.resolver.address) { // if a resolver is already set : skip set resolver\n      const resolverTx: TxResponse = await relayer.registry.setResolver(\n        namehash(fullName),\n        relayer.resolver.address,\n      );\n      result['resolver']= await resolverTx.wait();\n      console.log(`(B) tx sent (setResolver) : ${resolverTx.hash}`); // display tx to firebase logging\n    }\n\n    // (C) link the erc1077 to the ens username : require waiting for (B)\n    const linkTx: TxResponse = await relayer.resolver.setAddr(\n      namehash(fullName),\n      ethAddress,\n    )\n    result['link'] = await linkTx.wait();\n    console.log(`(C) tx sent (setAddress) : ${linkTx.hash}`); // display tx to firebase logging\n    ;\n    return result;\n  } catch (error) {\n    console.error(error);\n    throw new Error(error);\n  }\n};\n\n\n\n//---------------------------------------------------\n//                   SEND\n//---------------------------------------------------\n\nexport async function relayerSendLogic(\n  { ethAddress, tx }: SendParams,\n  config: RelayerConfig\n) {\n  const relayer: Relayer = initRelayer(config);\n  // check required params\n  if (!ethAddress || !tx) {\n    throw new Error('\"ethAddress\" and \"tx\" are mandatory parameters !');\n  }\n\n  try {\n    getAddress(ethAddress);\n  } catch (error) {\n    throw new Error('\"ethAddress\" should be a valid ethereum address !');\n  }\n\n  // compute needed values\n  const erc1077 = new Contract(ethAddress, ERC1077_ABI, relayer.wallet);\n\n  // check if tx will be accepted by erc1077\n  const canExecute: boolean = await erc1077.functions.canExecute(\n    tx.to,\n    tx.value,\n    tx.data,\n    tx.nonce,\n    tx.gasPrice,\n    tx.gasToken,\n    tx.gasLimit,\n    tx.operationType,\n    tx.signatures\n  );\n\n  if (!canExecute) {\n    console.log(tx);\n    throw new Error(\n      'The transaction has not been sent because it will be be rejected by the ERC1077, this is probably a nonce or signatures problem.'\n    );\n  }\n\n  const sendTx = await erc1077.functions.executeSigned(\n    tx.to,\n    tx.value,\n    tx.data,\n    tx.nonce,\n    tx.gasPrice,\n    tx.gasToken,\n    tx.gasLimit,\n    tx.operationType,\n    tx.signatures\n  );\n  console.log(`tx sent (executeSigned) : ${sendTx.hash}`); // display tx to firebase logging\n\n  const txReceipt = await sendTx.wait();\n  return txReceipt;\n};\n\n//---------------------------------------------------\n//               DEPLOY ORG CONTRACT\n//---------------------------------------------------\n\nexport async function relayerDeployOrganizationLogic(\n  adminAddress: string,\n  config: RelayerConfig\n) {\n  const relayer: Relayer = initRelayer(config);\n  // check required params\n  if (!adminAddress) {\n    throw new Error('\"adminAddress\" is a mandatory parameters !');\n  }\n\n  try {\n    getAddress(adminAddress);\n  } catch (error) {\n    throw new Error('\"adminAddress\" should be a valid ethereum address !');\n  }\n\n  const organizationFactory = new ContractFactory(ORG_CONTRACT_ABI, ORG_CONTRACT_BYTECODE, relayer.wallet);\n  const contract = await organizationFactory.deploy(adminAddress);\n  console.log(`tx sent (deployOrganization) : ${contract.deployTransaction.hash}`); // display tx to firebase logging\n  await contract.deployed();\n  return contract.address;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RelayerConfig.html":{"url":"interfaces/RelayerConfig.html","title":"interface - RelayerConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RelayerConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend-functions/src/relayer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        baseEnsDomain\n                                \n                                \n                                        factoryContract\n                                \n                                \n                                        mnemonic\n                                \n                                \n                                        network\n                                \n                                \n                                        registryAddress\n                                \n                                \n                                        resolverAddress\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        baseEnsDomain\n                                    \n                                \n                                \n                                    \n                                        baseEnsDomain:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        factoryContract\n                                    \n                                \n                                \n                                    \n                                        factoryContract:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mnemonic\n                                    \n                                \n                                \n                                    \n                                        mnemonic:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        network\n                                    \n                                \n                                \n                                    \n                                        network:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registryAddress\n                                    \n                                \n                                \n                                    \n                                        registryAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resolverAddress\n                                    \n                                \n                                \n                                    \n                                        resolverAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InfuraProvider } from '@ethersproject/providers';\nimport { Wallet } from '@ethersproject/wallet';\nimport { Contract, ContractFactory } from '@ethersproject/contracts';\nimport { TransactionResponse, TransactionReceipt } from '@ethersproject/abstract-provider';\nimport { namehash } from '@ethersproject/hash';\nimport { keccak256 } from '@ethersproject/keccak256';\nimport { toUtf8Bytes } from '@ethersproject/strings';\nimport { getAddress } from '@ethersproject/address';\nimport { toASCII } from 'punycode';\nimport { abi as CREATE2_FACTORY_ABI } from './contracts/Factory2.json';\nimport { bytecode as ERC1077_BYTECODE, abi as ERC1077_ABI } from './contracts/ERC1077.json';\nimport { abi as ENS_REGISTRY_ABI } from './contracts/ENSRegistry.json';\nimport { abi as ENS_RESOLVER_ABI } from './contracts/PublicResolver.json';\nimport {abi as ORG_CONTRACT_ABI, bytecode as ORG_CONTRACT_BYTECODE } from './contracts/Organization.json';\nimport { db } from './internals/firebase';\n\ntype TxResponse = TransactionResponse;\ntype TxReceipt = TransactionReceipt;\n\nexport interface Relayer {\n  wallet: Wallet;\n  contractFactory: Contract;\n  baseEnsDomain: string;\n  namehash: string;\n  registry: Contract;\n  resolver: Contract;\n}\n\nexport interface RelayerConfig {\n  mnemonic: string;\n  network: string;\n  baseEnsDomain: string;\n  registryAddress: string;\n  resolverAddress: string;\n  factoryContract: string;\n}\n\n/** Regular Ethereum transaction */\nexport interface BaseTx {\n  to: string; // address\n  value: string; // uint256\n  data: string; // bytes\n}\n\n/** A Meta Transaction that encapsulate a regular tx (it will need a signatures before being sent)*/\nexport interface MetaTx extends BaseTx {\n  nonce: string; // uint256\n  gasPrice: string; // uint256\n  gasToken: string; // address\n  gasLimit: string; // uint256\n  operationType: string; // uint8\n}\n\n/** A Meta Transaction with the user signature (ready to be sent) */\nexport interface SignedMetaTx extends MetaTx {\n  signatures: string; // bytes\n}\nexport interface SendParams {\n  ethAddress: string;\n  tx: SignedMetaTx;\n}\n\nexport interface RequestTokensParams {\n  username: string;\n  amount: number;\n}\n\nexport interface SignDeliveryParams {\n  username: string;\n  deliveryId: string;\n  stakeholderId: string;\n}\n\nexport function initRelayer(config: RelayerConfig): Relayer {\n  let wallet = Wallet.fromMnemonic(config.mnemonic);\n  const provider = new InfuraProvider(config.network);\n\n  wallet = wallet.connect(provider);\n\n  const contractFactory = new Contract(config.factoryContract, CREATE2_FACTORY_ABI, wallet);\n  const baseEnsDomain = config.baseEnsDomain;\n  const relayerNamehash = namehash(config.baseEnsDomain);\n  const registry = new Contract(config.registryAddress, ENS_REGISTRY_ABI, wallet);\n  const resolver = new Contract(config.resolverAddress, ENS_RESOLVER_ABI, wallet);\n\n  return {\n    wallet,\n    contractFactory,\n    baseEnsDomain,\n    namehash: relayerNamehash,\n    registry,\n    resolver,\n  };\n}\n\ninterface DeployParams {\n  username: string;\n  key: string;\n  erc1077address: string;\n  orgId: string;\n}\n\ninterface RegisterParams {\n  name: string;\n  ethAddress: string;\n}\n\n// TODO issue#714 (Laurent work on a way to get those functions in only one place)\nexport function emailToEnsDomain(email: string, baseEnsDomain: string) { // !!!! there is a copy of this function in 'libs\\utils\\src\\lib\\helpers.ts'\n  return toASCII(email.split('@')[0]).toLowerCase()\n    .split('')\n    .map(char => /[^\\w\\d-.]/g.test(char) ? char.charCodeAt(0) : char) // replace every non a-z or 0-9 chars by their ASCII code : '?' -> '63'\n    .join('') + '.' + baseEnsDomain;\n}\n\n/**\n * This function precompute a contract address as defined in the EIP 1014 (Skinny Create 2)\n * @param ensDomain this is use as a salt (salt need to be unique for each user)\n * @param provider ethers provider\n */\n// TODO issue#714 (Laurent work on a way to get those functions in only one place)\nexport async function precomputeAddress(ensDomain: string, config: RelayerConfig) { // !!!! there is a copy of this function in 'libs\\utils\\src\\lib\\helpers.ts'\n  const baseName = ensDomain.split('.')[0];\n  const relayer = initRelayer(config);\n  const factoryAddress = await relayer.wallet.provider.resolveName(relayer.contractFactory.address).then(address => address.substr(2));\n  const salt = keccak256(toUtf8Bytes(baseName)).substr(2);\n  const byteCodeHash = keccak256(`0x${ERC1077_BYTECODE}`).substr(2);\n\n  const payload = `0xff${factoryAddress}${salt}${byteCodeHash}`;\n\n  return `0x${keccak256(payload).slice(-40)}`; // first 40 bytes of the hash of the payload\n}\n\n/** check if an ENS name is linked to an eth address */\nexport async function isENSNameRegistered(ensName: string, config: RelayerConfig) {\n  const relayer = initRelayer(config);\n\n  const address = await relayer.wallet.provider.resolveName(ensName); // return eth address or null\n  return !!address;\n}\n\n//---------------------------------------------------\n//                   DEPLOY\n//---------------------------------------------------\n\nexport async function relayerDeployLogic(\n  { username, key, erc1077address, orgId }: DeployParams,\n  config: RelayerConfig\n) {\n  const relayer: Relayer = initRelayer(config);\n\n  // check required params\n  if (!username || !key || !erc1077address || !orgId) {\n    throw new Error('\"username\", \"key\", \"erc1077address\", and \"orgAddress\" are mandatory parameters !');\n  }\n\n  try {\n    getAddress(key);\n    getAddress(erc1077address);\n  } catch (error) {\n    throw new Error('\"key\" and/or \"erc1077address\" should be a valid ethereum address !');\n  }\n\n  // compute needed values\n  const hash = keccak256(toUtf8Bytes(username));\n  const orgName = await db.doc(`/orgs/${orgId}`).get().then(org => org.get('name')) as string;\n  const orgEns = emailToEnsDomain(orgName.replace(' ', '-'), relayer.baseEnsDomain);\n  const orgAddress = await relayer.wallet.provider.resolveName(orgEns);\n\n  try {\n\n    const result: Record = {};\n\n    const codeAtAddress = await relayer.wallet.provider.getCode(erc1077address);\n    if (codeAtAddress === '0x') { // if there is already some code at this address : skip deploy\n      const deployTx: TxResponse = await relayer.contractFactory.deploy(\n        hash,\n        `0x${ERC1077_BYTECODE}`,\n        key.toLocaleLowerCase(),\n        orgAddress.toLocaleLowerCase(),\n      )\n\n      result['deploy'] = await deployTx.wait();\n      console.log(`(D) tx sent (deploy) : ${deployTx.hash}`);\n    }\n\n    return result;\n  } catch (error) {\n    console.error(error);\n    throw new Error(error);\n  }\n};\n\n//---------------------------------------------------\n//                   REGISTER\n//---------------------------------------------------\n\nexport async function relayerRegisterENSLogic(\n  { name, ethAddress }: RegisterParams,\n  config: RelayerConfig\n) {\n  const relayer: Relayer = initRelayer(config);\n\n  // check required params\n  if (!name || !ethAddress) {\n    throw new Error('\"name\" and \"ethAddress\" are mandatory parameters !');\n  }\n\n  try {\n    getAddress(ethAddress);\n  } catch (error) {\n    throw new Error('\"ethAddress\" should be a valid ethereum address !');\n  }\n\n  // in case name is of the form `name.blockframes.eth` we only want the first part to prevent ending with `name.blockframes.eth.blockframes.eth`\n  const [labelName] = name.split('.');\n\n  // compute needed values\n  const fullName = `${labelName}.${config.baseEnsDomain}`;\n  const hash = keccak256(toUtf8Bytes(labelName));\n\n  try {\n    /*\n    ENS registration require 3 interdependent txs to happens :\n    here are the order of the tx and their dependencies\n\n       (A) --> (B) --> (C)     // ENS workflow, (A) must complete before (B)\n\n    */\n\n    const ZERO_ADDRESS = '0x00000000000000000000000000000000000000';\n\n    const retrievedAddress = await relayer.wallet.provider.resolveName(fullName);\n    if (!!retrievedAddress && retrievedAddress !== ZERO_ADDRESS) { // if name is already link to a non-zero address : skip\n      throw new Error(`${fullName} already linked to an address (${retrievedAddress})`);\n    }\n    const result: Record = {};\n\n    // (A) register the user ens username\n    const nameOwner = await relayer.registry.owner(namehash(fullName));\n    if (nameOwner !== relayer.wallet.address) { // if name is already registered : skip registration\n      const registerTx: TxResponse = await relayer.registry.setSubnodeOwner(\n        relayer.namehash,\n        hash,\n        relayer.wallet.address,\n      );\n      result['register'] = await registerTx.wait();\n      console.log(`(A) tx sent (register) : ${registerTx.hash}`); // display tx to firebase logging\n    }\n\n    // (B) set a resolver to the ens username : require waiting for (A)\n    const resolverAddress = await relayer.registry.resolver(namehash(fullName))\n    if (resolverAddress !== relayer.resolver.address) { // if a resolver is already set : skip set resolver\n      const resolverTx: TxResponse = await relayer.registry.setResolver(\n        namehash(fullName),\n        relayer.resolver.address,\n      );\n      result['resolver']= await resolverTx.wait();\n      console.log(`(B) tx sent (setResolver) : ${resolverTx.hash}`); // display tx to firebase logging\n    }\n\n    // (C) link the erc1077 to the ens username : require waiting for (B)\n    const linkTx: TxResponse = await relayer.resolver.setAddr(\n      namehash(fullName),\n      ethAddress,\n    )\n    result['link'] = await linkTx.wait();\n    console.log(`(C) tx sent (setAddress) : ${linkTx.hash}`); // display tx to firebase logging\n    ;\n    return result;\n  } catch (error) {\n    console.error(error);\n    throw new Error(error);\n  }\n};\n\n\n\n//---------------------------------------------------\n//                   SEND\n//---------------------------------------------------\n\nexport async function relayerSendLogic(\n  { ethAddress, tx }: SendParams,\n  config: RelayerConfig\n) {\n  const relayer: Relayer = initRelayer(config);\n  // check required params\n  if (!ethAddress || !tx) {\n    throw new Error('\"ethAddress\" and \"tx\" are mandatory parameters !');\n  }\n\n  try {\n    getAddress(ethAddress);\n  } catch (error) {\n    throw new Error('\"ethAddress\" should be a valid ethereum address !');\n  }\n\n  // compute needed values\n  const erc1077 = new Contract(ethAddress, ERC1077_ABI, relayer.wallet);\n\n  // check if tx will be accepted by erc1077\n  const canExecute: boolean = await erc1077.functions.canExecute(\n    tx.to,\n    tx.value,\n    tx.data,\n    tx.nonce,\n    tx.gasPrice,\n    tx.gasToken,\n    tx.gasLimit,\n    tx.operationType,\n    tx.signatures\n  );\n\n  if (!canExecute) {\n    console.log(tx);\n    throw new Error(\n      'The transaction has not been sent because it will be be rejected by the ERC1077, this is probably a nonce or signatures problem.'\n    );\n  }\n\n  const sendTx = await erc1077.functions.executeSigned(\n    tx.to,\n    tx.value,\n    tx.data,\n    tx.nonce,\n    tx.gasPrice,\n    tx.gasToken,\n    tx.gasLimit,\n    tx.operationType,\n    tx.signatures\n  );\n  console.log(`tx sent (executeSigned) : ${sendTx.hash}`); // display tx to firebase logging\n\n  const txReceipt = await sendTx.wait();\n  return txReceipt;\n};\n\n//---------------------------------------------------\n//               DEPLOY ORG CONTRACT\n//---------------------------------------------------\n\nexport async function relayerDeployOrganizationLogic(\n  adminAddress: string,\n  config: RelayerConfig\n) {\n  const relayer: Relayer = initRelayer(config);\n  // check required params\n  if (!adminAddress) {\n    throw new Error('\"adminAddress\" is a mandatory parameters !');\n  }\n\n  try {\n    getAddress(adminAddress);\n  } catch (error) {\n    throw new Error('\"adminAddress\" should be a valid ethereum address !');\n  }\n\n  const organizationFactory = new ContractFactory(ORG_CONTRACT_ABI, ORG_CONTRACT_BYTECODE, relayer.wallet);\n  const contract = await organizationFactory.deploy(adminAddress);\n  console.log(`tx sent (deployOrganization) : ${contract.deployTransaction.hash}`); // display tx to firebase logging\n  await contract.deployed();\n  return contract.address;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequestTokensParams.html":{"url":"interfaces/RequestTokensParams.html","title":"interface - RequestTokensParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RequestTokensParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend-functions/src/relayer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        amount\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InfuraProvider } from '@ethersproject/providers';\nimport { Wallet } from '@ethersproject/wallet';\nimport { Contract, ContractFactory } from '@ethersproject/contracts';\nimport { TransactionResponse, TransactionReceipt } from '@ethersproject/abstract-provider';\nimport { namehash } from '@ethersproject/hash';\nimport { keccak256 } from '@ethersproject/keccak256';\nimport { toUtf8Bytes } from '@ethersproject/strings';\nimport { getAddress } from '@ethersproject/address';\nimport { toASCII } from 'punycode';\nimport { abi as CREATE2_FACTORY_ABI } from './contracts/Factory2.json';\nimport { bytecode as ERC1077_BYTECODE, abi as ERC1077_ABI } from './contracts/ERC1077.json';\nimport { abi as ENS_REGISTRY_ABI } from './contracts/ENSRegistry.json';\nimport { abi as ENS_RESOLVER_ABI } from './contracts/PublicResolver.json';\nimport {abi as ORG_CONTRACT_ABI, bytecode as ORG_CONTRACT_BYTECODE } from './contracts/Organization.json';\nimport { db } from './internals/firebase';\n\ntype TxResponse = TransactionResponse;\ntype TxReceipt = TransactionReceipt;\n\nexport interface Relayer {\n  wallet: Wallet;\n  contractFactory: Contract;\n  baseEnsDomain: string;\n  namehash: string;\n  registry: Contract;\n  resolver: Contract;\n}\n\nexport interface RelayerConfig {\n  mnemonic: string;\n  network: string;\n  baseEnsDomain: string;\n  registryAddress: string;\n  resolverAddress: string;\n  factoryContract: string;\n}\n\n/** Regular Ethereum transaction */\nexport interface BaseTx {\n  to: string; // address\n  value: string; // uint256\n  data: string; // bytes\n}\n\n/** A Meta Transaction that encapsulate a regular tx (it will need a signatures before being sent)*/\nexport interface MetaTx extends BaseTx {\n  nonce: string; // uint256\n  gasPrice: string; // uint256\n  gasToken: string; // address\n  gasLimit: string; // uint256\n  operationType: string; // uint8\n}\n\n/** A Meta Transaction with the user signature (ready to be sent) */\nexport interface SignedMetaTx extends MetaTx {\n  signatures: string; // bytes\n}\nexport interface SendParams {\n  ethAddress: string;\n  tx: SignedMetaTx;\n}\n\nexport interface RequestTokensParams {\n  username: string;\n  amount: number;\n}\n\nexport interface SignDeliveryParams {\n  username: string;\n  deliveryId: string;\n  stakeholderId: string;\n}\n\nexport function initRelayer(config: RelayerConfig): Relayer {\n  let wallet = Wallet.fromMnemonic(config.mnemonic);\n  const provider = new InfuraProvider(config.network);\n\n  wallet = wallet.connect(provider);\n\n  const contractFactory = new Contract(config.factoryContract, CREATE2_FACTORY_ABI, wallet);\n  const baseEnsDomain = config.baseEnsDomain;\n  const relayerNamehash = namehash(config.baseEnsDomain);\n  const registry = new Contract(config.registryAddress, ENS_REGISTRY_ABI, wallet);\n  const resolver = new Contract(config.resolverAddress, ENS_RESOLVER_ABI, wallet);\n\n  return {\n    wallet,\n    contractFactory,\n    baseEnsDomain,\n    namehash: relayerNamehash,\n    registry,\n    resolver,\n  };\n}\n\ninterface DeployParams {\n  username: string;\n  key: string;\n  erc1077address: string;\n  orgId: string;\n}\n\ninterface RegisterParams {\n  name: string;\n  ethAddress: string;\n}\n\n// TODO issue#714 (Laurent work on a way to get those functions in only one place)\nexport function emailToEnsDomain(email: string, baseEnsDomain: string) { // !!!! there is a copy of this function in 'libs\\utils\\src\\lib\\helpers.ts'\n  return toASCII(email.split('@')[0]).toLowerCase()\n    .split('')\n    .map(char => /[^\\w\\d-.]/g.test(char) ? char.charCodeAt(0) : char) // replace every non a-z or 0-9 chars by their ASCII code : '?' -> '63'\n    .join('') + '.' + baseEnsDomain;\n}\n\n/**\n * This function precompute a contract address as defined in the EIP 1014 (Skinny Create 2)\n * @param ensDomain this is use as a salt (salt need to be unique for each user)\n * @param provider ethers provider\n */\n// TODO issue#714 (Laurent work on a way to get those functions in only one place)\nexport async function precomputeAddress(ensDomain: string, config: RelayerConfig) { // !!!! there is a copy of this function in 'libs\\utils\\src\\lib\\helpers.ts'\n  const baseName = ensDomain.split('.')[0];\n  const relayer = initRelayer(config);\n  const factoryAddress = await relayer.wallet.provider.resolveName(relayer.contractFactory.address).then(address => address.substr(2));\n  const salt = keccak256(toUtf8Bytes(baseName)).substr(2);\n  const byteCodeHash = keccak256(`0x${ERC1077_BYTECODE}`).substr(2);\n\n  const payload = `0xff${factoryAddress}${salt}${byteCodeHash}`;\n\n  return `0x${keccak256(payload).slice(-40)}`; // first 40 bytes of the hash of the payload\n}\n\n/** check if an ENS name is linked to an eth address */\nexport async function isENSNameRegistered(ensName: string, config: RelayerConfig) {\n  const relayer = initRelayer(config);\n\n  const address = await relayer.wallet.provider.resolveName(ensName); // return eth address or null\n  return !!address;\n}\n\n//---------------------------------------------------\n//                   DEPLOY\n//---------------------------------------------------\n\nexport async function relayerDeployLogic(\n  { username, key, erc1077address, orgId }: DeployParams,\n  config: RelayerConfig\n) {\n  const relayer: Relayer = initRelayer(config);\n\n  // check required params\n  if (!username || !key || !erc1077address || !orgId) {\n    throw new Error('\"username\", \"key\", \"erc1077address\", and \"orgAddress\" are mandatory parameters !');\n  }\n\n  try {\n    getAddress(key);\n    getAddress(erc1077address);\n  } catch (error) {\n    throw new Error('\"key\" and/or \"erc1077address\" should be a valid ethereum address !');\n  }\n\n  // compute needed values\n  const hash = keccak256(toUtf8Bytes(username));\n  const orgName = await db.doc(`/orgs/${orgId}`).get().then(org => org.get('name')) as string;\n  const orgEns = emailToEnsDomain(orgName.replace(' ', '-'), relayer.baseEnsDomain);\n  const orgAddress = await relayer.wallet.provider.resolveName(orgEns);\n\n  try {\n\n    const result: Record = {};\n\n    const codeAtAddress = await relayer.wallet.provider.getCode(erc1077address);\n    if (codeAtAddress === '0x') { // if there is already some code at this address : skip deploy\n      const deployTx: TxResponse = await relayer.contractFactory.deploy(\n        hash,\n        `0x${ERC1077_BYTECODE}`,\n        key.toLocaleLowerCase(),\n        orgAddress.toLocaleLowerCase(),\n      )\n\n      result['deploy'] = await deployTx.wait();\n      console.log(`(D) tx sent (deploy) : ${deployTx.hash}`);\n    }\n\n    return result;\n  } catch (error) {\n    console.error(error);\n    throw new Error(error);\n  }\n};\n\n//---------------------------------------------------\n//                   REGISTER\n//---------------------------------------------------\n\nexport async function relayerRegisterENSLogic(\n  { name, ethAddress }: RegisterParams,\n  config: RelayerConfig\n) {\n  const relayer: Relayer = initRelayer(config);\n\n  // check required params\n  if (!name || !ethAddress) {\n    throw new Error('\"name\" and \"ethAddress\" are mandatory parameters !');\n  }\n\n  try {\n    getAddress(ethAddress);\n  } catch (error) {\n    throw new Error('\"ethAddress\" should be a valid ethereum address !');\n  }\n\n  // in case name is of the form `name.blockframes.eth` we only want the first part to prevent ending with `name.blockframes.eth.blockframes.eth`\n  const [labelName] = name.split('.');\n\n  // compute needed values\n  const fullName = `${labelName}.${config.baseEnsDomain}`;\n  const hash = keccak256(toUtf8Bytes(labelName));\n\n  try {\n    /*\n    ENS registration require 3 interdependent txs to happens :\n    here are the order of the tx and their dependencies\n\n       (A) --> (B) --> (C)     // ENS workflow, (A) must complete before (B)\n\n    */\n\n    const ZERO_ADDRESS = '0x00000000000000000000000000000000000000';\n\n    const retrievedAddress = await relayer.wallet.provider.resolveName(fullName);\n    if (!!retrievedAddress && retrievedAddress !== ZERO_ADDRESS) { // if name is already link to a non-zero address : skip\n      throw new Error(`${fullName} already linked to an address (${retrievedAddress})`);\n    }\n    const result: Record = {};\n\n    // (A) register the user ens username\n    const nameOwner = await relayer.registry.owner(namehash(fullName));\n    if (nameOwner !== relayer.wallet.address) { // if name is already registered : skip registration\n      const registerTx: TxResponse = await relayer.registry.setSubnodeOwner(\n        relayer.namehash,\n        hash,\n        relayer.wallet.address,\n      );\n      result['register'] = await registerTx.wait();\n      console.log(`(A) tx sent (register) : ${registerTx.hash}`); // display tx to firebase logging\n    }\n\n    // (B) set a resolver to the ens username : require waiting for (A)\n    const resolverAddress = await relayer.registry.resolver(namehash(fullName))\n    if (resolverAddress !== relayer.resolver.address) { // if a resolver is already set : skip set resolver\n      const resolverTx: TxResponse = await relayer.registry.setResolver(\n        namehash(fullName),\n        relayer.resolver.address,\n      );\n      result['resolver']= await resolverTx.wait();\n      console.log(`(B) tx sent (setResolver) : ${resolverTx.hash}`); // display tx to firebase logging\n    }\n\n    // (C) link the erc1077 to the ens username : require waiting for (B)\n    const linkTx: TxResponse = await relayer.resolver.setAddr(\n      namehash(fullName),\n      ethAddress,\n    )\n    result['link'] = await linkTx.wait();\n    console.log(`(C) tx sent (setAddress) : ${linkTx.hash}`); // display tx to firebase logging\n    ;\n    return result;\n  } catch (error) {\n    console.error(error);\n    throw new Error(error);\n  }\n};\n\n\n\n//---------------------------------------------------\n//                   SEND\n//---------------------------------------------------\n\nexport async function relayerSendLogic(\n  { ethAddress, tx }: SendParams,\n  config: RelayerConfig\n) {\n  const relayer: Relayer = initRelayer(config);\n  // check required params\n  if (!ethAddress || !tx) {\n    throw new Error('\"ethAddress\" and \"tx\" are mandatory parameters !');\n  }\n\n  try {\n    getAddress(ethAddress);\n  } catch (error) {\n    throw new Error('\"ethAddress\" should be a valid ethereum address !');\n  }\n\n  // compute needed values\n  const erc1077 = new Contract(ethAddress, ERC1077_ABI, relayer.wallet);\n\n  // check if tx will be accepted by erc1077\n  const canExecute: boolean = await erc1077.functions.canExecute(\n    tx.to,\n    tx.value,\n    tx.data,\n    tx.nonce,\n    tx.gasPrice,\n    tx.gasToken,\n    tx.gasLimit,\n    tx.operationType,\n    tx.signatures\n  );\n\n  if (!canExecute) {\n    console.log(tx);\n    throw new Error(\n      'The transaction has not been sent because it will be be rejected by the ERC1077, this is probably a nonce or signatures problem.'\n    );\n  }\n\n  const sendTx = await erc1077.functions.executeSigned(\n    tx.to,\n    tx.value,\n    tx.data,\n    tx.nonce,\n    tx.gasPrice,\n    tx.gasToken,\n    tx.gasLimit,\n    tx.operationType,\n    tx.signatures\n  );\n  console.log(`tx sent (executeSigned) : ${sendTx.hash}`); // display tx to firebase logging\n\n  const txReceipt = await sendTx.wait();\n  return txReceipt;\n};\n\n//---------------------------------------------------\n//               DEPLOY ORG CONTRACT\n//---------------------------------------------------\n\nexport async function relayerDeployOrganizationLogic(\n  adminAddress: string,\n  config: RelayerConfig\n) {\n  const relayer: Relayer = initRelayer(config);\n  // check required params\n  if (!adminAddress) {\n    throw new Error('\"adminAddress\" is a mandatory parameters !');\n  }\n\n  try {\n    getAddress(adminAddress);\n  } catch (error) {\n    throw new Error('\"adminAddress\" should be a valid ethereum address !');\n  }\n\n  const organizationFactory = new ContractFactory(ORG_CONTRACT_ABI, ORG_CONTRACT_BYTECODE, relayer.wallet);\n  const contract = await organizationFactory.deploy(adminAddress);\n  console.log(`tx sent (deployOrganization) : ${contract.deployTransaction.hash}`); // display tx to firebase logging\n  await contract.deployed();\n  return contract.address;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SendParams.html":{"url":"interfaces/SendParams.html","title":"interface - SendParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SendParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend-functions/src/relayer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ethAddress\n                                \n                                \n                                        tx\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ethAddress\n                                    \n                                \n                                \n                                    \n                                        ethAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx\n                                    \n                                \n                                \n                                    \n                                        tx:         SignedMetaTx\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SignedMetaTx\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InfuraProvider } from '@ethersproject/providers';\nimport { Wallet } from '@ethersproject/wallet';\nimport { Contract, ContractFactory } from '@ethersproject/contracts';\nimport { TransactionResponse, TransactionReceipt } from '@ethersproject/abstract-provider';\nimport { namehash } from '@ethersproject/hash';\nimport { keccak256 } from '@ethersproject/keccak256';\nimport { toUtf8Bytes } from '@ethersproject/strings';\nimport { getAddress } from '@ethersproject/address';\nimport { toASCII } from 'punycode';\nimport { abi as CREATE2_FACTORY_ABI } from './contracts/Factory2.json';\nimport { bytecode as ERC1077_BYTECODE, abi as ERC1077_ABI } from './contracts/ERC1077.json';\nimport { abi as ENS_REGISTRY_ABI } from './contracts/ENSRegistry.json';\nimport { abi as ENS_RESOLVER_ABI } from './contracts/PublicResolver.json';\nimport {abi as ORG_CONTRACT_ABI, bytecode as ORG_CONTRACT_BYTECODE } from './contracts/Organization.json';\nimport { db } from './internals/firebase';\n\ntype TxResponse = TransactionResponse;\ntype TxReceipt = TransactionReceipt;\n\nexport interface Relayer {\n  wallet: Wallet;\n  contractFactory: Contract;\n  baseEnsDomain: string;\n  namehash: string;\n  registry: Contract;\n  resolver: Contract;\n}\n\nexport interface RelayerConfig {\n  mnemonic: string;\n  network: string;\n  baseEnsDomain: string;\n  registryAddress: string;\n  resolverAddress: string;\n  factoryContract: string;\n}\n\n/** Regular Ethereum transaction */\nexport interface BaseTx {\n  to: string; // address\n  value: string; // uint256\n  data: string; // bytes\n}\n\n/** A Meta Transaction that encapsulate a regular tx (it will need a signatures before being sent)*/\nexport interface MetaTx extends BaseTx {\n  nonce: string; // uint256\n  gasPrice: string; // uint256\n  gasToken: string; // address\n  gasLimit: string; // uint256\n  operationType: string; // uint8\n}\n\n/** A Meta Transaction with the user signature (ready to be sent) */\nexport interface SignedMetaTx extends MetaTx {\n  signatures: string; // bytes\n}\nexport interface SendParams {\n  ethAddress: string;\n  tx: SignedMetaTx;\n}\n\nexport interface RequestTokensParams {\n  username: string;\n  amount: number;\n}\n\nexport interface SignDeliveryParams {\n  username: string;\n  deliveryId: string;\n  stakeholderId: string;\n}\n\nexport function initRelayer(config: RelayerConfig): Relayer {\n  let wallet = Wallet.fromMnemonic(config.mnemonic);\n  const provider = new InfuraProvider(config.network);\n\n  wallet = wallet.connect(provider);\n\n  const contractFactory = new Contract(config.factoryContract, CREATE2_FACTORY_ABI, wallet);\n  const baseEnsDomain = config.baseEnsDomain;\n  const relayerNamehash = namehash(config.baseEnsDomain);\n  const registry = new Contract(config.registryAddress, ENS_REGISTRY_ABI, wallet);\n  const resolver = new Contract(config.resolverAddress, ENS_RESOLVER_ABI, wallet);\n\n  return {\n    wallet,\n    contractFactory,\n    baseEnsDomain,\n    namehash: relayerNamehash,\n    registry,\n    resolver,\n  };\n}\n\ninterface DeployParams {\n  username: string;\n  key: string;\n  erc1077address: string;\n  orgId: string;\n}\n\ninterface RegisterParams {\n  name: string;\n  ethAddress: string;\n}\n\n// TODO issue#714 (Laurent work on a way to get those functions in only one place)\nexport function emailToEnsDomain(email: string, baseEnsDomain: string) { // !!!! there is a copy of this function in 'libs\\utils\\src\\lib\\helpers.ts'\n  return toASCII(email.split('@')[0]).toLowerCase()\n    .split('')\n    .map(char => /[^\\w\\d-.]/g.test(char) ? char.charCodeAt(0) : char) // replace every non a-z or 0-9 chars by their ASCII code : '?' -> '63'\n    .join('') + '.' + baseEnsDomain;\n}\n\n/**\n * This function precompute a contract address as defined in the EIP 1014 (Skinny Create 2)\n * @param ensDomain this is use as a salt (salt need to be unique for each user)\n * @param provider ethers provider\n */\n// TODO issue#714 (Laurent work on a way to get those functions in only one place)\nexport async function precomputeAddress(ensDomain: string, config: RelayerConfig) { // !!!! there is a copy of this function in 'libs\\utils\\src\\lib\\helpers.ts'\n  const baseName = ensDomain.split('.')[0];\n  const relayer = initRelayer(config);\n  const factoryAddress = await relayer.wallet.provider.resolveName(relayer.contractFactory.address).then(address => address.substr(2));\n  const salt = keccak256(toUtf8Bytes(baseName)).substr(2);\n  const byteCodeHash = keccak256(`0x${ERC1077_BYTECODE}`).substr(2);\n\n  const payload = `0xff${factoryAddress}${salt}${byteCodeHash}`;\n\n  return `0x${keccak256(payload).slice(-40)}`; // first 40 bytes of the hash of the payload\n}\n\n/** check if an ENS name is linked to an eth address */\nexport async function isENSNameRegistered(ensName: string, config: RelayerConfig) {\n  const relayer = initRelayer(config);\n\n  const address = await relayer.wallet.provider.resolveName(ensName); // return eth address or null\n  return !!address;\n}\n\n//---------------------------------------------------\n//                   DEPLOY\n//---------------------------------------------------\n\nexport async function relayerDeployLogic(\n  { username, key, erc1077address, orgId }: DeployParams,\n  config: RelayerConfig\n) {\n  const relayer: Relayer = initRelayer(config);\n\n  // check required params\n  if (!username || !key || !erc1077address || !orgId) {\n    throw new Error('\"username\", \"key\", \"erc1077address\", and \"orgAddress\" are mandatory parameters !');\n  }\n\n  try {\n    getAddress(key);\n    getAddress(erc1077address);\n  } catch (error) {\n    throw new Error('\"key\" and/or \"erc1077address\" should be a valid ethereum address !');\n  }\n\n  // compute needed values\n  const hash = keccak256(toUtf8Bytes(username));\n  const orgName = await db.doc(`/orgs/${orgId}`).get().then(org => org.get('name')) as string;\n  const orgEns = emailToEnsDomain(orgName.replace(' ', '-'), relayer.baseEnsDomain);\n  const orgAddress = await relayer.wallet.provider.resolveName(orgEns);\n\n  try {\n\n    const result: Record = {};\n\n    const codeAtAddress = await relayer.wallet.provider.getCode(erc1077address);\n    if (codeAtAddress === '0x') { // if there is already some code at this address : skip deploy\n      const deployTx: TxResponse = await relayer.contractFactory.deploy(\n        hash,\n        `0x${ERC1077_BYTECODE}`,\n        key.toLocaleLowerCase(),\n        orgAddress.toLocaleLowerCase(),\n      )\n\n      result['deploy'] = await deployTx.wait();\n      console.log(`(D) tx sent (deploy) : ${deployTx.hash}`);\n    }\n\n    return result;\n  } catch (error) {\n    console.error(error);\n    throw new Error(error);\n  }\n};\n\n//---------------------------------------------------\n//                   REGISTER\n//---------------------------------------------------\n\nexport async function relayerRegisterENSLogic(\n  { name, ethAddress }: RegisterParams,\n  config: RelayerConfig\n) {\n  const relayer: Relayer = initRelayer(config);\n\n  // check required params\n  if (!name || !ethAddress) {\n    throw new Error('\"name\" and \"ethAddress\" are mandatory parameters !');\n  }\n\n  try {\n    getAddress(ethAddress);\n  } catch (error) {\n    throw new Error('\"ethAddress\" should be a valid ethereum address !');\n  }\n\n  // in case name is of the form `name.blockframes.eth` we only want the first part to prevent ending with `name.blockframes.eth.blockframes.eth`\n  const [labelName] = name.split('.');\n\n  // compute needed values\n  const fullName = `${labelName}.${config.baseEnsDomain}`;\n  const hash = keccak256(toUtf8Bytes(labelName));\n\n  try {\n    /*\n    ENS registration require 3 interdependent txs to happens :\n    here are the order of the tx and their dependencies\n\n       (A) --> (B) --> (C)     // ENS workflow, (A) must complete before (B)\n\n    */\n\n    const ZERO_ADDRESS = '0x00000000000000000000000000000000000000';\n\n    const retrievedAddress = await relayer.wallet.provider.resolveName(fullName);\n    if (!!retrievedAddress && retrievedAddress !== ZERO_ADDRESS) { // if name is already link to a non-zero address : skip\n      throw new Error(`${fullName} already linked to an address (${retrievedAddress})`);\n    }\n    const result: Record = {};\n\n    // (A) register the user ens username\n    const nameOwner = await relayer.registry.owner(namehash(fullName));\n    if (nameOwner !== relayer.wallet.address) { // if name is already registered : skip registration\n      const registerTx: TxResponse = await relayer.registry.setSubnodeOwner(\n        relayer.namehash,\n        hash,\n        relayer.wallet.address,\n      );\n      result['register'] = await registerTx.wait();\n      console.log(`(A) tx sent (register) : ${registerTx.hash}`); // display tx to firebase logging\n    }\n\n    // (B) set a resolver to the ens username : require waiting for (A)\n    const resolverAddress = await relayer.registry.resolver(namehash(fullName))\n    if (resolverAddress !== relayer.resolver.address) { // if a resolver is already set : skip set resolver\n      const resolverTx: TxResponse = await relayer.registry.setResolver(\n        namehash(fullName),\n        relayer.resolver.address,\n      );\n      result['resolver']= await resolverTx.wait();\n      console.log(`(B) tx sent (setResolver) : ${resolverTx.hash}`); // display tx to firebase logging\n    }\n\n    // (C) link the erc1077 to the ens username : require waiting for (B)\n    const linkTx: TxResponse = await relayer.resolver.setAddr(\n      namehash(fullName),\n      ethAddress,\n    )\n    result['link'] = await linkTx.wait();\n    console.log(`(C) tx sent (setAddress) : ${linkTx.hash}`); // display tx to firebase logging\n    ;\n    return result;\n  } catch (error) {\n    console.error(error);\n    throw new Error(error);\n  }\n};\n\n\n\n//---------------------------------------------------\n//                   SEND\n//---------------------------------------------------\n\nexport async function relayerSendLogic(\n  { ethAddress, tx }: SendParams,\n  config: RelayerConfig\n) {\n  const relayer: Relayer = initRelayer(config);\n  // check required params\n  if (!ethAddress || !tx) {\n    throw new Error('\"ethAddress\" and \"tx\" are mandatory parameters !');\n  }\n\n  try {\n    getAddress(ethAddress);\n  } catch (error) {\n    throw new Error('\"ethAddress\" should be a valid ethereum address !');\n  }\n\n  // compute needed values\n  const erc1077 = new Contract(ethAddress, ERC1077_ABI, relayer.wallet);\n\n  // check if tx will be accepted by erc1077\n  const canExecute: boolean = await erc1077.functions.canExecute(\n    tx.to,\n    tx.value,\n    tx.data,\n    tx.nonce,\n    tx.gasPrice,\n    tx.gasToken,\n    tx.gasLimit,\n    tx.operationType,\n    tx.signatures\n  );\n\n  if (!canExecute) {\n    console.log(tx);\n    throw new Error(\n      'The transaction has not been sent because it will be be rejected by the ERC1077, this is probably a nonce or signatures problem.'\n    );\n  }\n\n  const sendTx = await erc1077.functions.executeSigned(\n    tx.to,\n    tx.value,\n    tx.data,\n    tx.nonce,\n    tx.gasPrice,\n    tx.gasToken,\n    tx.gasLimit,\n    tx.operationType,\n    tx.signatures\n  );\n  console.log(`tx sent (executeSigned) : ${sendTx.hash}`); // display tx to firebase logging\n\n  const txReceipt = await sendTx.wait();\n  return txReceipt;\n};\n\n//---------------------------------------------------\n//               DEPLOY ORG CONTRACT\n//---------------------------------------------------\n\nexport async function relayerDeployOrganizationLogic(\n  adminAddress: string,\n  config: RelayerConfig\n) {\n  const relayer: Relayer = initRelayer(config);\n  // check required params\n  if (!adminAddress) {\n    throw new Error('\"adminAddress\" is a mandatory parameters !');\n  }\n\n  try {\n    getAddress(adminAddress);\n  } catch (error) {\n    throw new Error('\"adminAddress\" should be a valid ethereum address !');\n  }\n\n  const organizationFactory = new ContractFactory(ORG_CONTRACT_ABI, ORG_CONTRACT_BYTECODE, relayer.wallet);\n  const contract = await organizationFactory.deploy(adminAddress);\n  console.log(`tx sent (deployOrganization) : ${contract.deployTransaction.hash}`); // display tx to firebase logging\n  await contract.deployed();\n  return contract.address;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignDeliveryParams.html":{"url":"interfaces/SignDeliveryParams.html","title":"interface - SignDeliveryParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SignDeliveryParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend-functions/src/relayer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        deliveryId\n                                \n                                \n                                        stakeholderId\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deliveryId\n                                    \n                                \n                                \n                                    \n                                        deliveryId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stakeholderId\n                                    \n                                \n                                \n                                    \n                                        stakeholderId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InfuraProvider } from '@ethersproject/providers';\nimport { Wallet } from '@ethersproject/wallet';\nimport { Contract, ContractFactory } from '@ethersproject/contracts';\nimport { TransactionResponse, TransactionReceipt } from '@ethersproject/abstract-provider';\nimport { namehash } from '@ethersproject/hash';\nimport { keccak256 } from '@ethersproject/keccak256';\nimport { toUtf8Bytes } from '@ethersproject/strings';\nimport { getAddress } from '@ethersproject/address';\nimport { toASCII } from 'punycode';\nimport { abi as CREATE2_FACTORY_ABI } from './contracts/Factory2.json';\nimport { bytecode as ERC1077_BYTECODE, abi as ERC1077_ABI } from './contracts/ERC1077.json';\nimport { abi as ENS_REGISTRY_ABI } from './contracts/ENSRegistry.json';\nimport { abi as ENS_RESOLVER_ABI } from './contracts/PublicResolver.json';\nimport {abi as ORG_CONTRACT_ABI, bytecode as ORG_CONTRACT_BYTECODE } from './contracts/Organization.json';\nimport { db } from './internals/firebase';\n\ntype TxResponse = TransactionResponse;\ntype TxReceipt = TransactionReceipt;\n\nexport interface Relayer {\n  wallet: Wallet;\n  contractFactory: Contract;\n  baseEnsDomain: string;\n  namehash: string;\n  registry: Contract;\n  resolver: Contract;\n}\n\nexport interface RelayerConfig {\n  mnemonic: string;\n  network: string;\n  baseEnsDomain: string;\n  registryAddress: string;\n  resolverAddress: string;\n  factoryContract: string;\n}\n\n/** Regular Ethereum transaction */\nexport interface BaseTx {\n  to: string; // address\n  value: string; // uint256\n  data: string; // bytes\n}\n\n/** A Meta Transaction that encapsulate a regular tx (it will need a signatures before being sent)*/\nexport interface MetaTx extends BaseTx {\n  nonce: string; // uint256\n  gasPrice: string; // uint256\n  gasToken: string; // address\n  gasLimit: string; // uint256\n  operationType: string; // uint8\n}\n\n/** A Meta Transaction with the user signature (ready to be sent) */\nexport interface SignedMetaTx extends MetaTx {\n  signatures: string; // bytes\n}\nexport interface SendParams {\n  ethAddress: string;\n  tx: SignedMetaTx;\n}\n\nexport interface RequestTokensParams {\n  username: string;\n  amount: number;\n}\n\nexport interface SignDeliveryParams {\n  username: string;\n  deliveryId: string;\n  stakeholderId: string;\n}\n\nexport function initRelayer(config: RelayerConfig): Relayer {\n  let wallet = Wallet.fromMnemonic(config.mnemonic);\n  const provider = new InfuraProvider(config.network);\n\n  wallet = wallet.connect(provider);\n\n  const contractFactory = new Contract(config.factoryContract, CREATE2_FACTORY_ABI, wallet);\n  const baseEnsDomain = config.baseEnsDomain;\n  const relayerNamehash = namehash(config.baseEnsDomain);\n  const registry = new Contract(config.registryAddress, ENS_REGISTRY_ABI, wallet);\n  const resolver = new Contract(config.resolverAddress, ENS_RESOLVER_ABI, wallet);\n\n  return {\n    wallet,\n    contractFactory,\n    baseEnsDomain,\n    namehash: relayerNamehash,\n    registry,\n    resolver,\n  };\n}\n\ninterface DeployParams {\n  username: string;\n  key: string;\n  erc1077address: string;\n  orgId: string;\n}\n\ninterface RegisterParams {\n  name: string;\n  ethAddress: string;\n}\n\n// TODO issue#714 (Laurent work on a way to get those functions in only one place)\nexport function emailToEnsDomain(email: string, baseEnsDomain: string) { // !!!! there is a copy of this function in 'libs\\utils\\src\\lib\\helpers.ts'\n  return toASCII(email.split('@')[0]).toLowerCase()\n    .split('')\n    .map(char => /[^\\w\\d-.]/g.test(char) ? char.charCodeAt(0) : char) // replace every non a-z or 0-9 chars by their ASCII code : '?' -> '63'\n    .join('') + '.' + baseEnsDomain;\n}\n\n/**\n * This function precompute a contract address as defined in the EIP 1014 (Skinny Create 2)\n * @param ensDomain this is use as a salt (salt need to be unique for each user)\n * @param provider ethers provider\n */\n// TODO issue#714 (Laurent work on a way to get those functions in only one place)\nexport async function precomputeAddress(ensDomain: string, config: RelayerConfig) { // !!!! there is a copy of this function in 'libs\\utils\\src\\lib\\helpers.ts'\n  const baseName = ensDomain.split('.')[0];\n  const relayer = initRelayer(config);\n  const factoryAddress = await relayer.wallet.provider.resolveName(relayer.contractFactory.address).then(address => address.substr(2));\n  const salt = keccak256(toUtf8Bytes(baseName)).substr(2);\n  const byteCodeHash = keccak256(`0x${ERC1077_BYTECODE}`).substr(2);\n\n  const payload = `0xff${factoryAddress}${salt}${byteCodeHash}`;\n\n  return `0x${keccak256(payload).slice(-40)}`; // first 40 bytes of the hash of the payload\n}\n\n/** check if an ENS name is linked to an eth address */\nexport async function isENSNameRegistered(ensName: string, config: RelayerConfig) {\n  const relayer = initRelayer(config);\n\n  const address = await relayer.wallet.provider.resolveName(ensName); // return eth address or null\n  return !!address;\n}\n\n//---------------------------------------------------\n//                   DEPLOY\n//---------------------------------------------------\n\nexport async function relayerDeployLogic(\n  { username, key, erc1077address, orgId }: DeployParams,\n  config: RelayerConfig\n) {\n  const relayer: Relayer = initRelayer(config);\n\n  // check required params\n  if (!username || !key || !erc1077address || !orgId) {\n    throw new Error('\"username\", \"key\", \"erc1077address\", and \"orgAddress\" are mandatory parameters !');\n  }\n\n  try {\n    getAddress(key);\n    getAddress(erc1077address);\n  } catch (error) {\n    throw new Error('\"key\" and/or \"erc1077address\" should be a valid ethereum address !');\n  }\n\n  // compute needed values\n  const hash = keccak256(toUtf8Bytes(username));\n  const orgName = await db.doc(`/orgs/${orgId}`).get().then(org => org.get('name')) as string;\n  const orgEns = emailToEnsDomain(orgName.replace(' ', '-'), relayer.baseEnsDomain);\n  const orgAddress = await relayer.wallet.provider.resolveName(orgEns);\n\n  try {\n\n    const result: Record = {};\n\n    const codeAtAddress = await relayer.wallet.provider.getCode(erc1077address);\n    if (codeAtAddress === '0x') { // if there is already some code at this address : skip deploy\n      const deployTx: TxResponse = await relayer.contractFactory.deploy(\n        hash,\n        `0x${ERC1077_BYTECODE}`,\n        key.toLocaleLowerCase(),\n        orgAddress.toLocaleLowerCase(),\n      )\n\n      result['deploy'] = await deployTx.wait();\n      console.log(`(D) tx sent (deploy) : ${deployTx.hash}`);\n    }\n\n    return result;\n  } catch (error) {\n    console.error(error);\n    throw new Error(error);\n  }\n};\n\n//---------------------------------------------------\n//                   REGISTER\n//---------------------------------------------------\n\nexport async function relayerRegisterENSLogic(\n  { name, ethAddress }: RegisterParams,\n  config: RelayerConfig\n) {\n  const relayer: Relayer = initRelayer(config);\n\n  // check required params\n  if (!name || !ethAddress) {\n    throw new Error('\"name\" and \"ethAddress\" are mandatory parameters !');\n  }\n\n  try {\n    getAddress(ethAddress);\n  } catch (error) {\n    throw new Error('\"ethAddress\" should be a valid ethereum address !');\n  }\n\n  // in case name is of the form `name.blockframes.eth` we only want the first part to prevent ending with `name.blockframes.eth.blockframes.eth`\n  const [labelName] = name.split('.');\n\n  // compute needed values\n  const fullName = `${labelName}.${config.baseEnsDomain}`;\n  const hash = keccak256(toUtf8Bytes(labelName));\n\n  try {\n    /*\n    ENS registration require 3 interdependent txs to happens :\n    here are the order of the tx and their dependencies\n\n       (A) --> (B) --> (C)     // ENS workflow, (A) must complete before (B)\n\n    */\n\n    const ZERO_ADDRESS = '0x00000000000000000000000000000000000000';\n\n    const retrievedAddress = await relayer.wallet.provider.resolveName(fullName);\n    if (!!retrievedAddress && retrievedAddress !== ZERO_ADDRESS) { // if name is already link to a non-zero address : skip\n      throw new Error(`${fullName} already linked to an address (${retrievedAddress})`);\n    }\n    const result: Record = {};\n\n    // (A) register the user ens username\n    const nameOwner = await relayer.registry.owner(namehash(fullName));\n    if (nameOwner !== relayer.wallet.address) { // if name is already registered : skip registration\n      const registerTx: TxResponse = await relayer.registry.setSubnodeOwner(\n        relayer.namehash,\n        hash,\n        relayer.wallet.address,\n      );\n      result['register'] = await registerTx.wait();\n      console.log(`(A) tx sent (register) : ${registerTx.hash}`); // display tx to firebase logging\n    }\n\n    // (B) set a resolver to the ens username : require waiting for (A)\n    const resolverAddress = await relayer.registry.resolver(namehash(fullName))\n    if (resolverAddress !== relayer.resolver.address) { // if a resolver is already set : skip set resolver\n      const resolverTx: TxResponse = await relayer.registry.setResolver(\n        namehash(fullName),\n        relayer.resolver.address,\n      );\n      result['resolver']= await resolverTx.wait();\n      console.log(`(B) tx sent (setResolver) : ${resolverTx.hash}`); // display tx to firebase logging\n    }\n\n    // (C) link the erc1077 to the ens username : require waiting for (B)\n    const linkTx: TxResponse = await relayer.resolver.setAddr(\n      namehash(fullName),\n      ethAddress,\n    )\n    result['link'] = await linkTx.wait();\n    console.log(`(C) tx sent (setAddress) : ${linkTx.hash}`); // display tx to firebase logging\n    ;\n    return result;\n  } catch (error) {\n    console.error(error);\n    throw new Error(error);\n  }\n};\n\n\n\n//---------------------------------------------------\n//                   SEND\n//---------------------------------------------------\n\nexport async function relayerSendLogic(\n  { ethAddress, tx }: SendParams,\n  config: RelayerConfig\n) {\n  const relayer: Relayer = initRelayer(config);\n  // check required params\n  if (!ethAddress || !tx) {\n    throw new Error('\"ethAddress\" and \"tx\" are mandatory parameters !');\n  }\n\n  try {\n    getAddress(ethAddress);\n  } catch (error) {\n    throw new Error('\"ethAddress\" should be a valid ethereum address !');\n  }\n\n  // compute needed values\n  const erc1077 = new Contract(ethAddress, ERC1077_ABI, relayer.wallet);\n\n  // check if tx will be accepted by erc1077\n  const canExecute: boolean = await erc1077.functions.canExecute(\n    tx.to,\n    tx.value,\n    tx.data,\n    tx.nonce,\n    tx.gasPrice,\n    tx.gasToken,\n    tx.gasLimit,\n    tx.operationType,\n    tx.signatures\n  );\n\n  if (!canExecute) {\n    console.log(tx);\n    throw new Error(\n      'The transaction has not been sent because it will be be rejected by the ERC1077, this is probably a nonce or signatures problem.'\n    );\n  }\n\n  const sendTx = await erc1077.functions.executeSigned(\n    tx.to,\n    tx.value,\n    tx.data,\n    tx.nonce,\n    tx.gasPrice,\n    tx.gasToken,\n    tx.gasLimit,\n    tx.operationType,\n    tx.signatures\n  );\n  console.log(`tx sent (executeSigned) : ${sendTx.hash}`); // display tx to firebase logging\n\n  const txReceipt = await sendTx.wait();\n  return txReceipt;\n};\n\n//---------------------------------------------------\n//               DEPLOY ORG CONTRACT\n//---------------------------------------------------\n\nexport async function relayerDeployOrganizationLogic(\n  adminAddress: string,\n  config: RelayerConfig\n) {\n  const relayer: Relayer = initRelayer(config);\n  // check required params\n  if (!adminAddress) {\n    throw new Error('\"adminAddress\" is a mandatory parameters !');\n  }\n\n  try {\n    getAddress(adminAddress);\n  } catch (error) {\n    throw new Error('\"adminAddress\" should be a valid ethereum address !');\n  }\n\n  const organizationFactory = new ContractFactory(ORG_CONTRACT_ABI, ORG_CONTRACT_BYTECODE, relayer.wallet);\n  const contract = await organizationFactory.deploy(adminAddress);\n  console.log(`tx sent (deployOrganization) : ${contract.deployTransaction.hash}`); // display tx to firebase logging\n  await contract.deployed();\n  return contract.address;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignedMetaTx.html":{"url":"interfaces/SignedMetaTx.html","title":"interface - SignedMetaTx","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SignedMetaTx\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend-functions/src/relayer.ts\n        \n\n            \n                Description\n            \n            \n                A Meta Transaction with the user signature (ready to be sent) \n\n            \n\n            \n                Extends\n            \n            \n                        MetaTx\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        signatures\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        signatures\n                                    \n                                \n                                \n                                    \n                                        signatures:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InfuraProvider } from '@ethersproject/providers';\nimport { Wallet } from '@ethersproject/wallet';\nimport { Contract, ContractFactory } from '@ethersproject/contracts';\nimport { TransactionResponse, TransactionReceipt } from '@ethersproject/abstract-provider';\nimport { namehash } from '@ethersproject/hash';\nimport { keccak256 } from '@ethersproject/keccak256';\nimport { toUtf8Bytes } from '@ethersproject/strings';\nimport { getAddress } from '@ethersproject/address';\nimport { toASCII } from 'punycode';\nimport { abi as CREATE2_FACTORY_ABI } from './contracts/Factory2.json';\nimport { bytecode as ERC1077_BYTECODE, abi as ERC1077_ABI } from './contracts/ERC1077.json';\nimport { abi as ENS_REGISTRY_ABI } from './contracts/ENSRegistry.json';\nimport { abi as ENS_RESOLVER_ABI } from './contracts/PublicResolver.json';\nimport {abi as ORG_CONTRACT_ABI, bytecode as ORG_CONTRACT_BYTECODE } from './contracts/Organization.json';\nimport { db } from './internals/firebase';\n\ntype TxResponse = TransactionResponse;\ntype TxReceipt = TransactionReceipt;\n\nexport interface Relayer {\n  wallet: Wallet;\n  contractFactory: Contract;\n  baseEnsDomain: string;\n  namehash: string;\n  registry: Contract;\n  resolver: Contract;\n}\n\nexport interface RelayerConfig {\n  mnemonic: string;\n  network: string;\n  baseEnsDomain: string;\n  registryAddress: string;\n  resolverAddress: string;\n  factoryContract: string;\n}\n\n/** Regular Ethereum transaction */\nexport interface BaseTx {\n  to: string; // address\n  value: string; // uint256\n  data: string; // bytes\n}\n\n/** A Meta Transaction that encapsulate a regular tx (it will need a signatures before being sent)*/\nexport interface MetaTx extends BaseTx {\n  nonce: string; // uint256\n  gasPrice: string; // uint256\n  gasToken: string; // address\n  gasLimit: string; // uint256\n  operationType: string; // uint8\n}\n\n/** A Meta Transaction with the user signature (ready to be sent) */\nexport interface SignedMetaTx extends MetaTx {\n  signatures: string; // bytes\n}\nexport interface SendParams {\n  ethAddress: string;\n  tx: SignedMetaTx;\n}\n\nexport interface RequestTokensParams {\n  username: string;\n  amount: number;\n}\n\nexport interface SignDeliveryParams {\n  username: string;\n  deliveryId: string;\n  stakeholderId: string;\n}\n\nexport function initRelayer(config: RelayerConfig): Relayer {\n  let wallet = Wallet.fromMnemonic(config.mnemonic);\n  const provider = new InfuraProvider(config.network);\n\n  wallet = wallet.connect(provider);\n\n  const contractFactory = new Contract(config.factoryContract, CREATE2_FACTORY_ABI, wallet);\n  const baseEnsDomain = config.baseEnsDomain;\n  const relayerNamehash = namehash(config.baseEnsDomain);\n  const registry = new Contract(config.registryAddress, ENS_REGISTRY_ABI, wallet);\n  const resolver = new Contract(config.resolverAddress, ENS_RESOLVER_ABI, wallet);\n\n  return {\n    wallet,\n    contractFactory,\n    baseEnsDomain,\n    namehash: relayerNamehash,\n    registry,\n    resolver,\n  };\n}\n\ninterface DeployParams {\n  username: string;\n  key: string;\n  erc1077address: string;\n  orgId: string;\n}\n\ninterface RegisterParams {\n  name: string;\n  ethAddress: string;\n}\n\n// TODO issue#714 (Laurent work on a way to get those functions in only one place)\nexport function emailToEnsDomain(email: string, baseEnsDomain: string) { // !!!! there is a copy of this function in 'libs\\utils\\src\\lib\\helpers.ts'\n  return toASCII(email.split('@')[0]).toLowerCase()\n    .split('')\n    .map(char => /[^\\w\\d-.]/g.test(char) ? char.charCodeAt(0) : char) // replace every non a-z or 0-9 chars by their ASCII code : '?' -> '63'\n    .join('') + '.' + baseEnsDomain;\n}\n\n/**\n * This function precompute a contract address as defined in the EIP 1014 (Skinny Create 2)\n * @param ensDomain this is use as a salt (salt need to be unique for each user)\n * @param provider ethers provider\n */\n// TODO issue#714 (Laurent work on a way to get those functions in only one place)\nexport async function precomputeAddress(ensDomain: string, config: RelayerConfig) { // !!!! there is a copy of this function in 'libs\\utils\\src\\lib\\helpers.ts'\n  const baseName = ensDomain.split('.')[0];\n  const relayer = initRelayer(config);\n  const factoryAddress = await relayer.wallet.provider.resolveName(relayer.contractFactory.address).then(address => address.substr(2));\n  const salt = keccak256(toUtf8Bytes(baseName)).substr(2);\n  const byteCodeHash = keccak256(`0x${ERC1077_BYTECODE}`).substr(2);\n\n  const payload = `0xff${factoryAddress}${salt}${byteCodeHash}`;\n\n  return `0x${keccak256(payload).slice(-40)}`; // first 40 bytes of the hash of the payload\n}\n\n/** check if an ENS name is linked to an eth address */\nexport async function isENSNameRegistered(ensName: string, config: RelayerConfig) {\n  const relayer = initRelayer(config);\n\n  const address = await relayer.wallet.provider.resolveName(ensName); // return eth address or null\n  return !!address;\n}\n\n//---------------------------------------------------\n//                   DEPLOY\n//---------------------------------------------------\n\nexport async function relayerDeployLogic(\n  { username, key, erc1077address, orgId }: DeployParams,\n  config: RelayerConfig\n) {\n  const relayer: Relayer = initRelayer(config);\n\n  // check required params\n  if (!username || !key || !erc1077address || !orgId) {\n    throw new Error('\"username\", \"key\", \"erc1077address\", and \"orgAddress\" are mandatory parameters !');\n  }\n\n  try {\n    getAddress(key);\n    getAddress(erc1077address);\n  } catch (error) {\n    throw new Error('\"key\" and/or \"erc1077address\" should be a valid ethereum address !');\n  }\n\n  // compute needed values\n  const hash = keccak256(toUtf8Bytes(username));\n  const orgName = await db.doc(`/orgs/${orgId}`).get().then(org => org.get('name')) as string;\n  const orgEns = emailToEnsDomain(orgName.replace(' ', '-'), relayer.baseEnsDomain);\n  const orgAddress = await relayer.wallet.provider.resolveName(orgEns);\n\n  try {\n\n    const result: Record = {};\n\n    const codeAtAddress = await relayer.wallet.provider.getCode(erc1077address);\n    if (codeAtAddress === '0x') { // if there is already some code at this address : skip deploy\n      const deployTx: TxResponse = await relayer.contractFactory.deploy(\n        hash,\n        `0x${ERC1077_BYTECODE}`,\n        key.toLocaleLowerCase(),\n        orgAddress.toLocaleLowerCase(),\n      )\n\n      result['deploy'] = await deployTx.wait();\n      console.log(`(D) tx sent (deploy) : ${deployTx.hash}`);\n    }\n\n    return result;\n  } catch (error) {\n    console.error(error);\n    throw new Error(error);\n  }\n};\n\n//---------------------------------------------------\n//                   REGISTER\n//---------------------------------------------------\n\nexport async function relayerRegisterENSLogic(\n  { name, ethAddress }: RegisterParams,\n  config: RelayerConfig\n) {\n  const relayer: Relayer = initRelayer(config);\n\n  // check required params\n  if (!name || !ethAddress) {\n    throw new Error('\"name\" and \"ethAddress\" are mandatory parameters !');\n  }\n\n  try {\n    getAddress(ethAddress);\n  } catch (error) {\n    throw new Error('\"ethAddress\" should be a valid ethereum address !');\n  }\n\n  // in case name is of the form `name.blockframes.eth` we only want the first part to prevent ending with `name.blockframes.eth.blockframes.eth`\n  const [labelName] = name.split('.');\n\n  // compute needed values\n  const fullName = `${labelName}.${config.baseEnsDomain}`;\n  const hash = keccak256(toUtf8Bytes(labelName));\n\n  try {\n    /*\n    ENS registration require 3 interdependent txs to happens :\n    here are the order of the tx and their dependencies\n\n       (A) --> (B) --> (C)     // ENS workflow, (A) must complete before (B)\n\n    */\n\n    const ZERO_ADDRESS = '0x00000000000000000000000000000000000000';\n\n    const retrievedAddress = await relayer.wallet.provider.resolveName(fullName);\n    if (!!retrievedAddress && retrievedAddress !== ZERO_ADDRESS) { // if name is already link to a non-zero address : skip\n      throw new Error(`${fullName} already linked to an address (${retrievedAddress})`);\n    }\n    const result: Record = {};\n\n    // (A) register the user ens username\n    const nameOwner = await relayer.registry.owner(namehash(fullName));\n    if (nameOwner !== relayer.wallet.address) { // if name is already registered : skip registration\n      const registerTx: TxResponse = await relayer.registry.setSubnodeOwner(\n        relayer.namehash,\n        hash,\n        relayer.wallet.address,\n      );\n      result['register'] = await registerTx.wait();\n      console.log(`(A) tx sent (register) : ${registerTx.hash}`); // display tx to firebase logging\n    }\n\n    // (B) set a resolver to the ens username : require waiting for (A)\n    const resolverAddress = await relayer.registry.resolver(namehash(fullName))\n    if (resolverAddress !== relayer.resolver.address) { // if a resolver is already set : skip set resolver\n      const resolverTx: TxResponse = await relayer.registry.setResolver(\n        namehash(fullName),\n        relayer.resolver.address,\n      );\n      result['resolver']= await resolverTx.wait();\n      console.log(`(B) tx sent (setResolver) : ${resolverTx.hash}`); // display tx to firebase logging\n    }\n\n    // (C) link the erc1077 to the ens username : require waiting for (B)\n    const linkTx: TxResponse = await relayer.resolver.setAddr(\n      namehash(fullName),\n      ethAddress,\n    )\n    result['link'] = await linkTx.wait();\n    console.log(`(C) tx sent (setAddress) : ${linkTx.hash}`); // display tx to firebase logging\n    ;\n    return result;\n  } catch (error) {\n    console.error(error);\n    throw new Error(error);\n  }\n};\n\n\n\n//---------------------------------------------------\n//                   SEND\n//---------------------------------------------------\n\nexport async function relayerSendLogic(\n  { ethAddress, tx }: SendParams,\n  config: RelayerConfig\n) {\n  const relayer: Relayer = initRelayer(config);\n  // check required params\n  if (!ethAddress || !tx) {\n    throw new Error('\"ethAddress\" and \"tx\" are mandatory parameters !');\n  }\n\n  try {\n    getAddress(ethAddress);\n  } catch (error) {\n    throw new Error('\"ethAddress\" should be a valid ethereum address !');\n  }\n\n  // compute needed values\n  const erc1077 = new Contract(ethAddress, ERC1077_ABI, relayer.wallet);\n\n  // check if tx will be accepted by erc1077\n  const canExecute: boolean = await erc1077.functions.canExecute(\n    tx.to,\n    tx.value,\n    tx.data,\n    tx.nonce,\n    tx.gasPrice,\n    tx.gasToken,\n    tx.gasLimit,\n    tx.operationType,\n    tx.signatures\n  );\n\n  if (!canExecute) {\n    console.log(tx);\n    throw new Error(\n      'The transaction has not been sent because it will be be rejected by the ERC1077, this is probably a nonce or signatures problem.'\n    );\n  }\n\n  const sendTx = await erc1077.functions.executeSigned(\n    tx.to,\n    tx.value,\n    tx.data,\n    tx.nonce,\n    tx.gasPrice,\n    tx.gasToken,\n    tx.gasLimit,\n    tx.operationType,\n    tx.signatures\n  );\n  console.log(`tx sent (executeSigned) : ${sendTx.hash}`); // display tx to firebase logging\n\n  const txReceipt = await sendTx.wait();\n  return txReceipt;\n};\n\n//---------------------------------------------------\n//               DEPLOY ORG CONTRACT\n//---------------------------------------------------\n\nexport async function relayerDeployOrganizationLogic(\n  adminAddress: string,\n  config: RelayerConfig\n) {\n  const relayer: Relayer = initRelayer(config);\n  // check required params\n  if (!adminAddress) {\n    throw new Error('\"adminAddress\" is a mandatory parameters !');\n  }\n\n  try {\n    getAddress(adminAddress);\n  } catch (error) {\n    throw new Error('\"adminAddress\" should be a valid ethereum address !');\n  }\n\n  const organizationFactory = new ContractFactory(ORG_CONTRACT_ABI, ORG_CONTRACT_BYTECODE, relayer.wallet);\n  const contract = await organizationFactory.deploy(adminAddress);\n  console.log(`tx sent (deployOrganization) : ${contract.deployTransaction.hash}`); // display tx to firebase logging\n  await contract.deployed();\n  return contract.address;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SnapObject.html":{"url":"interfaces/SnapObject.html","title":"interface - SnapObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SnapObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend-functions/src/data/types.ts\n        \n\n            \n                Description\n            \n            \n                Custom object used to build notifications. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        docId\n                                \n                                \n                                        movie\n                                \n                                \n                                        organization\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        docId\n                                    \n                                \n                                \n                                    \n                                        docId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        movie\n                                    \n                                \n                                \n                                    \n                                        movie:         PublicMovie\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PublicMovie\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organization\n                                    \n                                \n                                \n                                    \n                                        organization:         PublicOrganization | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PublicOrganization | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         NotificationType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NotificationType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PublicOrganization } from '@blockframes/organization/types';\nimport { NotificationType } from '@blockframes/notification/types';\nimport { PublicMovie } from '@blockframes/movie/types';\n\nexport { MovieDocument } from '@blockframes/movie/types';\nexport { OrganizationDocument, OrganizationStatus } from '@blockframes/organization/types';\nexport {\n  InvitationDocument,\n  InvitationOrUndefined,\n  InvitationStatus,\n  InvitationType,\n  InvitationFromOrganizationToUser,\n  InvitationFromUserToOrganization,\n  InvitationToWorkOnDocument\n} from '@blockframes/invitation/types';\nexport { MaterialDocument, MaterialStatus } from '@blockframes/material/material/types';\nexport { StakeholderDocument } from '@blockframes/organization/stakeholder/types';\nexport {\n  DeliveryDocument,\n  StepDocument,\n  StepDocumentWithDate,\n  convertStepDocumentToStepDocumentWithDate\n} from '@blockframes/material/delivery/types';\n\n/**\n * Types used by the firebase backend.\n *\n * Define all type to be used in the codebase. Please see the index.ts for more\n * details on why, what and what's up next.\n */\n\n// Low Level Types\n// ===============\nexport type IDMap = Record;\n\ninterface DocWithID {\n  id: string;\n}\n\n// Core Application Types\n// ======================\n// Business & App Related\n\nexport interface OrganizationPermissions {\n  superAdmins: string[];\n}\n\nexport interface OrganizationDocPermissions {\n  id: string;\n  canCreate: boolean;\n  canRead: boolean;\n  canUpdate: boolean;\n  canDelete: boolean;\n  owner: boolean;\n}\n\nexport interface UserDocPermissions {\n  id: string;\n  admins: string[];\n  canCreate: string[];\n  canDelete: string[];\n  canRead: string[];\n  canUpdate: string[];\n}\n\nexport enum AppAccessStatus {\n  requested = 'requested',\n  pending = 'pending',\n  accepted = 'accepted'\n}\n\n/** Custom object used to build notifications. */\nexport interface SnapObject {\n  organization: PublicOrganization | undefined;\n  movie: PublicMovie;\n  docId: string;\n  type: NotificationType;\n}\n\n/**\n * Turn a list of items with ids into the corresponding mapping.\n *\n * @param items A list of item with an ID\n * @returns an object that maps each id to its item,\n *          `{id_x: item_x, id_y: item_y, ...}`\n */\nexport function asIDMap(items: T[]): IDMap {\n  return items.reduce((result, item) => ({ ...result, [item.id]: item }), {});\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StakeholderDocument.html":{"url":"interfaces/StakeholderDocument.html","title":"interface - StakeholderDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StakeholderDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/organization/src/lib/stakeholder/+state/stakeholder.firestore.ts\n        \n\n            \n                Description\n            \n            \n                Stakeholder model as it appears in Firestore. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        isAccepted\n                                \n                                \n                                            Optional\n                                        processedId\n                                \n                                \n                                        role\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isAccepted\n                                    \n                                \n                                \n                                    \n                                        isAccepted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        processedId\n                                    \n                                \n                                \n                                    \n                                        processedId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface StakeholderDocument {\n  id: string;\n  role: string\n  isAccepted: boolean;\n  processedId?: string;\n}\n\n/** A factory function that create a stakeholder. */\nexport function createStakeholder(params: Partial = {}): StakeholderDocument {\n  return {\n    id: '',\n    role: '',\n    isAccepted: false,\n    ...params,\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StepDocument.html":{"url":"interfaces/StepDocument.html","title":"interface - StepDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StepDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/material/src/lib/delivery/+state/delivery.firestore.ts\n        \n\n            \n                Description\n            \n            \n                Document model of a Step \n\n            \n\n            \n                Extends\n            \n            \n                        StepRaw\n            \n\n\n\n\n    \n\n\n    \n        import { default as staticModels } from '@blockframes/movie/movie/static-model/staticModels';\nimport { firestore } from 'firebase';\n\nexport type Timestamp = firestore.Timestamp;\nexport type CurrencyCode = ((typeof staticModels)['MOVIE_CURRENCIES'])[number]['code'];\n\nexport const enum DeliveryStatus {\n  negociation = 'Delivery in negotiation',\n  pending = 'Materials pending',\n  noa = 'Notice of Availability',\n  nod = 'Notice of Delivery',\n  accepted = 'Materials accepted'\n}\n\n/** This is a Minimum Guarantee deadline, can be used to interact with the frontend (D = Date) or backend (D = Timestamp). */\nexport interface MGDeadlineRaw {\n  percentage: number;\n  date?: D;\n  label: string;\n}\n\n/** The Step of a given delivery, can be used to interact with the frontend (D = Date) or backend (D = Timestamp). */\ninterface StepRaw {\n  id: string;\n  name: string;\n  date?: D | null;\n}\n\n/** A given delivery, can be used to interact with the frontend (D = Date) or backend (D = Timestamp). */\ninterface DeliveryRaw {\n  id: string;\n  _type: 'deliveries';\n  isPaid: boolean;\n  movieId: string;\n  mustChargeMaterials?: boolean;\n  mustBeSigned?: boolean;\n  status: DeliveryStatus;\n  dueDate?: D;\n  /** Time to accept a material */\n  acceptationPeriod?: number;\n  /** Time to return a refused material */\n  reWorkingPeriod?: number;\n  mgAmount?: number;\n  mgCurrency?: CurrencyCode;\n  mgDeadlines?: MGDeadlineRaw[];\n  steps: StepRaw[];\n  validated: string[]; // Stakeholder.id[];\n  mgCurrentDeadline?: number;\n  isSigned?: boolean;\n  processedId?: string;\n}\n\n/** Document model of a delivery */\nexport interface DeliveryDocument extends DeliveryRaw {\n}\n\nexport interface DeliveryDocumentWithDates extends DeliveryRaw {\n}\n\n/** Document model of a Step */\nexport interface StepDocument extends StepRaw {}\n\n/** Document model of a Step with dates typed in Date. */\nexport interface StepDocumentWithDate extends StepRaw {}\n\n/** Convert a StepDocument to a Step (that uses Date). */\nexport function convertStepDocumentToStepDocumentWithDate(steps: StepDocument[]): StepDocumentWithDate[] {\n  if (!steps) {\n    return [];\n  }\n\n  return steps.map(step => {\n    if (!!step.date) {\n      return { ...step, date: step.date.toDate() };\n    } else {\n      return { ...step, date: null}\n    }\n  });\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StepDocumentWithDate.html":{"url":"interfaces/StepDocumentWithDate.html","title":"interface - StepDocumentWithDate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StepDocumentWithDate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/material/src/lib/delivery/+state/delivery.firestore.ts\n        \n\n            \n                Description\n            \n            \n                Document model of a Step with dates typed in Date. \n\n            \n\n            \n                Extends\n            \n            \n                        StepRaw\n            \n\n\n\n\n    \n\n\n    \n        import { default as staticModels } from '@blockframes/movie/movie/static-model/staticModels';\nimport { firestore } from 'firebase';\n\nexport type Timestamp = firestore.Timestamp;\nexport type CurrencyCode = ((typeof staticModels)['MOVIE_CURRENCIES'])[number]['code'];\n\nexport const enum DeliveryStatus {\n  negociation = 'Delivery in negotiation',\n  pending = 'Materials pending',\n  noa = 'Notice of Availability',\n  nod = 'Notice of Delivery',\n  accepted = 'Materials accepted'\n}\n\n/** This is a Minimum Guarantee deadline, can be used to interact with the frontend (D = Date) or backend (D = Timestamp). */\nexport interface MGDeadlineRaw {\n  percentage: number;\n  date?: D;\n  label: string;\n}\n\n/** The Step of a given delivery, can be used to interact with the frontend (D = Date) or backend (D = Timestamp). */\ninterface StepRaw {\n  id: string;\n  name: string;\n  date?: D | null;\n}\n\n/** A given delivery, can be used to interact with the frontend (D = Date) or backend (D = Timestamp). */\ninterface DeliveryRaw {\n  id: string;\n  _type: 'deliveries';\n  isPaid: boolean;\n  movieId: string;\n  mustChargeMaterials?: boolean;\n  mustBeSigned?: boolean;\n  status: DeliveryStatus;\n  dueDate?: D;\n  /** Time to accept a material */\n  acceptationPeriod?: number;\n  /** Time to return a refused material */\n  reWorkingPeriod?: number;\n  mgAmount?: number;\n  mgCurrency?: CurrencyCode;\n  mgDeadlines?: MGDeadlineRaw[];\n  steps: StepRaw[];\n  validated: string[]; // Stakeholder.id[];\n  mgCurrentDeadline?: number;\n  isSigned?: boolean;\n  processedId?: string;\n}\n\n/** Document model of a delivery */\nexport interface DeliveryDocument extends DeliveryRaw {\n}\n\nexport interface DeliveryDocumentWithDates extends DeliveryRaw {\n}\n\n/** Document model of a Step */\nexport interface StepDocument extends StepRaw {}\n\n/** Document model of a Step with dates typed in Date. */\nexport interface StepDocumentWithDate extends StepRaw {}\n\n/** Convert a StepDocument to a Step (that uses Date). */\nexport function convertStepDocumentToStepDocumentWithDate(steps: StepDocument[]): StepDocumentWithDate[] {\n  if (!steps) {\n    return [];\n  }\n\n  return steps.map(step => {\n    if (!!step.date) {\n      return { ...step, date: step.date.toDate() };\n    } else {\n      return { ...step, date: null}\n    }\n  });\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StepRaw.html":{"url":"interfaces/StepRaw.html","title":"interface - StepRaw","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StepRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/material/src/lib/delivery/+state/delivery.firestore.ts\n        \n\n            \n                Description\n            \n            \n                The Step of a given delivery, can be used to interact with the frontend (D = Date) or backend (D = Timestamp). \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        date\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:     D | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     D | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { default as staticModels } from '@blockframes/movie/movie/static-model/staticModels';\nimport { firestore } from 'firebase';\n\nexport type Timestamp = firestore.Timestamp;\nexport type CurrencyCode = ((typeof staticModels)['MOVIE_CURRENCIES'])[number]['code'];\n\nexport const enum DeliveryStatus {\n  negociation = 'Delivery in negotiation',\n  pending = 'Materials pending',\n  noa = 'Notice of Availability',\n  nod = 'Notice of Delivery',\n  accepted = 'Materials accepted'\n}\n\n/** This is a Minimum Guarantee deadline, can be used to interact with the frontend (D = Date) or backend (D = Timestamp). */\nexport interface MGDeadlineRaw {\n  percentage: number;\n  date?: D;\n  label: string;\n}\n\n/** The Step of a given delivery, can be used to interact with the frontend (D = Date) or backend (D = Timestamp). */\ninterface StepRaw {\n  id: string;\n  name: string;\n  date?: D | null;\n}\n\n/** A given delivery, can be used to interact with the frontend (D = Date) or backend (D = Timestamp). */\ninterface DeliveryRaw {\n  id: string;\n  _type: 'deliveries';\n  isPaid: boolean;\n  movieId: string;\n  mustChargeMaterials?: boolean;\n  mustBeSigned?: boolean;\n  status: DeliveryStatus;\n  dueDate?: D;\n  /** Time to accept a material */\n  acceptationPeriod?: number;\n  /** Time to return a refused material */\n  reWorkingPeriod?: number;\n  mgAmount?: number;\n  mgCurrency?: CurrencyCode;\n  mgDeadlines?: MGDeadlineRaw[];\n  steps: StepRaw[];\n  validated: string[]; // Stakeholder.id[];\n  mgCurrentDeadline?: number;\n  isSigned?: boolean;\n  processedId?: string;\n}\n\n/** Document model of a delivery */\nexport interface DeliveryDocument extends DeliveryRaw {\n}\n\nexport interface DeliveryDocumentWithDates extends DeliveryRaw {\n}\n\n/** Document model of a Step */\nexport interface StepDocument extends StepRaw {}\n\n/** Document model of a Step with dates typed in Date. */\nexport interface StepDocumentWithDate extends StepRaw {}\n\n/** Convert a StepDocument to a Step (that uses Date). */\nexport function convertStepDocumentToStepDocumentWithDate(steps: StepDocument[]): StepDocumentWithDate[] {\n  if (!steps) {\n    return [];\n  }\n\n  return steps.map(step => {\n    if (!!step.date) {\n      return { ...step, date: step.date.toDate() };\n    } else {\n      return { ...step, date: null}\n    }\n  });\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StoredDocument.html":{"url":"interfaces/StoredDocument.html","title":"interface - StoredDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StoredDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend-functions/src/backup.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        docPath\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        docPath\n                                    \n                                \n                                \n                                    \n                                        docPath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { isArray, isEqual, isPlainObject, sortBy } from 'lodash';\nimport readline from 'readline';\nimport { Writable } from 'stream';\nimport * as admin from 'firebase-admin';\nimport { Bucket, File as GFile } from '@google-cloud/storage';\nimport { db, getBackupBucketName } from './internals/firebase';\n\ntype Firestore = admin.firestore.Firestore\ntype CollectionReference = admin.firestore.CollectionReference;\ntype QuerySnapshot = admin.firestore.QuerySnapshot;\ntype QueryDocumentSnapshot = admin.firestore.QueryDocumentSnapshot;\ntype DocumentReference = admin.firestore.DocumentReference;\n\nconst THIRTY_SECONDS_IN_MS = 30 * 1000;\n\ninterface StoredDocument {\n  docPath: string;\n  content: any;\n}\n\nclass Queue {\n  content: string[] = [];\n\n  push(x: string) {\n    this.content.push(x);\n  }\n\n  pop(): string {\n    const x = this.content.shift();\n\n    if (x === undefined) {\n      throw new Error('popping from an empty queue');\n    } else {\n      return x;\n    }\n  }\n\n  isEmpty(): boolean {\n    return this.content.length === 0;\n  }\n}\n\nconst KEYS_TIMESTAMP = sortBy(['_seconds', '_nanoseconds']);\n\nconst getBackupBucket = async (): Promise => {\n  const bucket: Bucket = admin.storage().bucket(getBackupBucketName());\n  const exists = await bucket.exists();\n\n  // The api returns an array.\n  if (!exists[0]) {\n    await bucket.create();\n  }\n\n  return bucket;\n};\n\nconst getBackupOutput = async (bucket: Bucket, name: string): Promise => {\n  const blob = bucket.file(`${name}.jsonl`);\n  return blob.createWriteStream({ resumable: false });\n};\n\n/**\n * Return all collection in the firestore instance provided, skip the \"meta\" collection\n * that should not be backup'd or restored.\n *\n * @param firestore\n */\nconst backupedCollections = async (firestore: Firestore): Promise => {\n  const collections: CollectionReference[] = await firestore.listCollections();\n  return collections\n    .filter(x => !x.path.startsWith('_restore'));\n};\n\nexport const freeze = async (req: any, resp: any) => {\n  // Prep ouput\n  const now = new Date().toISOString();\n  const bucket: Bucket = await getBackupBucket();\n  const stream = await getBackupOutput(bucket, now);\n\n  // Note: we use a Queue to store the collections to backup instead of doing a recursion,\n  // this will protect the stack. It will break when the size of keys to backup grows\n  // larger than our memory quota (memory is around 500mo => around 50GB of firestore data to backup)\n  // We'll have to store them in a collection at this point.\n  const processingQueue = new Queue();\n\n  // retrieve all the collections at the root.\n  const collections: CollectionReference[] = await backupedCollections(db);\n  collections.forEach(x => processingQueue.push(x.path));\n\n  while (!processingQueue.isEmpty()) {\n    // Note: we could speed up the code by processing multiple collections at once,\n    // we push many promises to a \"worker queue\" and await them when it reaches a certain size\n    // instead of using a while that blocks over every item.\n\n    const currentPath: string = processingQueue.pop();\n    const q: QuerySnapshot = await db.collection(currentPath).get();\n\n    if (q.size === 0) {\n      // Empty, move on\n      continue;\n    }\n\n    // Go through each document of the collection for backup\n    const promises = q.docs.map(async (doc: QueryDocumentSnapshot) => {\n      // Store the data\n      const docPath: string = doc.ref.path;\n      const content: any = doc.data();\n      const stored: StoredDocument = { docPath, content };\n\n      stream.write(JSON.stringify(stored));\n      stream.write('\\n');\n\n      // Adding the current path to the subcollections to backup\n      const subCollections = await doc.ref.listCollections();\n      subCollections.forEach(x => processingQueue.push(x.path));\n    });\n\n    // Wait for this backup to complete\n    await Promise.all(promises);\n  }\n\n  console.info('Done, closing our stream');\n  await new Promise(resolve => {\n    stream.end(resolve);\n  });\n\n  console.info('Finally');\n  return resp.status(200).send('success');\n};\n\nconst clear = async () => {\n  const processingQueue = new Queue();\n\n  // Note: this code is heavily inspired by the backup function,\n  // TODO: implement a generalized way to go through all docs & collections\n  // and use it in both functions.\n\n  // retrieve all the collections at the root.\n  const collections: CollectionReference[] = await backupedCollections(db);\n  collections.forEach(x => processingQueue.push(x.path));\n\n  while (!processingQueue.isEmpty()) {\n    const currentPath: string = processingQueue.pop();\n    const docs: DocumentReference[] = await db.collection(currentPath).listDocuments();\n\n    // keep all docs subcollection to be deleted to,\n    // delete every doc content.\n    const promises = docs.map(async doc => {\n      // Adding the current path to the subcollections to backup\n      const subCollections = await doc.listCollections();\n      subCollections.forEach(x => processingQueue.push(x.path));\n\n      // Delete the document\n      return doc.delete();\n    });\n\n    await Promise.all(promises);\n  }\n\n  return true;\n};\n\n/**\n * Take a json object and re-encode its content to match our firebase storage.\n *\n * For example: transform {_second, _nanoseconds} objects back to firestore timestamps\n * objects.\n *\n * @param x the object to reencode\n * @returns a new object\n */\nfunction reEncodeObject(x: any): any {\n  if (isArray(x)) {\n    // array: recursive descent for each item (used in steps object for example)\n    return x.map(reEncodeObject);\n  } else if (isPlainObject(x)) {\n    const keys = Object.keys(x);\n\n    if (isEqual(sortBy(keys), KEYS_TIMESTAMP)) {\n      // We have a timestamp object, re-encode\n      return new admin.firestore.Timestamp(x._seconds, x._nanoseconds);\n    } else {\n      // else: recursive descent\n      const r: any = {};\n      keys.forEach(k => {\n        r[k] = reEncodeObject(x[k]);\n      });\n      return r;\n    }\n  } else {\n    return x;\n  }\n}\n\n/**\n * Set the restore timestamp to now.\n */\nexport const setRestoreFlag = async () => {\n  return db.collection('_restore').doc('_DOC').set({ restoredAt: admin.firestore.FieldValue.serverTimestamp() });\n};\n\nconst isRestoring = async () => {\n  const docRestoreMeta = await db.collection('_restore').doc('_DOC').get();\n  if (docRestoreMeta.exists && docRestoreMeta.data() && docRestoreMeta.data()!.restoredAt) {\n    // @ts-ignore: within this block, we know .data() and `restoredAt' are set\n    const { restoredAt } = docRestoreMeta.data();\n\n    const now = admin.firestore.Timestamp.now();\n\n    // If we started the restoration less than twenty seconds ago, we are still in the restore process,\n    return restoredAt.toMillis() + THIRTY_SECONDS_IN_MS > now.toMillis();\n  }\n  return false;\n};\n\n// TODO: take the time to fix the types,\n// probably turn this into a generic (f: T) to and preserve types.\nexport const skipWhenRestoring = (f: any) => {\n  // return a new function that is:\n  // the old function + a check that early exits when we are restoring.\n  return async (...args: any[]) => {\n    // early exit\n    if (await isRestoring()) {\n      return true;\n    }\n\n    return f(...args);\n  };\n};\n\n\nexport const restore = async (req: any, resp: any) => {\n  // We get the backup file before clearing the db, just in case.\n  const bucket = await getBackupBucket();\n  const files: GFile[] = (await bucket.getFiles())[0];\n  const sortedFiles: GFile[] = sortBy(files, ['name']);\n\n  if (sortedFiles.length === 0) {\n    console.info('nothing to restore, leaving');\n    return resp.status(200).send('nothing-to-restore');\n  }\n\n  const lastFile: GFile = sortedFiles[sortedFiles.length - 1];\n\n  console.info('Updating restore flag');\n  await setRestoreFlag();\n\n  console.info('Clearing the database');\n  await clear();\n\n  console.info('restoring file:', lastFile.name);\n  const stream = lastFile.createReadStream();\n  const lineReader = readline.createInterface({\n    input: stream,\n    terminal: false\n  });\n\n  const promises: Promise[] = [];\n\n  const readerDone = new Promise(resolve => {\n    lineReader.on('close', resolve);\n  });\n\n  stream.on('end', () => {\n    lineReader.close();\n  });\n\n  // TODO: make this part scalable too, we're going to load the file\n  // and create promises \"as fast as possible\", we should backpressure the\n  // callback somehow to make sure the X previous promises have been completed\n  // before adding more. This will protect us from memory overflow (similar\n  // to the note in the backup code).\n  lineReader.on('line', line => {\n    const stored: StoredDocument = JSON.parse(line);\n    promises.push(db.doc(stored.docPath).set(reEncodeObject(stored.content)));\n  });\n\n  promises.push(readerDone);\n  await Promise.all(promises);\n\n  await setRestoreFlag();\n\n  console.info(`Done processing: ${promises.length - 1} lines loaded`);\n  return resp.status(200).send('success');\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Template.html":{"url":"interfaces/Template.html","title":"interface - Template","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Template\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend-functions/src/migrations.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        created\n                                \n                                \n                                        id\n                                \n                                \n                                        materialsId\n                                \n                                \n                                        orgId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        created\n                                    \n                                \n                                \n                                    \n                                        created:     FieldValue | Timestamp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FieldValue | Timestamp\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        materialsId\n                                    \n                                \n                                \n                                    \n                                        materialsId:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orgId\n                                    \n                                \n                                \n                                    \n                                        orgId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { getCollection, getCount } from './data/internals';\nimport { OrganizationDocument, MaterialDocument } from './data/types';\nimport { db, serverTimestamp } from './internals/firebase';\nimport { WriteBatch, FieldValue, Timestamp } from '@google-cloud/firestore';\nimport { setRestoreFlag } from './backup';\n\n// TODO: Move this to shared library\ninterface Template {\n  id: string;\n  orgId: string;\n  materialsId: string[];\n  created: FieldValue | Timestamp;\n}\n\n/*\n  UpdateToV2:\n  ===========\n\n  The following functions move Templates from Organizations (/orgs/orgID/templates)\n  to a root collection for Templates (/templates).\n\n  It also moves the Material collection from Organizations (/orgs/orgID/materials) to a\n  template sub-collection (/templates/templateID/materials)\n*/\n\nfunction migrateMaterialToNewCollection(\n  batch: WriteBatch,\n  template: Template,\n  material: MaterialDocument\n) {\n  if (template.materialsId.includes(material.id)) {\n    const materialRef = db.doc(`templates/${template.id}/materials/${material.id}`);\n    batch.set(materialRef, material);\n  }\n}\n\nfunction migrateTemplateToNewCollection(\n  batch: WriteBatch,\n  org: OrganizationDocument,\n  template: Template\n) {\n  const newTemplate = { ...template, orgId: org.id, created: serverTimestamp() };\n  delete newTemplate.materialsId;\n  const templateRef = db.doc(`templates/${template.id}`);\n  batch.set(templateRef, newTemplate);\n}\n\nasync function migrateOrgsTemplate(batch: WriteBatch, org: OrganizationDocument): Promise {\n\n  const [templates, materials] = await Promise.all([\n    getCollection(`orgs/${org.id}/templates`),\n    getCollection(`orgs/${org.id}/materials`)\n  ]);\n\n  templates.forEach(template => {\n    migrateTemplateToNewCollection(batch, org, template);\n\n    materials.forEach(material => {\n      migrateMaterialToNewCollection(batch, template, material);\n    });\n  });\n}\n\nexport async function copyTemplates() {\n  const batch = db.batch();\n  const orgs = await getCollection(`orgs`);\n  const promises = orgs.map(org => migrateOrgsTemplate(batch, org));\n  await Promise.all(promises);\n  return batch.commit();\n}\n\nexport async function deleteTemplates() {\n  const batch = db.batch();\n  const orgs = await getCollection(`orgs`);\n  const promises = orgs.map(async org => {\n    const [nbTemplates, nbMaterials] = await Promise.all([\n      getCount(`orgs/${org.id}/templates`),\n      getCount(`orgs/${org.id}/materials`)\n    ]);\n\n    if (nbTemplates > 0) {\n      const templates = await db.collection(`orgs/${org.id}/templates`).get();\n      templates.forEach(doc => batch.delete(doc.ref));\n    }\n\n    if (nbMaterials > 0) {\n      const materials = await db.collection(`orgs/${org.id}/materials`).get();\n      materials.forEach(doc => batch.delete(doc.ref));\n    }\n  });\n  await Promise.all(promises);\n  return batch.commit();\n}\n\nexport async function updateToV2(req: any, resp: any) {\n  await setRestoreFlag();\n  await copyTemplates();\n  await deleteTemplates();\n  return resp.status(200).send('success');\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TemplateDocument.html":{"url":"interfaces/TemplateDocument.html","title":"interface - TemplateDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TemplateDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/material/src/lib/template/+state/template.firestore.ts\n        \n\n            \n                Description\n            \n            \n                Document model of a template. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _type\n                                \n                                \n                                        created\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        orgId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _type\n                                    \n                                \n                                \n                                    \n                                        _type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created\n                                    \n                                \n                                \n                                    \n                                        created:         Timestamp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Timestamp\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orgId\n                                    \n                                \n                                \n                                    \n                                        orgId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { firestore } from \"firebase\";\n\ntype Timestamp = firestore.Timestamp;\n\n/** Document model of a template. */\nexport interface TemplateDocument {\n  id: string;\n  name: string;\n  orgId: string;\n  created: Timestamp;\n  _type: 'templates';\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Title.html":{"url":"interfaces/Title.html","title":"interface - Title","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Title\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/movie/src/lib/movie/+state/movie.firestore.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        international\n                                \n                                \n                                        original\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        international\n                                    \n                                \n                                \n                                    \n                                        international:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        original\n                                    \n                                \n                                \n                                    \n                                        original:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DateRangeRaw } from \"@blockframes/utils/date-range\";\nimport { firestore } from \"firebase/app\";\n\ntype Timestamp = firestore.Timestamp;\n\nexport interface MovieVersionInfo {\n  dubbings: string[],\n  subtitles: string[],\n}\n\ninterface MovieSalesAgentDealRaw {\n  rights: DateRangeRaw;\n  territories: string[],\n  medias: string[],\n}\n\nexport interface MovieSalesAgentDealDocumentWithDates extends MovieSalesAgentDealRaw {\n}\n\nexport interface MoviePromotionalDescription {\n  keyAssets: string[],\n  keywords: string[],\n}\n\nexport interface Prize {\n  name: string,\n  year: number,\n  prize?: string,\n}\n\nexport interface PromotionalElement {\n  label: string,\n  url: string\n}\n\nexport interface MoviePromotionalElements {\n  images: string[],\n  promotionalElements: PromotionalElement[],\n}\n\nexport interface Title {\n  original: string;\n  international?: string;\n}\n\nexport interface Credit {\n  firstName: string,\n  lastName?: string,\n  creditRole?: string,\n}\n\nexport interface MovieStory {\n  synopsis: string,\n  logline: string,\n}\n\nexport interface MovieSalesCast {\n  credits: Credit[],\n}\n\nexport interface MovieFestivalPrizes {\n  prizes: Prize[]\n}\n\ninterface MovieSaleRaw {\n  operatorName: string;\n  showOperatorName: boolean; //@todo #581 Promotional Distribution Deal\n  rights: DateRangeRaw;\n  territories: string[];\n  medias: string[];\n  dubbings: string[];\n  subtitles: string[];\n  exclusive: boolean;\n  price: number;\n}\n\nexport interface MovieSaleDocumentWithDates extends MovieSaleRaw {\n}\n\nexport interface MovieMain {\n  internalRef?: string,\n  isan?: string,\n  title: Title,\n  directors?: Credit[],\n  poster?: string,\n  productionYear?: number,\n  genres?: string[],\n  originCountries?: string[],\n  languages?: string[],\n  status?: string,\n  productionCompanies?: Credit[],\n  length?: number,\n  shortSynopsis?: string,\n}\n\ninterface MovieSalesInfoRaw {\n  scoring: string,\n  color: string,\n  europeanQualification: boolean,\n  pegi: string,\n  certifications: string[],\n  internationalPremiere: Prize,\n  originCountryReleaseDate: D,\n  broadcasterCoproducers: string[],\n}\n\nexport interface MovieSalesInfoDocumentWithDates extends MovieSalesInfoRaw {\n}\n\n/** Generic interface of a Movie */\ninterface MovieRaw {\n  // @todo #643 add new fields to Draw.io\n  _type: 'movies';\n  id: string;\n\n  // @todo #643 not main movie attributes WIP\n\n  deliveryIds: string[];\n  ipId?: string;\n  directorNote?: string;\n  producerNote?: string;\n  goalBudget?: number;\n  movieCurrency?: string;\n  fundedBudget?: number;\n  breakeven?: number;\n  backendProfit?: number;\n  potentialRevenues?: number;\n  selectionCategories?: string;\n\n  // Sections\n  sales: MovieSaleRaw[]; //@todo 581 => move to subcollection\n  main: MovieMain;\n  story: MovieStory;\n  promotionalElements: MoviePromotionalElements;\n  promotionalDescription: MoviePromotionalDescription;\n  salesCast: MovieSalesCast;\n  salesInfo: MovieSalesInfoRaw;\n  versionInfo: MovieVersionInfo;\n  festivalPrizes: MovieFestivalPrizes;\n  salesAgentDeal: MovieSalesAgentDealRaw;\n}\n\n/** Document model of a Movie */\nexport interface MovieDocument extends MovieRaw {\n}\n\n/** Document model of a Movie with Dates (type Date) */\nexport interface MovieDocumentWithDates extends MovieRaw {\n}\n\n/** Public interface of a movie (to notifications). */\nexport interface PublicMovie {\n  id: string;\n  title: Title;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserDocPermissions.html":{"url":"interfaces/UserDocPermissions.html","title":"interface - UserDocPermissions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserDocPermissions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend-functions/src/data/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        admins\n                                \n                                \n                                        canCreate\n                                \n                                \n                                        canDelete\n                                \n                                \n                                        canRead\n                                \n                                \n                                        canUpdate\n                                \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        admins\n                                    \n                                \n                                \n                                    \n                                        admins:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canCreate\n                                    \n                                \n                                \n                                    \n                                        canCreate:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canDelete\n                                    \n                                \n                                \n                                    \n                                        canDelete:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canRead\n                                    \n                                \n                                \n                                    \n                                        canRead:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canUpdate\n                                    \n                                \n                                \n                                    \n                                        canUpdate:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PublicOrganization } from '@blockframes/organization/types';\nimport { NotificationType } from '@blockframes/notification/types';\nimport { PublicMovie } from '@blockframes/movie/types';\n\nexport { MovieDocument } from '@blockframes/movie/types';\nexport { OrganizationDocument, OrganizationStatus } from '@blockframes/organization/types';\nexport {\n  InvitationDocument,\n  InvitationOrUndefined,\n  InvitationStatus,\n  InvitationType,\n  InvitationFromOrganizationToUser,\n  InvitationFromUserToOrganization,\n  InvitationToWorkOnDocument\n} from '@blockframes/invitation/types';\nexport { MaterialDocument, MaterialStatus } from '@blockframes/material/material/types';\nexport { StakeholderDocument } from '@blockframes/organization/stakeholder/types';\nexport {\n  DeliveryDocument,\n  StepDocument,\n  StepDocumentWithDate,\n  convertStepDocumentToStepDocumentWithDate\n} from '@blockframes/material/delivery/types';\n\n/**\n * Types used by the firebase backend.\n *\n * Define all type to be used in the codebase. Please see the index.ts for more\n * details on why, what and what's up next.\n */\n\n// Low Level Types\n// ===============\nexport type IDMap = Record;\n\ninterface DocWithID {\n  id: string;\n}\n\n// Core Application Types\n// ======================\n// Business & App Related\n\nexport interface OrganizationPermissions {\n  superAdmins: string[];\n}\n\nexport interface OrganizationDocPermissions {\n  id: string;\n  canCreate: boolean;\n  canRead: boolean;\n  canUpdate: boolean;\n  canDelete: boolean;\n  owner: boolean;\n}\n\nexport interface UserDocPermissions {\n  id: string;\n  admins: string[];\n  canCreate: string[];\n  canDelete: string[];\n  canRead: string[];\n  canUpdate: string[];\n}\n\nexport enum AppAccessStatus {\n  requested = 'requested',\n  pending = 'pending',\n  accepted = 'accepted'\n}\n\n/** Custom object used to build notifications. */\nexport interface SnapObject {\n  organization: PublicOrganization | undefined;\n  movie: PublicMovie;\n  docId: string;\n  type: NotificationType;\n}\n\n/**\n * Turn a list of items with ids into the corresponding mapping.\n *\n * @param items A list of item with an ID\n * @returns an object that maps each id to its item,\n *          `{id_x: item_x, id_y: item_y, ...}`\n */\nexport function asIDMap(items: T[]): IDMap {\n  return items.reduce((result, item) => ({ ...result, [item.id]: item }), {});\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserProposal.html":{"url":"interfaces/UserProposal.html","title":"interface - UserProposal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserProposal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend-functions/src/users.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        uid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                    \n                                \n                                \n                                    \n                                        uid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as admin from 'firebase-admin';\nimport * as functions from 'firebase-functions';\nimport { generate as passwordGenerator } from 'generate-password';\nimport { auth, db } from './internals/firebase';\nimport { userInvite } from './assets/mail-templates';\nimport { sendMail } from './internals/email';\n\ntype UserRecord = admin.auth.UserRecord;\ntype CallableContext = functions.https.CallableContext;\n\ninterface UserProposal {\n  uid: string;\n  email: string;\n}\n\ninterface OrgProposal {\n  id: string;\n  name: string;\n}\n\nconst onUserCreate = (user: UserRecord) => {\n  const { email, uid } = user;\n\n  const userDocRef = db.collection('users').doc(user.uid);\n\n  // transaction to UPSERT the user doc\n  return db.runTransaction(async tx => {\n    const userDoc = await tx.get(userDocRef);\n\n    if (userDoc.exists) {\n      tx.update(userDocRef, { email, uid });\n    } else {\n      tx.set(userDocRef, { email, uid });\n    }\n  });\n};\n\nconst findUserByMail = async (data: any, context: CallableContext): Promise => {\n  const prefix: string = decodeURIComponent(data.prefix);\n\n  // Leave if the prefix is too short (do not search every users in the universe).\n  if (prefix.length =', prefix)\n    .where('email', ' {\n      // leave if there are too many results.\n      if (query.size > 10) {\n        return [];\n      }\n\n      return query.docs.map(doc => ({ uid: doc.id, email: doc.data().email }));\n    });\n};\n\nconst findOrgByName = async (data: any, context: CallableContext): Promise => {\n  const prefix: string = decodeURIComponent(data.prefix);\n\n  // Leave if the prefix is too short (do not search every users in the universe).\n  if (prefix.length =', prefix)\n    .where('name', ' {\n      // leave if there are too many results.\n      if (matchingOrgs.size > 10) {\n        return [];\n      }\n\n      return matchingOrgs.docs.map(matchingOrg => ({\n        id: matchingOrg.id,\n        name: matchingOrg.data().name\n      }));\n    });\n};\n\nconst generatePassword = () =>\n  passwordGenerator({\n    length: 12,\n    numbers: true\n  });\n\nconst getOrCreateUserByMail = async (\n  data: any,\n  context: CallableContext\n): Promise => {\n  const { email } = data;\n\n  try {\n    const user = await auth.getUserByEmail(email);\n    return { uid: user.uid, email };\n  } catch {\n    const password = generatePassword();\n\n    // User does not exists, send them an email.\n    const user = await auth.createUser({\n      email,\n      password,\n      emailVerified: true,\n      disabled: false\n    });\n\n    await sendMail(userInvite(email, password));\n\n    return { uid: user.uid, email };\n  }\n};\n\nexport { onUserCreate, findUserByMail, findOrgByName, getOrCreateUserByMail };\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^8.1.3\n        \n            @angular/cdk : ^8.0.0\n        \n            @angular/common : ^8.1.3\n        \n            @angular/compiler : ^8.1.3\n        \n            @angular/core : ^8.1.3\n        \n            @angular/fire : ^5.1.1\n        \n            @angular/flex-layout : ^8.0.0-beta.26\n        \n            @angular/forms : ^8.1.3\n        \n            @angular/material : ^8.0.0\n        \n            @angular/platform-browser : ^8.1.3\n        \n            @angular/platform-browser-dynamic : ^8.1.3\n        \n            @angular/router : ^8.1.3\n        \n            @angular/service-worker : ^8.1.3\n        \n            @compodoc/compodoc : ^1.1.11\n        \n            @datorama/akita : ^4.10.4\n        \n            @ethersproject/abi : ^5.0.0-beta.138\n        \n            @ethersproject/abstract-provider : ^5.0.0-beta.132\n        \n            @ethersproject/abstract-signer : ^5.0.0-beta.133\n        \n            @ethersproject/address : ^5.0.0-beta.129\n        \n            @ethersproject/bignumber : ^5.0.0-beta.131\n        \n            @ethersproject/bytes : ^5.0.0-beta.130\n        \n            @ethersproject/contracts : ^5.0.0-beta.138\n        \n            @ethersproject/hash : ^5.0.0-beta.129\n        \n            @ethersproject/hdnode : ^5.0.0-beta.131\n        \n            @ethersproject/keccak256 : ^5.0.0-beta.128\n        \n            @ethersproject/providers : ^5.0.0-beta.142\n        \n            @ethersproject/signing-key : ^5.0.0-beta.130\n        \n            @ethersproject/strings : ^5.0.0-beta.131\n        \n            @ethersproject/wallet : ^5.0.0-beta.131\n        \n            @fullpage/angular-fullpage : 0.0.11\n        \n            @google-cloud/pubsub : ^0.24.1\n        \n            @google-cloud/storage : ^2.4.2\n        \n            @ngmodule/material-carousel : ^0.5.0\n        \n            @ngrx/effects : 8.1.0\n        \n            @ngrx/router-store : 8.1.0\n        \n            @ngrx/store : 8.1.0\n        \n            @nrwl/angular : 8.4.1\n        \n            @schematics/angular : ^8.1.3\n        \n            @sendgrid/mail : ^6.4.0\n        \n            @types/sendgrid : ^4.3.0\n        \n            akita-ng-fire : ^1.5.0\n        \n            algoliasearch : ^3.33.0\n        \n            core-js : ^2.6.4\n        \n            ethereum-blockies-base64 : ^1.0.2\n        \n            express : 4.16.4\n        \n            firebase : ^5.8.2\n        \n            firebase-admin : ^8.2.0\n        \n            firebase-functions : ^3.0.2\n        \n            generate-password : ^1.4.2\n        \n            hammerjs : ^2.0.8\n        \n            line-reader : ^0.4.0\n        \n            lodash : ^4.17.11\n        \n            ngx-mat-select-search : ^1.7.2\n        \n            node-gyp : ^4.0.0\n        \n            npm : ^6.9.0\n        \n            pdfmake : ^0.1.57\n        \n            punycode : ^2.1.1\n        \n            request : ^2.88.0\n        \n            rxjs : ~6.5.2\n        \n            saturn-datepicker : ^7.4.0\n        \n            tmp : 0.0.33\n        \n            xlsx : ^0.14.3\n        \n            zone.js : ^0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppAccessStatus   (apps/.../types.ts)\n                        \n                        \n                            DeliveryStatus   (libs/.../delivery.firestore.ts)\n                        \n                        \n                            InvitationStatus   (libs/.../invitation.firestore.ts)\n                        \n                        \n                            InvitationType   (libs/.../invitation.firestore.ts)\n                        \n                        \n                            MaterialStatus   (libs/.../material.firestore.ts)\n                        \n                        \n                            NotificationType   (libs/.../notification.firestore.ts)\n                        \n                        \n                            OrganizationStatus   (libs/.../organization.firestore.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/backend-functions/src/data/types.ts\n    \n        \n            \n                \n                    \n                        \n                        AppAccessStatus\n                    \n                \n                        \n                            \n                                 requested\n                            \n                        \n                        \n                            \n                                Value : requested\n                            \n                        \n                        \n                            \n                                 pending\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n                        \n                            \n                                 accepted\n                            \n                        \n                        \n                            \n                                Value : accepted\n                            \n                        \n            \n        \n\n    libs/material/src/lib/delivery/+state/delivery.firestore.ts\n    \n        \n            \n                \n                    \n                        \n                        DeliveryStatus\n                    \n                \n                        \n                            \n                                 negociation\n                            \n                        \n                        \n                            \n                                Value : Delivery in negotiation\n                            \n                        \n                        \n                            \n                                 pending\n                            \n                        \n                        \n                            \n                                Value : Materials pending\n                            \n                        \n                        \n                            \n                                 noa\n                            \n                        \n                        \n                            \n                                Value : Notice of Availability\n                            \n                        \n                        \n                            \n                                 nod\n                            \n                        \n                        \n                            \n                                Value : Notice of Delivery\n                            \n                        \n                        \n                            \n                                 accepted\n                            \n                        \n                        \n                            \n                                Value : Materials accepted\n                            \n                        \n            \n        \n\n    libs/notification/src/lib/invitation/+state/invitation.firestore.ts\n    \n        \n            \n                \n                    \n                        \n                        InvitationStatus\n                    \n                \n                    \n                        \n                            Status of an Invitation. Set to pending by default, get erased if accepted, archived if declined. \n\n                        \n                    \n                        \n                            \n                                 accepted\n                            \n                        \n                        \n                            \n                                Value : accepted\n                            \n                        \n                        \n                            \n                                 declined\n                            \n                        \n                        \n                            \n                                Value : declined\n                            \n                        \n                        \n                            \n                                 pending\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        InvitationType\n                    \n                \n                    \n                        \n                            Type of Invitation depending of its purpose. \n\n                        \n                    \n                        \n                            \n                                 fromUserToOrganization\n                            \n                        \n                        \n                            \n                                Value : fromUserToOrganization\n                            \n                        \n                        \n                            \n                                 fromOrganizationToUser\n                            \n                        \n                        \n                            \n                                Value : fromOrganizationToUser\n                            \n                        \n                        \n                            \n                                 toWorkOnDocument\n                            \n                        \n                        \n                            \n                                Value : toWorkOnDocument\n                            \n                        \n            \n        \n\n    libs/material/src/lib/material/+state/material.firestore.ts\n    \n        \n            \n                \n                    \n                        \n                        MaterialStatus\n                    \n                \n                        \n                            \n                                 pending\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n                        \n                            \n                                 available\n                            \n                        \n                        \n                            \n                                Value : available\n                            \n                        \n                        \n                            \n                                 delivered\n                            \n                        \n                        \n                            \n                                Value : delivered\n                            \n                        \n            \n        \n\n    libs/notification/src/lib/notification/+state/notification.firestore.ts\n    \n        \n            \n                \n                    \n                        \n                        NotificationType\n                    \n                \n                    \n                        \n                            Type of Notification depending of its origin. \n\n                        \n                    \n                        \n                            \n                                 newSignature\n                            \n                        \n                        \n                            \n                                Value : newSignature\n                            \n                        \n                        \n                            \n                                 finalSignature\n                            \n                        \n                        \n                            \n                                Value : finalSignature\n                            \n                        \n                        \n                            \n                                 createDocument\n                            \n                        \n                        \n                            \n                                Value : createDocument\n                            \n                        \n                        \n                            \n                                 deleteDocument\n                            \n                        \n                        \n                            \n                                Value : deleteDocument\n                            \n                        \n                        \n                            \n                                 inviteOrganization\n                            \n                        \n                        \n                            \n                                Value : inviteOrganization\n                            \n                        \n                        \n                            \n                                 removeOrganization\n                            \n                        \n                        \n                            \n                                Value : removeOrganization\n                            \n                        \n                        \n                            \n                                 pathToDocument\n                            \n                        \n                        \n                            \n                                Value : pathToDocument\n                            \n                        \n            \n        \n\n    libs/organization/src/lib/+state/organization.firestore.ts\n    \n        \n            \n                \n                    \n                        \n                        OrganizationStatus\n                    \n                \n                    \n                        \n                            Status of an Organization, set to pending by default when an Organization is created. \n\n                        \n                    \n                        \n                            \n                                 pending\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n                        \n                            \n                                 accepted\n                            \n                        \n                        \n                            \n                                Value : accepted\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nBlockframes\nWorking with nx\n# nvm use v9.10\nng generate @nrwl/schematics:node-application catalog-marketplace\n# directory: leave empty\n# tags: leave emptyIssues regarding application creation\nhttps://github.com/nrwl/nx/issues/1104\nEnvironments\nEnvironments variables are used to adapt the application to different execution environment.\nThe main environments to be aware of are: local development, continuous integration, staging and production.\nEach app uses its own environment/ folder. Shared environments are stored in the root /env folder.\nSetup\nPrep your environment\n# Copy the template into your env local dev env:\ncp ./env/env.template.ts ./env/env.ts\n# Then edit it with your values.Setup the authentication\n\nIn the firebase console, authentication, enable the email / password auth.\nCreate a service account to use the admin locally.\n\nexport GOOGLE_APPLICATION_CREDENTIALS=some/path/service-account-for-your-firebase.jsonSetup your secrets\nexport SENDGRID_API_KEY=\"\"\nexport MNEMONIC=\"\"Running and testing\nnpm run start # starts your server in dev mode, hmr, etc\nnpm run e2e:dev # starts cypress when your server is already running\nnpm run lint, npm run test, etc. # check this in your package.jsonDeploy\nnpm run build:all\nfirebase deployData\nCloud Storage:\nWe upload IP documents to the default bucket at path:\n/ip/{ipID}/version/{versionID}\nFirestore:\nWe store ip documents version in:\n/ip/{ipID}/version/{versionID}\nWe de-normalize the hash at:\n/hash/{documentHash}\nThis lets us find the original document ({ipID, versionID})\nwhen a Timestamp event is received from the blockchain.\nSetup: in your firebase console, hosting section,\ncreate a bucket called blockframes-backups for the backup functions.\nCORS policy\nInstall gcloud\n# Example for Linux :\ncurl https://sdk.cloud.google.com | bash\ngcloud init\n# For other OS see https://cloud.google.com/storage/docs/gsutil_installCreate a file named cors.json with:\n[\n    {\n      \"origin\": [\"*\"],\n      \"method\": [\"GET\"],\n      \"maxAgeSeconds\": 3600\n    }\n]Push this file with gsutil\n#https://firebase.google.com/docs/storage/web/download-files\ngsutil cors set cors.json gs://blockframes-vincent.appspot.com\nrm cors.jsoneth-events-server\nNotes\nFor each {contractName: addresse} in the environment,\nthe service will listen to every events and push their content\nto a pubsub topic named: {topicRootName}.{contractName}.\nSomething like: eth-events-server.ScriptHash\nSetup\nIn your gcloud project,\nCreate a service account, with roles:\n\npubsub edit (publish messages)\npubsub edit (manage topics)\n\nDownload the keys and export an env variable that points to your json key\nexport GOOGLE_APPLICATION_CREDENTIALS=./blockframes-laurent-230215-ccf4f1949393.jsonBuild & Run with Docker\nng build eth-events-server\ndocker build . --tag=eth-events-server:0.0.1\ndocker run -v ${PWD}/blockframes-laurent-702feef93c99.json:/app/creds.json \\\n    --rm -p 3333 -t -i eth-events-server:0.0.1\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 blockframes\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    63 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CallableContext   (apps/.../users.ts)\n                        \n                        \n                            CollectionReference   (apps/.../backup.ts)\n                        \n                        \n                            CurrencyCode   (libs/.../material.firestore.ts)\n                        \n                        \n                            CurrencyCode   (libs/.../delivery.firestore.ts)\n                        \n                        \n                            DocumentReference   (apps/.../backup.ts)\n                        \n                        \n                            DocumentReference   (apps/.../firebase.ts)\n                        \n                        \n                            Firestore   (apps/.../backup.ts)\n                        \n                        \n                            IDMap   (apps/.../types.ts)\n                        \n                        \n                            InvitationDocument   (libs/.../invitation.firestore.ts)\n                        \n                        \n                            InvitationOrUndefined   (libs/.../invitation.firestore.ts)\n                        \n                        \n                            QueryDocumentSnapshot   (apps/.../backup.ts)\n                        \n                        \n                            QuerySnapshot   (apps/.../backup.ts)\n                        \n                        \n                            Timestamp   (libs/.../template.firestore.ts)\n                        \n                        \n                            Timestamp   (libs/.../delivery.firestore.ts)\n                        \n                        \n                            Timestamp   (libs/.../movie.firestore.ts)\n                        \n                        \n                            Timestamp   (libs/.../invitation.firestore.ts)\n                        \n                        \n                            TxReceipt   (apps/.../relayer.ts)\n                        \n                        \n                            TxResponse   (apps/.../relayer.ts)\n                        \n                        \n                            UserRecord   (apps/.../users.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/backend-functions/src/users.ts\n    \n    \n        \n            \n                \n                    \n                    CallableContext\n                \n            \n            \n                \n                            functions.https.CallableContext\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UserRecord\n                \n            \n            \n                \n                            admin.auth.UserRecord\n\n                \n            \n        \n    \n    apps/backend-functions/src/backup.ts\n    \n    \n        \n            \n                \n                    \n                    CollectionReference\n                \n            \n            \n                \n                            admin.firestore.CollectionReference\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DocumentReference\n                \n            \n            \n                \n                        admin.firestore.DocumentReference\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Firestore\n                \n            \n            \n                \n                            admin.firestore.Firestore\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QueryDocumentSnapshot\n                \n            \n            \n                \n                            admin.firestore.QueryDocumentSnapshot\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QuerySnapshot\n                \n            \n            \n                \n                            admin.firestore.QuerySnapshot\n\n                \n            \n        \n    \n    libs/material/src/lib/material/+state/material.firestore.ts\n    \n    \n        \n            \n                \n                    \n                    CurrencyCode\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/material/src/lib/delivery/+state/delivery.firestore.ts\n    \n    \n        \n            \n                \n                    \n                    CurrencyCode\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Timestamp\n                \n            \n            \n                \n                            firestore.Timestamp\n\n                \n            \n        \n    \n    apps/backend-functions/src/internals/firebase.ts\n    \n    \n        \n            \n                \n                    \n                    DocumentReference\n                \n            \n            \n                \n                        admin.firestore.DocumentReference\n\n                \n            \n        \n    \n    apps/backend-functions/src/data/types.ts\n    \n    \n        \n            \n                \n                    \n                    IDMap\n                \n            \n            \n                \n                    Types used by the firebase backend.\nDefine all type to be used in the codebase. Please see the index.ts for more\ndetails on why, what and what's up next.\n\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    libs/notification/src/lib/invitation/+state/invitation.firestore.ts\n    \n    \n        \n            \n                \n                    \n                    InvitationDocument\n                \n            \n            \n                \n                    Specific types of Invitation, both used in firebase functions. \n\n                \n            \n            \n                \n                        InvitationToWorkOnDocument | InvitationFromOrganizationToUser | InvitationFromUserToOrganization\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    InvitationOrUndefined\n                \n            \n            \n                \n                            InvitationDocument | undefined\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Timestamp\n                \n            \n            \n                \n                            firestore.Timestamp\n\n                \n            \n        \n    \n    libs/material/src/lib/template/+state/template.firestore.ts\n    \n    \n        \n            \n                \n                    \n                    Timestamp\n                \n            \n            \n                \n                            firestore.Timestamp\n\n                \n            \n        \n    \n    libs/movie/src/lib/movie/+state/movie.firestore.ts\n    \n    \n        \n            \n                \n                    \n                    Timestamp\n                \n            \n            \n                \n                            firestore.Timestamp\n\n                \n            \n        \n    \n    apps/backend-functions/src/relayer.ts\n    \n    \n        \n            \n                \n                    \n                    TxReceipt\n                \n            \n            \n                \n                        TransactionReceipt\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TxResponse\n                \n            \n            \n                \n                        TransactionResponse\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
